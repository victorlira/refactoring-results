Running soot scenario geoserver-manager;it.geosolutions.geoserver.rest.GeoServerRESTPublisher;publishShp(String, String, String, File, String, String);352e241e0bf2b9c4a7d640dd5ca7795e1b5d303a
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geoserver-manager/352e241e0bf2b9c4a7d640dd5ca7795e1b5d303a/original-without-dependencies/geoserver-manager-1.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,62500
Time to perform Confluence 1 Inter 1,09600
Configure Soot Confluence 2 Inter 0,36300
java.lang.NullPointerException
	at br.unb.cic.soot.graph.VisitedMethods.toString(Graph.scala:61)
	at br.unb.cic.soot.graph.StatementNode.$anonfun$pathVisitedMethodsToString$2(Graph.scala:80)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:237)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:38)
	at scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:38)
	at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:47)
	at scala.collection.TraversableLike.map(TraversableLike.scala:237)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:230)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at br.unb.cic.soot.graph.StatementNode.pathVisitedMethodsToString(Graph.scala:80)
	at br.unb.cic.soot.graph.StatementNode.toString(Graph.scala:88)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.nodeToString(ConfluenceConflict.java:126)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.lambda$pathToString$0(ConfluenceConflict.java:118)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.pathToString(ConfluenceConflict.java:120)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.toString(ConfluenceConflict.java:41)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.hashCode(ConfluenceConflict.java:135)
	at java.util.HashMap.hash(HashMap.java:339)
	at java.util.HashMap.put(HashMap.java:612)
	at java.util.HashSet.add(HashSet.java:220)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.intersectPathsByLastNode(DFPConfluenceAnalysis.java:232)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.execute(DFPConfluenceAnalysis.java:157)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:553)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geoserver-manager/352e241e0bf2b9c4a7d640dd5ca7795e1b5d303a/original-without-dependencies/geoserver-manager-1.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,80800
Runtime: 0.014s
OA interference in class GeoServerRESTPublisher, method boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String), execution of line 222 overrides 222, assigning to variable l2, 
Caused by line 222 flow:
at it.geosolutions.geoserver.rest.GeoServerRESTPublisher.publishShp(GeoServerRESTPublisher.java:222)
at it.geosolutions.geoserver.rest.encoder.GSLayerEncoder.addDefaultStyle(GSLayerEncoder.java:66)
at it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder.add(PropertyXMLEncoder.java:93)
at it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder.add(PropertyXMLEncoder.java:101)
at java.lang.String.substring(String.java:1929)
And line 222 flow:
at it.geosolutions.geoserver.rest.GeoServerRESTPublisher.publishShp(GeoServerRESTPublisher.java:222)
at it.geosolutions.geoserver.rest.encoder.GSLayerEncoder.addDefaultStyle(GSLayerEncoder.java:66)
at it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder.add(PropertyXMLEncoder.java:93)
at it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder.add(PropertyXMLEncoder.java:101)
at java.lang.String.substring(String.java:1929)
 
Time to perform OA Inter 0,89400
OA Inter Visited methods: 16
 Analysis results
----------------------------
 Number of conflicts: 28
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geoserver-manager/352e241e0bf2b9c4a7d640dd5ca7795e1b5d303a/original-without-dependencies/geoserver-manager-1.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,67400
java.lang.NullPointerException
	at br.unb.cic.soot.graph.VisitedMethods.toString(Graph.scala:61)
	at br.unb.cic.soot.graph.StatementNode.$anonfun$pathVisitedMethodsToString$2(Graph.scala:80)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:237)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:38)
	at scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:38)
	at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:47)
	at scala.collection.TraversableLike.map(TraversableLike.scala:237)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:230)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at br.unb.cic.soot.graph.StatementNode.pathVisitedMethodsToString(Graph.scala:80)
	at br.unb.cic.soot.graph.StatementNode.toString(Graph.scala:88)
	at java.lang.String.valueOf(String.java:2994)
	at scala.collection.mutable.StringBuilder.append(StringBuilder.scala:203)
	at scala.collection.TraversableOnce.$anonfun$addString$1(TraversableOnce.scala:367)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.TraversableOnce.addString(TraversableOnce.scala:360)
	at scala.collection.TraversableOnce.addString$(TraversableOnce.scala:356)
	at scala.collection.AbstractTraversable.addString(Traversable.scala:108)
	at scala.collection.TraversableOnce.mkString(TraversableOnce.scala:326)
	at scala.collection.TraversableOnce.mkString$(TraversableOnce.scala:325)
	at scala.collection.AbstractTraversable.mkString(Traversable.scala:108)
	at scala.collection.TraversableLike.toString(TraversableLike.scala:603)
	at scala.collection.TraversableLike.toString$(TraversableLike.scala:603)
	at scala.collection.SeqLike.toString(SeqLike.scala:693)
	at scala.collection.SeqLike.toString$(SeqLike.scala:693)
	at scala.collection.AbstractSeq.toString(Seq.scala:45)
	at br.unb.cic.soot.graph.Graph.$anonfun$reportConflicts$1(Graph.scala:498)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:237)
	at scala.collection.immutable.HashSet$HashSet1.foreach(HashSet.scala:321)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:977)
	at scala.collection.immutable.HashSet$HashTrieSet.foreach(HashSet.scala:977)
	at scala.collection.TraversableLike.map(TraversableLike.scala:237)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:230)
	at scala.collection.AbstractSet.scala$collection$SetLike$$super$map(Set.scala:51)
	at scala.collection.SetLike.map(SetLike.scala:104)
	at scala.collection.SetLike.map$(SetLike.scala:104)
	at scala.collection.AbstractSet.map(Set.scala:51)
	at br.unb.cic.soot.graph.Graph.reportConflicts(Graph.scala:498)
	at br.unb.cic.soot.svfa.SVFA.reportConflictsSVG(SVFA.scala:28)
	at br.unb.cic.analysis.Main.runDFPAnalysis(Main.java:458)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:261)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geoserver-manager/352e241e0bf2b9c4a7d640dd5ca7795e1b5d303a/original-without-dependencies/geoserver-manager-1.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,76400
Time to perform DFP Inter 0,89700
Depth limit: 5
CONFLICTS: DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 105 to 106, defined in $stack17 = new org.jdom.Element and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child)
Caused by line 105 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)
Caused by line 106 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106)
DF interference in <it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>
Data flows from execution of line 217 to 106, defined in $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>() and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child)
Caused by line 217 flow: path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)
Caused by line 106 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106)
DF interference in <it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>
Data flows from execution of line 217 to 217, defined in $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>() and propagated in specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value)
Caused by line 217 flow: path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)
Caused by line 217 flow: path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 101 to 112, defined in $stack14 = i + 1 and propagated in specialinvoke $stack9.<org.jdom.Element: void <init>(java.lang.String)>(key)
Caused by line 101 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)
Caused by line 112 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack9.<org.jdom.Element: void <init>(java.lang.String)>(key), 112)
DF interference in <it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>
Data flows from execution of line 217 to 112, defined in $stack1 = this.<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element root> and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10)
Caused by line 217 flow: path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)
Caused by line 112 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 105 to 105, defined in $stack17 = new org.jdom.Element and propagated in specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName)
Caused by line 105 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)
Caused by line 105 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>
Data flows from execution of line 217 to 217, defined in $stack1 = this.<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element root> and propagated in specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value)
Caused by line 217 flow: path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)
Caused by line 217 flow: path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 100 to 109, defined in childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i) and propagated in specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value)
Caused by line 100 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)
Caused by line 109 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 103 to 112, defined in child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName) and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10)
Caused by line 103 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)
Caused by line 112 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 112 to 112, defined in $stack9 = new org.jdom.Element and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10)
Caused by line 112 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack9.<org.jdom.Element: void <init>(java.lang.String)>(key), 112)
Caused by line 112 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 105 to 112, defined in $stack17 = new org.jdom.Element and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10)
Caused by line 105 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)
Caused by line 112 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 103 to 109, defined in child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName) and propagated in specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value)
Caused by line 103 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)
Caused by line 109 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 105 to 109, defined in $stack17 = new org.jdom.Element and propagated in specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value)
Caused by line 105 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)
Caused by line 109 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 99 to 106, defined in i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/") and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child)
Caused by line 99 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)
Caused by line 106 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 103 to 106, defined in child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName) and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child)
Caused by line 103 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)
Caused by line 106 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 99 to 105, defined in i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/") and propagated in specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName)
Caused by line 99 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)
Caused by line 105 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>
Data flows from execution of line 217 to 106, defined in $stack1 = this.<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element root> and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child)
Caused by line 217 flow: path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)
Caused by line 106 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106)
DF interference in <it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 99 to 109, defined in i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/") and propagated in specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value)
Caused by line 99 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)
Caused by line 109 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 101 to 109, defined in $stack14 = i + 1 and propagated in specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value)
Caused by line 101 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)
Caused by line 109 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109)
DF interference in <it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>
Data flows from execution of line 217 to 109, defined in $stack1 = this.<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element root> and propagated in specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value)
Caused by line 217 flow: path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)
Caused by line 109 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109)
DF interference in <it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>
Data flows from execution of line 217 to 112, defined in $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>() and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10)
Caused by line 217 flow: path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)
Caused by line 112 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 99 to 112, defined in i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/") and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10)
Caused by line 99 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)
Caused by line 112 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 100 to 106, defined in childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i) and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child)
Caused by line 100 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)
Caused by line 106 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 100 to 105, defined in childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i) and propagated in specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName)
Caused by line 100 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)
Caused by line 105 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)
DF interference in <it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>
Data flows from execution of line 217 to 109, defined in $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>() and propagated in specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value)
Caused by line 217 flow: path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)
Caused by line 109 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Data flows from execution of line 100 to 112, defined in childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i) and propagated in virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10)
Caused by line 100 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)
Caused by line 112 flow: path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112)
DF interference in <it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack17 = new org.jdom.Element,105,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = $stack17,105,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = $stack17, 105)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName),105,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack17 = new org.jdom.Element,105,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = $stack17,105,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = $stack17, 105)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10),112,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element getRoot()>,$stack1 = this.<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element root>,53,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>,$stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(),93,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10),112,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element getRoot()>,$stack1 = this.<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element root>,53,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>,$stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(),93,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),109,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack9.<org.jdom.Element: void <init>(java.lang.String)>(key),112,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack9.<org.jdom.Element: void <init>(java.lang.String)>(key), 112))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>("/"),98,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if $stack8 == 0 goto $stack9 = new org.jdom.Element,98,SinkNode, path: )), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element getRoot()>,$stack1 = this.<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element root>,53,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element getRoot()>,return $stack1,53,SinkNode, path: )), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element getRoot()>,$stack1 = this.<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element root>,53,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>,$stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(),93,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value),93,SinkNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),109,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack17 = new org.jdom.Element,105,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName),105,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10),112,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),109,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: )), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: )), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>,$stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(),93,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10),112,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack9 = new org.jdom.Element,112,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack9.<org.jdom.Element: void <init>(java.lang.String)>(key), 112)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack10 = virtualinvoke $stack9.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(value),112,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack10 = virtualinvoke $stack9.<org.jdom.Element: org.jdom.Element setText(java.lang.String)>(value), 112)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10),112,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),109,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>("/"),98,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if $stack8 == 0 goto $stack9 = new org.jdom.Element,98,SinkNode, path: )), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10),112,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: )), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack14 = i + 1,101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack14 = i + 1, 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14),101,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, newkey = virtualinvoke key.<java.lang.String: java.lang.String substring(int)>($stack14), 101)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,key := @parameter1: java.lang.String,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>("/"),98,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, $stack8 = virtualinvoke key.<java.lang.String: boolean contains(java.lang.CharSequence)>('/'), 98)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if $stack8 == 0 goto $stack9 = new org.jdom.Element,98,SinkNode, path: )), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10),112,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>($stack10), 112))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>,$stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(),93,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value),93,SinkNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack17 = new org.jdom.Element,105,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = $stack17,105,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = $stack17, 105)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: )), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>("/"),99,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, i = virtualinvoke key.<java.lang.String: int indexOf(java.lang.String)>('/'), 99)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName),105,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i),100,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, childName = virtualinvoke key.<java.lang.String: java.lang.String substring(int,int)>(0, i), 100)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),109,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>,$stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(),93,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),109,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element getRoot()>,$stack1 = this.<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element root>,53,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>,$stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(),93,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element getRoot()>,$stack1 = this.<it.geosolutions.geoserver.rest.encoder.utils.XmlElement: org.jdom.Element root>,53,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>,$stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(),93,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: )), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>,$stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(),93,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName),103,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = virtualinvoke e.<org.jdom.Element: org.jdom.Element getChild(java.lang.String)>(childName), 103)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,if child != null goto specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),104,SinkNode, path: )), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,$stack17 = new org.jdom.Element,105,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke $stack17.<org.jdom.Element: void <init>(java.lang.String)>(childName), 105)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,child = $stack17,105,SourceNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, child = $stack17, 105)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value),109,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>(child, newkey, value), 109))), List(Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>,$stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(),93,SourceNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, $stack3 = virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: org.jdom.Element getRoot()>(), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,e := @parameter0: org.jdom.Element,-1,SimpleNode, path: (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String,java.lang.String)>, sent = virtualinvoke this.<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>(workspace, storename, layerName, zipFile, nativeCrs), 217) => (<it.geosolutions.geoserver.rest.GeoServerRESTPublisher: boolean publishShp(java.lang.String,java.lang.String,java.lang.String,java.io.File,java.lang.String)>, specialinvoke $stack51.<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>(), 271) => (<it.geosolutions.geoserver.rest.encoder.feature.GSFeatureTypeEncoder: void <init>()>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>('featureType'), 40) => (<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void <init>(java.lang.String)>, virtualinvoke this.<it.geosolutions.geoserver.rest.encoder.GSResourceEncoder: void add(java.lang.String,java.lang.String)>('enabled', 'true'), 63) => (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(java.lang.String,java.lang.String)>, specialinvoke this.<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>($stack3, key, value), 93)) => Node(<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>,virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child),106,SinkNode, path: (<it.geosolutions.geoserver.rest.encoder.utils.PropertyXMLEncoder: void add(org.jdom.Element,java.lang.String,java.lang.String)>, virtualinvoke e.<org.jdom.Element: org.jdom.Element addContent(org.jdom.Content)>(child), 106)))]
Visited methods: 33
 Analysis results
----------------------------
 Number of conflicts: 36
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geoserver-manager/352e241e0bf2b9c4a7d640dd5ca7795e1b5d303a/original-without-dependencies/geoserver-manager-1.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,48000
Time to perform PDG 0,34800
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/geoserver-manager/352e241e0bf2b9c4a7d640dd5ca7795e1b5d303a/original-without-dependencies/geoserver-manager-1.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,69800
Time to perform PDG 0,37400
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
