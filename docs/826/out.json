[
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = <org.openpnp.vision.pipeline.ui.CvPipelineEditor: java.util.Set stageClasses>",
"location": {
  "file": "",
  "class": "org.openpnp.vision.pipeline.ui.CvPipelineEditor",
  "method": "<org.openpnp.vision.pipeline.ui.CvPipelineEditor: void registerStageClass(java.lang.Class)>",
  "line": "204"
},
"stackTrace": ["(<org.openpnp.vision.pipeline.ui.CvPipelineEditor: void <clinit>()>, staticinvoke <org.openpnp.vision.pipeline.ui.CvPipelineEditor: void registerStageClass(java.lang.Class)>(class 'Lorg/openpnp/vision/pipeline/stages/AdaptiveHistogramEqualize;'), 90)","(<org.openpnp.vision.pipeline.ui.CvPipelineEditor: void registerStageClass(java.lang.Class)>, interfaceinvoke $stack1.<java.util.Set: boolean add(java.lang.Object)>(cls), 204)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack1.<java.util.Set: boolean add(java.lang.Object)>(cls)",
"location": {
  "file": "",
  "class": "org.openpnp.vision.pipeline.ui.CvPipelineEditor",
  "method": "<org.openpnp.vision.pipeline.ui.CvPipelineEditor: void registerStageClass(java.lang.Class)>",
  "line": "204"
},
"stackTrace": ["(<org.openpnp.vision.pipeline.ui.CvPipelineEditor: void <clinit>()>, staticinvoke <org.openpnp.vision.pipeline.ui.CvPipelineEditor: void registerStageClass(java.lang.Class)>(class 'Lorg/openpnp/vision/pipeline/stages/AdaptiveHistogramEqualize;'), 90)","(<org.openpnp.vision.pipeline.ui.CvPipelineEditor: void registerStageClass(java.lang.Class)>, interfaceinvoke $stack1.<java.util.Set: boolean add(java.lang.Object)>(cls), 204)"]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack1 = <org.openpnp.vision.pipeline.ui.CvPipelineEditor: java.util.Set stageClasses>",
"location": {
  "file": "",
  "class": "org.openpnp.vision.pipeline.ui.CvPipelineEditor",
  "method": "<org.openpnp.vision.pipeline.ui.CvPipelineEditor: void registerStageClass(java.lang.Class)>",
  "line": "204"
},
"stackTrace": ["(<org.openpnp.vision.pipeline.ui.CvPipelineEditor: void <clinit>()>, staticinvoke <org.openpnp.vision.pipeline.ui.CvPipelineEditor: void registerStageClass(java.lang.Class)>(class 'Lorg/openpnp/vision/pipeline/stages/AdaptiveHistogramEqualize;'), 90)","(<org.openpnp.vision.pipeline.ui.CvPipelineEditor: void registerStageClass(java.lang.Class)>, interfaceinvoke $stack1.<java.util.Set: boolean add(java.lang.Object)>(cls), 204)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "interfaceinvoke $stack1.<java.util.Set: boolean add(java.lang.Object)>(cls)",
"location": {
  "file": "",
  "class": "org.openpnp.vision.pipeline.ui.CvPipelineEditor",
  "method": "<org.openpnp.vision.pipeline.ui.CvPipelineEditor: void registerStageClass(java.lang.Class)>",
  "line": "204"
},
"stackTrace": ["(<org.openpnp.vision.pipeline.ui.CvPipelineEditor: void <clinit>()>, staticinvoke <org.openpnp.vision.pipeline.ui.CvPipelineEditor: void registerStageClass(java.lang.Class)>(class 'Lorg/openpnp/vision/pipeline/stages/AdaptiveHistogramEqualize;'), 90)","(<org.openpnp.vision.pipeline.ui.CvPipelineEditor: void registerStageClass(java.lang.Class)>, interfaceinvoke $stack1.<java.util.Set: boolean add(java.lang.Object)>(cls), 204)"]
}]
}
}

]
