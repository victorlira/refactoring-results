List(Node(<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>,uri = interfaceinvoke httpRequest.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>(),92,SourceNode, path: (<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>, uri = interfaceinvoke httpRequest.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>(), 92)) => Node(<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>,$stack111 = virtualinvoke $stack110.<spark.route.SimpleRouteMatcher: spark.route.RouteMatch findTargetForRequestedRoute(spark.route.HttpMethod,java.lang.String,java.lang.String)>($stack109, uri, acceptType),138,SimpleNode, path: (<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>, $stack111 = virtualinvoke $stack110.<spark.route.SimpleRouteMatcher: spark.route.RouteMatch findTargetForRequestedRoute(spark.route.HttpMethod,java.lang.String,java.lang.String)>($stack109, uri, acceptType), 138)) => Node(<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>,if $stack111 == null goto $stack112 = null,138,SimpleNode, path: ) => Node(<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>,$stack112 = "",141,SimpleNode, path: (<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>, bodyContent = $stack112, 138)) => Node(<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>,bodyContent = $stack112,138,SimpleNode, path: (<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>, bodyContent = $stack112, 138)) => Node(<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>,bodyContent = bodyAfterFilter,190,SimpleNode, path: (<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>, bodyContent = bodyAfterFilter, 190)) => Node(<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>,bodyContent = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("<html><body><h2>404 Not found</h2></body></html>", $stack66),233,SimpleNode, path: (<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>, bodyContent = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>('<html><body><h2>404 Not found</h2></body></html>', $stack66), 233)) => Node(<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>,virtualinvoke $stack53.<spark.webserver.SerializerChain: void process(java.io.OutputStream,java.lang.Object)>(tmp$566042862, bodyContent),243,SinkNode, path: (<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>, virtualinvoke $stack53.<spark.webserver.SerializerChain: void process(java.io.OutputStream,java.lang.Object)>(tmp$566042862, bodyContent), 243)))

List(Node(<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>,uri = interfaceinvoke httpRequest.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>(),92,SourceNode, path: (<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>, uri = interfaceinvoke httpRequest.<javax.servlet.http.HttpServletRequest: java.lang.String getPathInfo()>(), 92)) => Node(<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>,filterMatch = virtualinvoke $stack43.<spark.route.SimpleRouteMatcher: spark.route.RouteMatch findTargetForRequestedRoute(spark.route.HttpMethod,java.lang.String,java.lang.String)>(httpMethod#14, uri, acceptType),130,SimpleNode, path: (<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>, filterMatch = virtualinvoke $stack43.<spark.route.SimpleRouteMatcher: spark.route.RouteMatch findTargetForRequestedRoute(spark.route.HttpMethod,java.lang.String,java.lang.String)>(httpMethod#14, uri, acceptType), 130)) => Node(<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>,filterTarget = virtualinvoke filterMatch.<spark.route.RouteMatch: java.lang.Object getTarget()>(),134,SimpleNode, path: (<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>, filterTarget = virtualinvoke filterMatch.<spark.route.RouteMatch: java.lang.Object getTarget()>(), 134)) => Node(<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>,if filterTarget == null goto $stack47 = this.<spark.webserver.MatcherFilter: spark.route.SimpleRouteMatcher routeMatcher>,141,SimpleNode, path: ) => Node(<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>,request#23 = null,143,SinkNode, path: (<spark.webserver.MatcherFilter: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)>, bodyContent = request#23, 162)))

