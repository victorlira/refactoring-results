Running soot scenario datasift-java;org.datasift.streamconsumer.HttpThread;run();27ae5e0af9801b9e37cd960e12136404eae3676e
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/datasift-java/27ae5e0af9801b9e37cd960e12136404eae3676e/original-without-dependencies/datasift-java-1.1.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,58300
Time to perform Confluence 1 Inter 1,23200
Configure Soot Confluence 2 Inter 0,22800
Time to perform Confluence 2 Inter 0,81800
Visited methods: 78
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)) => Node(<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>,line := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108)) => Node(<org.datasift.Interaction: void <init>(java.lang.String)>,source := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108) => (<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>, specialinvoke $stack3.<org.datasift.Interaction: void <init>(java.lang.String)>(line), 42)) => Node(<org.datasift.JSONdn: void <init>(java.lang.String)>,source := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108) => (<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>, specialinvoke $stack3.<org.datasift.Interaction: void <init>(java.lang.String)>(line), 42) => (<org.datasift.Interaction: void <init>(java.lang.String)>, specialinvoke this.<org.datasift.JSONdn: void <init>(java.lang.String)>(source), 23)) => Node(<org.json.JSONObject: void <init>(java.lang.String)>,source := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, virtualinvoke this.<org.datasift.Definition: void compile()>(), 139) => (<org.datasift.Definition: void compile()>, res = virtualinvoke $stack9.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('compile', params), 285) => (<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, specialinvoke $stack63.<org.json.JSONObject: void <init>(java.lang.String)>(str), 669)) => Node(<org.json.JSONObject: void <init>(java.lang.String)>,specialinvoke $stack2.<org.json.JSONTokener: void <init>(java.lang.String)>(source),310,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, virtualinvoke this.<org.datasift.Definition: void compile()>(), 139) => (<org.datasift.Definition: void compile()>, res = virtualinvoke $stack9.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('compile', params), 285) => (<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, specialinvoke $stack63.<org.json.JSONObject: void <init>(java.lang.String)>(str), 669) => (<org.json.JSONObject: void <init>(java.lang.String)>, specialinvoke $stack2.<org.json.JSONTokener: void <init>(java.lang.String)>(source), 310))
SINK=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)) => Node(<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>,line := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108)) => Node(<org.datasift.Interaction: void <init>(java.lang.String)>,source := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108) => (<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>, specialinvoke $stack3.<org.datasift.Interaction: void <init>(java.lang.String)>(line), 42)) => Node(<org.datasift.JSONdn: void <init>(java.lang.String)>,source := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108) => (<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>, specialinvoke $stack3.<org.datasift.Interaction: void <init>(java.lang.String)>(line), 42) => (<org.datasift.Interaction: void <init>(java.lang.String)>, specialinvoke this.<org.datasift.JSONdn: void <init>(java.lang.String)>(source), 23)) => Node(<org.json.JSONObject: void <init>(java.lang.String)>,source := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, virtualinvoke this.<org.datasift.Definition: void compile()>(), 139) => (<org.datasift.Definition: void compile()>, res = virtualinvoke $stack9.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('compile', params), 285) => (<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, specialinvoke $stack63.<org.json.JSONObject: void <init>(java.lang.String)>(str), 669)) => Node(<org.json.JSONObject: void <init>(java.lang.String)>,specialinvoke $stack2.<org.json.JSONTokener: void <init>(java.lang.String)>(source),310,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, virtualinvoke this.<org.datasift.Definition: void compile()>(), 139) => (<org.datasift.Definition: void compile()>, res = virtualinvoke $stack9.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('compile', params), 285) => (<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, specialinvoke $stack63.<org.json.JSONObject: void <init>(java.lang.String)>(str), 669) => (<org.json.JSONObject: void <init>(java.lang.String)>, specialinvoke $stack2.<org.json.JSONTokener: void <init>(java.lang.String)>(source), 310)), SOURCE=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>(), 136)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>(), 136) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>(), 136)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack72 = virtualinvoke line.<java.lang.String: int length()>(),105,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack72 = virtualinvoke line.<java.lang.String: int length()>(), 105))
SINK=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>(), 136)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>(), 136) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>(), 136)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack72 = virtualinvoke line.<java.lang.String: int length()>(),105,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack72 = virtualinvoke line.<java.lang.String: int length()>(), 105)), SOURCE=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)) => Node(<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>,line := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108)) => Node(<org.datasift.Interaction: void <init>(java.lang.String)>,source := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108) => (<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>, specialinvoke $stack3.<org.datasift.Interaction: void <init>(java.lang.String)>(line), 42)) => Node(<org.datasift.Interaction: void <init>(java.lang.String)>,this.<org.datasift.Interaction: java.lang.String source> = source,24,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108) => (<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>, specialinvoke $stack3.<org.datasift.Interaction: void <init>(java.lang.String)>(line), 42) => (<org.datasift.Interaction: void <init>(java.lang.String)>, this.<org.datasift.Interaction: java.lang.String source> = source, 24))
SINK=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)) => Node(<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>,line := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108)) => Node(<org.datasift.Interaction: void <init>(java.lang.String)>,source := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108) => (<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>, specialinvoke $stack3.<org.datasift.Interaction: void <init>(java.lang.String)>(line), 42)) => Node(<org.datasift.Interaction: void <init>(java.lang.String)>,this.<org.datasift.Interaction: java.lang.String source> = source,24,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108) => (<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>, specialinvoke $stack3.<org.datasift.Interaction: void <init>(java.lang.String)>(line), 42) => (<org.datasift.Interaction: void <init>(java.lang.String)>, this.<org.datasift.Interaction: java.lang.String source> = source, 24)), SOURCE=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line),108,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108))
SINK=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line),108,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108)), SOURCE=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack67 = new java.io.InputStreamReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack67.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($stack69), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67),96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96))
SINK=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack67 = new java.io.InputStreamReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack67.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($stack69), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67),96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)), SOURCE=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)) => Node(<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>,line := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108)) => Node(<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>,specialinvoke $stack3.<org.datasift.Interaction: void <init>(java.lang.String)>(line),42,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108) => (<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>, specialinvoke $stack3.<org.datasift.Interaction: void <init>(java.lang.String)>(line), 42))
SINK=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)) => Node(<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>,line := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108)) => Node(<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>,specialinvoke $stack3.<org.datasift.Interaction: void <init>(java.lang.String)>(line),42,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108) => (<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>, specialinvoke $stack3.<org.datasift.Interaction: void <init>(java.lang.String)>(line), 42)), SOURCE=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99))
SINK=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)), SOURCE=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,get#40 = $stack80,151,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, get#40 = $stack80, 151)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reason = virtualinvoke get#40.<org.datasift.EAccessDenied: java.lang.String getMessage()>(),152,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reason = virtualinvoke get#40.<org.datasift.EAccessDenied: java.lang.String getMessage()>(), 152)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>(), 136)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>(), 136) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>(), 136))
SINK=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>(), 136)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>(), 136) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>(), 136)), SOURCE=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,if line != null goto $stack72 = virtualinvoke line.<java.lang.String: int length()>(),100,SinkNode, path: )
SINK=>BASE: Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack66 = new java.io.BufferedReader,94,SourceNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reader#7 = $stack66,96,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reader#7 = $stack66, 96)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(),99,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,if line != null goto $stack72 = virtualinvoke line.<java.lang.String: int length()>(),100,SinkNode, path: )]
Confluence interference in <org.datasift.streamconsumer.HttpThread: void run()>
Confluence flows from execution of lines 96 and 96 to line 85, defined in specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67) and specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67) and used in $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>()
Caused by line 96 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)
Caused by line 96 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)
Caused by line 85 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, virtualinvoke this.<org.datasift.Definition: void compile()>(), 139) => (<org.datasift.Definition: void compile()>, res = virtualinvoke $stack9.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('compile', params), 285) => (<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, specialinvoke $stack63.<org.json.JSONObject: void <init>(java.lang.String)>(str), 669) => (<org.json.JSONObject: void <init>(java.lang.String)>, specialinvoke $stack2.<org.json.JSONTokener: void <init>(java.lang.String)>(source), 310)
Confluence interference in <org.datasift.streamconsumer.HttpThread: void run()>
Confluence flows from execution of lines 96 and 96 to line 105, defined in specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67) and specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67) and used in $stack72 = virtualinvoke line.<java.lang.String: int length()>()
Caused by line 96 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)
Caused by line 96 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)
Caused by line 105 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack72 = virtualinvoke line.<java.lang.String: int length()>(), 105)
Confluence interference in <org.datasift.streamconsumer.HttpThread: void run()>
Confluence flows from execution of lines 96 and 96 to line 108, defined in specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67) and specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67) and used in virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line)
Caused by line 96 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)
Caused by line 96 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)
Caused by line 108 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, virtualinvoke this.<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>(line), 108) => (<org.datasift.streamconsumer.HttpThread: void processLine(java.lang.String)>, specialinvoke $stack3.<org.datasift.Interaction: void <init>(java.lang.String)>(line), 42) => (<org.datasift.Interaction: void <init>(java.lang.String)>, this.<org.datasift.Interaction: java.lang.String source> = source, 24)
Confluence interference in <org.datasift.streamconsumer.HttpThread: void run()>
Confluence flows from execution of lines 96 and 96 to line 96, defined in specialinvoke $stack67.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($stack69) and specialinvoke $stack67.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($stack69) and used in specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67)
Caused by line 96 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack67.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($stack69), 96)
Caused by line 96 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack67.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($stack69), 96)
Caused by line 96 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)
Confluence interference in <org.datasift.streamconsumer.HttpThread: void run()>
Confluence flows from execution of lines 96 and 96 to line 99, defined in specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67) and specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67) and used in line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>()
Caused by line 96 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)
Caused by line 96 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)
Caused by line 99 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, line = virtualinvoke reader#7.<java.io.BufferedReader: java.lang.String readLine()>(), 99)
Confluence interference in <org.datasift.streamconsumer.HttpThread: void run()>
Confluence flows from execution of lines 151 and 96 to line 85, defined in get#40 = $stack80 and specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67) and used in $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>()
Caused by line 151 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, get#40 = $stack80, 151)
Caused by line 96 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, specialinvoke $stack66.<java.io.BufferedReader: void <init>(java.io.Reader)>($stack67), 96)
Caused by line 85 flow: path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack36 = virtualinvoke $stack35.<org.datasift.Definition: java.lang.String getHash()>(), 85) => (<org.datasift.Definition: java.lang.String getHash()>, $stack3 = virtualinvoke $stack2.<java.lang.String: int length()>(), 136)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/datasift-java/27ae5e0af9801b9e37cd960e12136404eae3676e/original-without-dependencies/datasift-java-1.1.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,76100
Runtime: 0.027s
OA interference in class HttpThread, method void run(), execution of line 79 overrides 79, assigning to variable reader#7, 
Caused by line 79 flow:
at org.datasift.streamconsumer.HttpThread.run(HttpThread.java:79)
And line 79 flow:
at org.datasift.streamconsumer.HttpThread.run(HttpThread.java:79)
 
OA interference in class HttpThread, method void run(), execution of line 179 overrides 179, assigning to variable client#55, 
Caused by line 179 flow:
at org.datasift.streamconsumer.HttpThread.run(HttpThread.java:179)
And line 179 flow:
at org.datasift.streamconsumer.HttpThread.run(HttpThread.java:179)
 
Time to perform OA Inter 0,86500
OA Inter Visited methods: 8
 Analysis results
----------------------------
 Number of conflicts: 5
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/datasift-java/27ae5e0af9801b9e37cd960e12136404eae3676e/original-without-dependencies/datasift-java-1.1.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,46600
Time to perform DFP Inter 0,89100
Depth limit: 5
CONFLICTS: []
Visited methods: 39
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/datasift-java/27ae5e0af9801b9e37cd960e12136404eae3676e/original-without-dependencies/datasift-java-1.1.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,47500
Time to perform DFP Inter 0,95100
Depth limit: 5
CONFLICTS: []
Visited methods: 39
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/datasift-java/27ae5e0af9801b9e37cd960e12136404eae3676e/original-without-dependencies/datasift-java-1.1.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,60400
Time to perform PDG 0,61300
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/datasift-java/27ae5e0af9801b9e37cd960e12136404eae3676e/original-without-dependencies/datasift-java-1.1.1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,45900
Time to perform PDG 0,77500
CONFLICTS: [List(Node(<org.datasift.streamconsumer.HttpThread: void run()>,if $stack27 == 0 goto (branch),176,SourceNode, path: ) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,if reconnect_delay != 0 goto (branch),166,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,if reconnect_delay >= 16 goto reason = "Connection failed due to a network error",168,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reconnect_delay = reconnect_delay + 1,169,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack78 = reconnect_delay * 1000, 73)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reconnect_delay = reconnect_delay * 2,121,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack78 = reconnect_delay * 1000, 73)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reconnect_delay = 1,167,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack78 = reconnect_delay * 1000, 73)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,if reconnect_delay != 0 goto (branch),118,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reconnect_delay = 10,119,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack78 = reconnect_delay * 1000, 73)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,if reconnect_delay >= 240 goto $stack52 = new java.lang.StringBuilder,120,SimpleNode, path: ) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack56 = interfaceinvoke response.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>(),126,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack56 = interfaceinvoke response.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>(), 126)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack57 = interfaceinvoke $stack56.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>(),127,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack57 = interfaceinvoke $stack56.<org.apache.http.StatusLine: java.lang.String getReasonPhrase()>(), 127)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" "),123,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack55 = virtualinvoke $stack54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' '), 123)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,$stack58 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack57),127,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack58 = virtualinvoke $stack55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack57), 127)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reason = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>(),127,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reason = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.String toString()>(), 127)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reason = "",132,SimpleNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, $stack13 = virtualinvoke reason.<java.lang.String: int length()>(), 161)) => Node(<org.datasift.streamconsumer.HttpThread: void run()>,reason = virtualinvoke get#38.<org.datasift.EInvalidData: java.lang.String getMessage()>(),145,SinkNode, path: (<org.datasift.streamconsumer.HttpThread: void run()>, reason = virtualinvoke get#38.<org.datasift.EInvalidData: java.lang.String getMessage()>(), 145)))]
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
