Running soot scenario redpen;cc.redpen.validator.ValidatorFactory;static block;40227ac51b9b6b17183afc17af9f910131ca6f91
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/redpen/40227ac51b9b6b17183afc17af9f910131ca6f91/original-without-dependencies/redpen-core-1.5.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,53900
Time to perform Confluence 1 Inter 0,77700
Configure Soot Confluence 2 Inter 0,17700
Time to perform Confluence 2 Inter 0,25100
Visited methods: 44
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>,$stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.String getSimpleName()>(),44,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.String getSimpleName()>(), 44)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack3 = virtualinvoke $stack2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('Validator', ''), 44)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0),2239,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack3 = virtualinvoke $stack2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('Validator', ''), 44) => (<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>, $stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0), 2239))
SINK=>BASE: Node(<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>,$stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.String getSimpleName()>(),44,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.String getSimpleName()>(), 44)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack3 = virtualinvoke $stack2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('Validator', ''), 44)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0),2239,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack3 = virtualinvoke $stack2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('Validator', ''), 44) => (<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>, $stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0), 2239)), SOURCE=>BASE: Node(<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>,$stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.String getSimpleName()>(),44,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.String getSimpleName()>(), 44)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack3 = virtualinvoke $stack2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('Validator', ''), 44)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0),2239,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack3 = virtualinvoke $stack2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('Validator', ''), 44) => (<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>, $stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0), 2239)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack8 = virtualinvoke $stack5.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($stack7),2240,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack3 = virtualinvoke $stack2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('Validator', ''), 44))
SINK=>BASE: Node(<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>,$stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.String getSimpleName()>(),44,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.String getSimpleName()>(), 44)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack3 = virtualinvoke $stack2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('Validator', ''), 44)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0),2239,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack3 = virtualinvoke $stack2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('Validator', ''), 44) => (<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>, $stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0), 2239)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack8 = virtualinvoke $stack5.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($stack7),2240,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack3 = virtualinvoke $stack2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('Validator', ''), 44)), SOURCE=>BASE: Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack6 = new java.lang.StringBuilder,144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create instance of "),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Cannot create instance of '), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clazz),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clazz), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using default constructor"),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' using default constructor'), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(), 144)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10), 144)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10), 144) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10), 144) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))
SINK=>BASE: Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create instance of "),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Cannot create instance of '), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clazz),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clazz), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using default constructor"),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' using default constructor'), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(), 144)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10), 144)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10), 144) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10), 144) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)), SOURCE=>BASE: Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack6 = new java.lang.StringBuilder,144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack6.<java.lang.StringBuilder: void <init>()>(), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create instance of "),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Cannot create instance of '), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clazz),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clazz), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using default constructor"),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' using default constructor'), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(), 144)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10), 144)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10), 144) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create instance of "),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Cannot create instance of '), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clazz),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clazz), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using default constructor"),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' using default constructor'), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(), 144)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10), 144)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10), 144) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))]
Confluence interference in <cc.redpen.validator.ValidatorFactory: void <clinit>()>
Confluence flows from execution of lines 49 and 49 to line 49, defined in staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class "Lcc/redpen/validator/section/DuplicatedSectionValidator;") and staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class "Lcc/redpen/validator/section/DuplicatedSectionValidator;") and used in staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class "Lcc/redpen/validator/section/DuplicatedSectionValidator;")
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.String getSimpleName()>(), 44)
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.String getSimpleName()>(), 44)
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack3 = virtualinvoke $stack2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('Validator', ''), 44) => (<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>, $stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0), 2239)
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/redpen/40227ac51b9b6b17183afc17af9f910131ca6f91/original-without-dependencies/redpen-core-1.5.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,79700
Runtime: 0.175s
Time to perform OA Inter 1,14400
OA Inter Visited methods: 724
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/redpen/40227ac51b9b6b17183afc17af9f910131ca6f91/original-without-dependencies/redpen-core-1.5.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,52000
Time to perform DFP Inter 0,69100
Depth limit: 5
CONFLICTS: DF interference in <cc.redpen.validator.ValidatorFactory: void <clinit>()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <cc.redpen.validator.ValidatorFactory: void <clinit>()>
Data flows from execution of line 49 to 49, defined in $stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.Object newInstance()>() and propagated in interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4)
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.Object newInstance()>(), 141)
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4), 44)
DF interference in <cc.redpen.validator.ValidatorFactory: void <clinit>()>
Data flows from execution of line 49 to 49, defined in $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create instance of ") and propagated in specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10)
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Cannot create instance of '), 144)
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10), 144)
DF interference in <cc.redpen.validator.ValidatorFactory: void <clinit>()>
Data flows from execution of line 49 to 49, defined in $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz) and propagated in interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4)
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44)
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4), 44)
[List(Node(<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>,$stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz),44,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44)) => Node(<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>,interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4),44,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4), 44))), List(Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create instance of "),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Cannot create instance of '), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clazz),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clazz), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using default constructor"),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' using default constructor'), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10),144,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10), 144))), List(Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.Object newInstance()>(),141,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.Object newInstance()>(), 141)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack3 = (cc.redpen.validator.Validator) $stack2,141,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,return $stack3,141,SinkNode, path: )), List(Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.Object newInstance()>(),141,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.Object newInstance()>(), 141)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack3 = (cc.redpen.validator.Validator) $stack2,141,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44)) => Node(<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>,$stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz),44,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44)) => Node(<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>,interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4),44,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4), 44)))]
Visited methods: 22
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/redpen/40227ac51b9b6b17183afc17af9f910131ca6f91/original-without-dependencies/redpen-core-1.5.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,61800
Time to perform DFP Inter 0,64200
Depth limit: 5
CONFLICTS: DF interference in <cc.redpen.validator.ValidatorFactory: void <clinit>()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <cc.redpen.validator.ValidatorFactory: void <clinit>()>
Data flows from execution of line 49 to 49, defined in $stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.Object newInstance()>() and propagated in interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4)
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.Object newInstance()>(), 141)
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4), 44)
DF interference in <cc.redpen.validator.ValidatorFactory: void <clinit>()>
Data flows from execution of line 49 to 49, defined in $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create instance of ") and propagated in specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10)
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Cannot create instance of '), 144)
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10), 144)
DF interference in <cc.redpen.validator.ValidatorFactory: void <clinit>()>
Data flows from execution of line 49 to 49, defined in $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz) and propagated in interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4)
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44)
Caused by line 49 flow: path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4), 44)
[List(Node(<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>,$stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz),44,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44)) => Node(<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>,interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4),44,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4), 44))), List(Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create instance of "),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Cannot create instance of '), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clazz),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(clazz), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" using default constructor"),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' using default constructor'), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(),144,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(), 144)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10),144,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, specialinvoke $stack5.<java.lang.RuntimeException: void <init>(java.lang.String)>($stack10), 144))), List(Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.Object newInstance()>(),141,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.Object newInstance()>(), 141)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack3 = (cc.redpen.validator.Validator) $stack2,141,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,return $stack3,141,SinkNode, path: )), List(Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.Object newInstance()>(),141,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44) => (<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>, $stack2 = virtualinvoke clazz.<java.lang.Class: java.lang.Object newInstance()>(), 141)) => Node(<cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>,$stack3 = (cc.redpen.validator.Validator) $stack2,141,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44)) => Node(<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>,$stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz),44,SourceNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, $stack4 = staticinvoke <cc.redpen.validator.ValidatorFactory: cc.redpen.validator.Validator createValidator(java.lang.Class)>(clazz), 44)) => Node(<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>,interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4),44,SinkNode, path: (<cc.redpen.validator.ValidatorFactory: void <clinit>()>, staticinvoke <cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>(class 'Lcc/redpen/validator/section/DuplicatedSectionValidator;'), 49) => (<cc.redpen.validator.ValidatorFactory: void registerValidator(java.lang.Class)>, interfaceinvoke $stack1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($stack3, $stack4), 44)))]
Visited methods: 22
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/redpen/40227ac51b9b6b17183afc17af9f910131ca6f91/original-without-dependencies/redpen-core-1.5.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,51400
Time to perform PDG 0,58700
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/redpen/40227ac51b9b6b17183afc17af9f910131ca6f91/original-without-dependencies/redpen-core-1.5.6-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,61900
Time to perform PDG 0,58600
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
