SOURCE=>BASE: Node(<org.jboss.msc.service.NamedInjection: org.jboss.msc.service.ServiceName getName()>,$stack1 = this.<org.jboss.msc.service.NamedInjection: org.jboss.msc.service.ServiceName name>,40,SourceNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack73 = virtualinvoke dependencyController#19.<org.jboss.msc.service.NamedInjection: org.jboss.msc.service.ServiceName getName()>(), 306)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack81 = virtualinvoke dependencyController#19.<org.jboss.msc.service.NamedInjection: org.jboss.msc.service.ServiceName getName()>(),307,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack81 = virtualinvoke dependencyController#19.<org.jboss.msc.service.NamedInjection: org.jboss.msc.service.ServiceName getName()>(), 307)) => Node(<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>,serviceName := @parameter0: org.jboss.msc.service.ServiceName,-1,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack82 = virtualinvoke this.<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>($stack81), 307)) => Node(<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service "),348,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack82 = virtualinvoke this.<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>($stack81), 307) => (<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Service '), 348)) => Node(<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(serviceName),348,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack82 = virtualinvoke this.<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>($stack81), 307) => (<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(serviceName), 348)) => Node(<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found"),348,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack82 = virtualinvoke this.<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>($stack81), 307) => (<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' not found'), 348)) => Node(<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),348,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack82 = virtualinvoke this.<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>($stack81), 307) => (<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 348)) => Node(<org.jboss.msc.service.ServiceNotFoundException: void <init>(java.lang.String)>,msg := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack82 = virtualinvoke this.<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>($stack81), 307) => (<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>, specialinvoke $stack4.<org.jboss.msc.service.ServiceNotFoundException: void <init>(java.lang.String)>($stack9), 348)) => Node(<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>,msg := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, specialinvoke $stack111.<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>($stack115), 285) => (<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>(msg), 47)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, specialinvoke $stack111.<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>($stack115), 285) => (<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 47)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, specialinvoke $stack111.<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>($stack115), 285) => (<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 47) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))
SINK=>BASE: Node(<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>,$stack1 = this.<org.jboss.msc.service.BatchServiceBuilderImpl: java.util.Set aliases>,242,SourceNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack17 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(), 265) => (<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>, $stack1 = this.<org.jboss.msc.service.BatchServiceBuilderImpl: java.util.Set aliases>, 242)) => Node(<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>,$stack3 = interfaceinvoke $stack1.<java.util.Set: int size()>(),242,SourceNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack17 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(), 265) => (<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>, $stack3 = interfaceinvoke $stack1.<java.util.Set: int size()>(), 242)) => Node(<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>,$stack4 = newarray (org.jboss.msc.service.ServiceName)[$stack3],242,SourceNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack17 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(), 265) => (<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>, $stack4 = newarray (org.jboss.msc.service.ServiceName)[$stack3], 242)) => Node(<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>,$stack5 = interfaceinvoke $stack2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($stack4),242,SourceNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack17 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(), 265) => (<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>, $stack5 = interfaceinvoke $stack2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($stack4), 242)) => Node(<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>,$stack6 = (org.jboss.msc.service.ServiceName[]) $stack5,242,SourceNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack17 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(), 265)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,aliases = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(),268,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, aliases = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(), 268)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,dependencyEntry#24 = aliases,325,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, dependencyEntry#24 = aliases, 325)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,alias = dependencyEntry#24[l12],342,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, alias = dependencyEntry#24[l12], 342)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(alias),327,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(alias), 327)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>(),327,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>(), 327)) => Node(<org.jboss.msc.service.DuplicateServiceException: void <init>(java.lang.String)>,msg := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, specialinvoke $stack63.<org.jboss.msc.service.DuplicateServiceException: void <init>(java.lang.String)>($stack67), 322)) => Node(<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>,msg := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, specialinvoke $stack111.<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>($stack115), 285) => (<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>(msg), 47)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, specialinvoke $stack111.<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>($stack115), 285) => (<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 47)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, specialinvoke $stack111.<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>($stack115), 285) => (<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 47) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))

SOURCE=>BASE: Node(<org.jboss.msc.service.NamedInjection: org.jboss.msc.service.ServiceName getName()>,$stack1 = this.<org.jboss.msc.service.NamedInjection: org.jboss.msc.service.ServiceName name>,40,SourceNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack73 = virtualinvoke dependencyController#19.<org.jboss.msc.service.NamedInjection: org.jboss.msc.service.ServiceName getName()>(), 306)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack81 = virtualinvoke dependencyController#19.<org.jboss.msc.service.NamedInjection: org.jboss.msc.service.ServiceName getName()>(),307,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack81 = virtualinvoke dependencyController#19.<org.jboss.msc.service.NamedInjection: org.jboss.msc.service.ServiceName getName()>(), 307)) => Node(<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>,serviceName := @parameter0: org.jboss.msc.service.ServiceName,-1,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack82 = virtualinvoke this.<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>($stack81), 307)) => Node(<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Service "),348,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack82 = virtualinvoke this.<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>($stack81), 307) => (<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>, $stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Service '), 348)) => Node(<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>,$stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(serviceName),348,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack82 = virtualinvoke this.<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>($stack81), 307) => (<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>, $stack7 = virtualinvoke $stack6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(serviceName), 348)) => Node(<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not found"),348,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack82 = virtualinvoke this.<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>($stack81), 307) => (<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' not found'), 348)) => Node(<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(),348,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack82 = virtualinvoke this.<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>($stack81), 307) => (<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.String toString()>(), 348)) => Node(<org.jboss.msc.service.ServiceNotFoundException: void <init>(java.lang.String)>,msg := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack82 = virtualinvoke this.<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>($stack81), 307) => (<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceController getRequiredService(org.jboss.msc.service.ServiceName)>, specialinvoke $stack4.<org.jboss.msc.service.ServiceNotFoundException: void <init>(java.lang.String)>($stack9), 348)) => Node(<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>,msg := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, specialinvoke $stack111.<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>($stack115), 285) => (<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>(msg), 47)) => Node(<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg),47,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, specialinvoke $stack111.<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>($stack115), 285) => (<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 47))
SINK=>BASE: Node(<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>,$stack1 = this.<org.jboss.msc.service.BatchServiceBuilderImpl: java.util.Set aliases>,242,SourceNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack17 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(), 265) => (<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>, $stack1 = this.<org.jboss.msc.service.BatchServiceBuilderImpl: java.util.Set aliases>, 242)) => Node(<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>,$stack3 = interfaceinvoke $stack1.<java.util.Set: int size()>(),242,SourceNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack17 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(), 265) => (<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>, $stack3 = interfaceinvoke $stack1.<java.util.Set: int size()>(), 242)) => Node(<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>,$stack4 = newarray (org.jboss.msc.service.ServiceName)[$stack3],242,SourceNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack17 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(), 265) => (<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>, $stack4 = newarray (org.jboss.msc.service.ServiceName)[$stack3], 242)) => Node(<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>,$stack5 = interfaceinvoke $stack2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($stack4),242,SourceNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack17 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(), 265) => (<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>, $stack5 = interfaceinvoke $stack2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($stack4), 242)) => Node(<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>,$stack6 = (org.jboss.msc.service.ServiceName[]) $stack5,242,SourceNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack17 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(), 265)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,aliases = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(),268,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, aliases = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(), 268)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,dependencyEntry#24 = aliases,325,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, dependencyEntry#24 = aliases, 325)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,alias = dependencyEntry#24[l12],342,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, alias = dependencyEntry#24[l12], 342)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(alias),327,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(alias), 327)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>(),327,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack60 = virtualinvoke $stack59.<java.lang.StringBuilder: java.lang.String toString()>(), 327)) => Node(<org.jboss.msc.service.DuplicateServiceException: void <init>(java.lang.String)>,msg := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, specialinvoke $stack63.<org.jboss.msc.service.DuplicateServiceException: void <init>(java.lang.String)>($stack67), 322)) => Node(<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>,msg := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, specialinvoke $stack111.<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>($stack115), 285) => (<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>(msg), 47)) => Node(<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg),47,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, specialinvoke $stack111.<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>($stack115), 285) => (<org.jboss.msc.service.CircularDependencyException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ResolutionException: void <init>(java.lang.String)>, specialinvoke this.<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>(msg), 47) => (<org.jboss.msc.service.ServiceRegistryException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(msg), 47))

List(Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,if dependencyEntry == null goto $stack96 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: boolean isOptionalDependency(org.jboss.msc.service.ServiceName)>(dependencyName),276,SourceNode, path: ) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,if $stack96 == 0 goto $stack97 = new org.jboss.msc.service.MissingDependencyException,288,SourceNode, path: ) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,if $stack22 >= $stack21 goto $stack23 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: java.lang.Iterable getListeners()>(),270,SimpleNode, path: ) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,dependencyName = deps[$stack88],271,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, dependencyName = deps[$stack88], 271)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack95 = interfaceinvoke services.<java.util.Map: java.lang.Object get(java.lang.Object)>(dependencyName),275,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack95 = interfaceinvoke services.<java.util.Map: java.lang.Object get(java.lang.Object)>(dependencyName), 275)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,dependencyEntry = (org.jboss.msc.service.BatchServiceBuilderImpl) $stack95,275,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, dependencyEntry = (org.jboss.msc.service.BatchServiceBuilderImpl) $stack95, 275)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,entry = dependencyEntry,282,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, serviceValue = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.value.Value getServiceValue()>(), 258)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack17 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(),265,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack17 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(), 265)))

List(Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack96 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: boolean isOptionalDependency(org.jboss.msc.service.ServiceName)>(dependencyName),288,SourceNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack96 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: boolean isOptionalDependency(org.jboss.msc.service.ServiceName)>(dependencyName), 288)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,if $stack96 == 0 goto $stack97 = new org.jboss.msc.service.MissingDependencyException,288,SourceNode, path: ) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,if $stack22 >= $stack21 goto $stack23 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: java.lang.Iterable getListeners()>(),270,SimpleNode, path: ) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,dependencyName = deps[$stack88],271,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, dependencyName = deps[$stack88], 271)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack95 = interfaceinvoke services.<java.util.Map: java.lang.Object get(java.lang.Object)>(dependencyName),275,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack95 = interfaceinvoke services.<java.util.Map: java.lang.Object get(java.lang.Object)>(dependencyName), 275)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,dependencyEntry = (org.jboss.msc.service.BatchServiceBuilderImpl) $stack95,275,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, dependencyEntry = (org.jboss.msc.service.BatchServiceBuilderImpl) $stack95, 275)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,if dependencyEntry == null goto $stack96 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: boolean isOptionalDependency(org.jboss.msc.service.ServiceName)>(dependencyName),276,SourceNode, path: ) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,if $stack109 != 0 goto dependencyEntry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.BatchServiceBuilderImpl prev> = entry,278,SimpleNode, path: ) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack116 = dependencyEntry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.BatchServiceBuilderImpl prev>,285,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack116 = dependencyEntry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.BatchServiceBuilderImpl prev>, 285)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,if $stack116 == null goto dependencyEntry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.BatchServiceBuilderImpl prev> = entry,285,SimpleNode, path: ) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack110 = entry.<org.jboss.msc.service.BatchServiceBuilderImpl: boolean visited>,284,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack110 = entry.<org.jboss.msc.service.BatchServiceBuilderImpl: boolean visited>, 284)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,if $stack110 == 0 goto (branch),284,SimpleNode, path: ) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,if entry == null goto return,257,SimpleNode, path: ) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,serviceValue = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.value.Value getServiceValue()>(),258,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, serviceValue = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.value.Value getServiceValue()>(), 258)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack124 = virtualinvoke this.<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceBuilderImpl buildService(org.jboss.msc.service.ServiceName,org.jboss.msc.value.Value)>(name, serviceValue),263,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack124 = virtualinvoke this.<org.jboss.msc.service.ServiceContainerImpl: org.jboss.msc.service.ServiceBuilderImpl buildService(org.jboss.msc.service.ServiceName,org.jboss.msc.value.Value)>(name, serviceValue), 263)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,builder = $stack124,263,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, builder = $stack124, 263)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,dependencyController = interfaceinvoke builder.<org.jboss.msc.service.ServiceBuilder: org.jboss.msc.service.ServiceController create()>(),319,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, dependencyController = interfaceinvoke builder.<org.jboss.msc.service.ServiceBuilder: org.jboss.msc.service.ServiceController create()>(), 319)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack37 = interfaceinvoke $stack36.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(name, dependencyController),320,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack37 = interfaceinvoke $stack36.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(name, dependencyController), 320)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,if $stack37 == null goto dependencyEntry#24 = aliases,320,SimpleNode, path: ) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,l12 = 0,325,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, l12 = l12 + 1, 325)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,l12 = l12 + 1,325,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, l12 = l12 + 1, 325)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,if l12 >= l11 goto $stack40 = dependencyController,325,SimpleNode, path: ) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,dependencyEntry = entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.BatchServiceBuilderImpl prev>,335,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, dependencyEntry = entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.BatchServiceBuilderImpl prev>, 335)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,entry = dependencyEntry,341,SimpleNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, serviceValue = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.value.Value getServiceValue()>(), 258)) => Node(<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>,$stack17 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(),265,SinkNode, path: (<org.jboss.msc.service.ServiceContainerImpl: void doResolve(org.jboss.msc.service.BatchServiceBuilderImpl,java.util.Map)>, $stack17 = virtualinvoke entry.<org.jboss.msc.service.BatchServiceBuilderImpl: org.jboss.msc.service.ServiceName[] getAliases()>(), 265)))

