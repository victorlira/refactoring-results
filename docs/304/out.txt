SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),76,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack10 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>(1, 110), 44) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 76))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),76,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack10 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>(1, 110), 44) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 76))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack299 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>(10, 110), 203) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 91))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack299 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>(10, 110), 203) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 91)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack299 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>(10, 110), 203) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 91))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),81,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack87 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97), 87) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 81)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),81,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack87 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97), 87) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 81))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),81,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack87 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97), 87) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 81))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),66,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 66)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),66,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 66)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 66))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),66,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 66)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 66))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),71,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack12 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 45) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 71))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),71,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack12 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 45) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 71))

SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack89 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99), 88) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 86)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack89 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99), 88) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 86))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack89 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99), 88) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 86)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack89 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99), 88) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 86))

source(java.lang.String, <init>, 611, l0.<java.lang.String: char[] value> = l1, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:100), at org.iban4j.bban.BbanStructureEntry.branchCode(BbanStructureEntry.java:66), at java.lang.String.valueOf(String.java:3085), at java.lang.String.<init>(String.java:611)]) => sink(java.lang.String, <init>, 611, l0.<java.lang.String: char[] value> = l1, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:458), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at java.lang.String.valueOf(String.java:3085), at java.lang.String.<init>(String.java:611)])

source(org.iban4j.bban.BbanStructureEntry$EntryCharacterType, valueOf, 106, $stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:100), at org.iban4j.bban.BbanStructureEntry.branchCode(BbanStructureEntry.java:66), at org.iban4j.bban.BbanStructureEntry$EntryCharacterType.valueOf(BbanStructureEntry$EntryCharacterType.java:106)]) => sink(org.iban4j.bban.BbanStructureEntry$EntryCharacterType, valueOf, 106, $stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1, [at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:458), at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61), at org.iban4j.bban.BbanStructureEntry$EntryCharacterType.valueOf(BbanStructureEntry$EntryCharacterType.java:106)])

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,$stack4 = new java.util.Random,32,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke $stack4.<java.util.Random: void <init>()>(),32,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),61,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,this := @this: org.iban4j.bban.BbanStructureEntry,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke this.<java.lang.Object: void <init>()>(),53,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53)))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),66,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 66)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,this := @this: org.iban4j.bban.BbanStructureEntry,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke this.<java.lang.Object: void <init>()>(),53,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53)))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))

List(Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,$stack4 = new java.util.Random,32,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke $stack4.<java.util.Random: void <init>()>(),32,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)))

List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 66)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 66)))

