Running soot scenario iban4j;org.iban4j.bban.BbanStructure;static block;cb73f417d976a89c1b5066506a6ec368556845f6
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/iban4j/cb73f417d976a89c1b5066506a6ec368556845f6/original-without-dependencies/iban4j-3.2.2-RELEASE.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,61200
Time to perform Confluence 1 Inter 1,80100
Configure Soot Confluence 2 Inter 0,15600
Time to perform Confluence 2 Inter 1,09600
Visited methods: 28
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),76,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack10 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>(1, 110), 44) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 76))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),76,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack10 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>(1, 110), 44) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 76)), SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack299 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>(10, 110), 203) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 91))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack299 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>(10, 110), 203) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 91)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),91,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack299 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>(10, 110), 203) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 91)), SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),81,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack87 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97), 87) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 81)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),81,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack87 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97), 87) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 81))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),81,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack87 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97), 87) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 81)), SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),66,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 66)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),66,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 66)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 66))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),66,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 66)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 66)), SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),71,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack12 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 45) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 71))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),71,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack12 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 45) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 71)), SOURCE=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack89 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99), 88) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 86)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack89 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99), 88) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 86))
SINK=>BASE: Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack89 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99), 88) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 86)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),86,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack89 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99), 88) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 86))]
Confluence interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Confluence flows from execution of lines 42 and 42 to line 44, defined in $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110) and $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110) and used in $stack10 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>(1, 110)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)
Caused by line 44 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack10 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>(1, 110), 44) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry nationalCheckDigit(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 76)
Confluence interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Confluence flows from execution of lines 42 and 42 to line 203, defined in $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110) and $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110) and used in $stack299 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>(10, 110)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)
Caused by line 203 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack299 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>(10, 110), 203) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry identificationNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 91)
Confluence interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Confluence flows from execution of lines 42 and 42 to line 87, defined in $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110) and $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110) and used in $stack87 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)
Caused by line 87 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack87 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>(1, 97), 87) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountType(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 81)
Confluence interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Confluence flows from execution of lines 43 and 42 to line 43, defined in $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110) and $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110) and used in $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110)
Caused by line 43 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 66)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)
Caused by line 43 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 66)
Confluence interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Confluence flows from execution of lines 42 and 42 to line 45, defined in $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110) and $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110) and used in $stack12 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)
Caused by line 45 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack12 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>(16, 99), 45) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry accountNumber(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 71)
Confluence interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Confluence flows from execution of lines 42 and 42 to line 88, defined in $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110) and $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110) and used in $stack89 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)
Caused by line 88 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack89 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>(1, 99), 88) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry ownerAccountNumber(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 86)
 Analysis results
----------------------------
 Number of conflicts: 6
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/iban4j/cb73f417d976a89c1b5066506a6ec368556845f6/original-without-dependencies/iban4j-3.2.2-RELEASE.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,57500
Runtime: 0.093s
OA interference in class BbanStructure, method void <clinit>(), execution of line 100 overrides 458, assigning to variable l0.<java.lang.String: char[] value>, 
Caused by line 100 flow:
at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:100)
at org.iban4j.bban.BbanStructureEntry.branchCode(BbanStructureEntry.java:66)
at java.lang.String.valueOf(String.java:3085)
at java.lang.String.<init>(String.java:611)
And line 458 flow:
at org.iban4j.bban.BbanStructure.<clinit>(BbanStructure.java:458)
at org.iban4j.bban.BbanStructureEntry.bankCode(BbanStructureEntry.java:61)
at java.lang.String.valueOf(String.java:3085)
at java.lang.String.<init>(String.java:611)
 
Time to perform OA Inter 0,93700
OA Inter Visited methods: 1607
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/iban4j/cb73f417d976a89c1b5066506a6ec368556845f6/original-without-dependencies/iban4j-3.2.2-RELEASE.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,58300
Time to perform DFP Inter 1,29000
Depth limit: 5
CONFLICTS: DF interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Data flows from execution of line 43 to 42, defined in $stack2 = new org.iban4j.bban.BbanStructureEntry and propagated in specialinvoke this.<java.lang.Object: void <init>()>()
Caused by line 43 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53)
DF interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Data flows from execution of line 42 to 42, defined in $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name) and propagated in $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)
DF interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Data flows from execution of line 42 to 42, defined in $stack4 = new java.util.Random and propagated in specialinvoke $stack4.<java.util.Random: void <init>()>()
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)
[List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: )), List(Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,$stack4 = new java.util.Random,32,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke $stack4.<java.util.Random: void <init>()>(),32,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32))), List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),61,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61))), List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,65,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,this := @this: org.iban4j.bban.BbanStructureEntry,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke this.<java.lang.Object: void <init>()>(),53,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53))), List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),66,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 66)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: ))]
Visited methods: 14
 Analysis results
----------------------------
 Number of conflicts: 5
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/iban4j/cb73f417d976a89c1b5066506a6ec368556845f6/original-without-dependencies/iban4j-3.2.2-RELEASE.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,57300
Time to perform DFP Inter 1,07600
Depth limit: 5
CONFLICTS: DF interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Data flows from execution of line 42 to 42, defined in $stack2 = new org.iban4j.bban.BbanStructureEntry and propagated in specialinvoke this.<java.lang.Object: void <init>()>()
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53)
DF interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Data flows from execution of line 42 to 43, defined in $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name) and propagated in specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)
Caused by line 43 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 66)
DF interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.iban4j.bban.BbanStructure: void <clinit>()>
Data flows from execution of line 42 to 42, defined in $stack4 = new java.util.Random and propagated in specialinvoke $stack4.<java.util.Random: void <init>()>()
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)
Caused by line 42 flow: path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)
[List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType),61,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(characterType), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,name := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: )), List(Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>,$stack2 = new org.iban4j.bban.BbanStructureEntry,60,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,this := @this: org.iban4j.bban.BbanStructureEntry,-1,SimpleNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke this.<java.lang.Object: void <init>()>(),53,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke this.<java.lang.Object: void <init>()>(), 53))), List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,return $stack2,106,SinkNode, path: )), List(Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,$stack4 = new java.util.Random,32,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32)) => Node(<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>,specialinvoke $stack4.<java.util.Random: void <init>()>(),32,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 61) => (<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>, specialinvoke $stack4.<java.util.Random: void <init>()>(), 32))), List(Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;", name),106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61) => (<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>, $stack1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class 'Lorg/iban4j/bban/BbanStructureEntry$EntryCharacterType;', name), 106)) => Node(<org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>,$stack2 = (org.iban4j.bban.BbanStructureEntry$EntryCharacterType) $stack1,106,SourceNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack6 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>(3, 110), 42) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry bankCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 61)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,$stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, $stack5 = staticinvoke <org.iban4j.bban.BbanStructureEntry$EntryCharacterType: org.iban4j.bban.BbanStructureEntry$EntryCharacterType valueOf(java.lang.String)>($stack4), 66)) => Node(<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>,specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length),66,SinkNode, path: (<org.iban4j.bban.BbanStructure: void <clinit>()>, $stack8 = staticinvoke <org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>(4, 110), 43) => (<org.iban4j.bban.BbanStructureEntry: org.iban4j.bban.BbanStructureEntry branchCode(int,char)>, specialinvoke $stack2.<org.iban4j.bban.BbanStructureEntry: void <init>(org.iban4j.bban.BbanEntryType,org.iban4j.bban.BbanStructureEntry$EntryCharacterType,int)>($stack3, $stack5, length), 66)))]
Visited methods: 14
 Analysis results
----------------------------
 Number of conflicts: 5
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/iban4j/cb73f417d976a89c1b5066506a6ec368556845f6/original-without-dependencies/iban4j-3.2.2-RELEASE.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,50400
Time to perform PDG 3,21000
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/iban4j/cb73f417d976a89c1b5066506a6ec368556845f6/original-without-dependencies/iban4j-3.2.2-RELEASE.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,53100
Time to perform PDG 3,05700
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
