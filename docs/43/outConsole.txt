Running soot scenario log-parser-plugin;hudson.plugins.logparser.LogParserParser;parseLog(Run<?,?>);a4d0e3ca611eef6567b9ac34a8b8453a35fb4fd8
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/log-parser-plugin/a4d0e3ca611eef6567b9ac34a8b8453a35fb4fd8/original-without-dependencies/log-parser.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,76100
Time to perform Confluence 1 Inter 3,10800
Configure Soot Confluence 2 Inter 0,20000
java.lang.NullPointerException
	at br.unb.cic.soot.graph.VisitedMethods.toString(Graph.scala:61)
	at br.unb.cic.soot.graph.StatementNode.$anonfun$pathVisitedMethodsToString$2(Graph.scala:80)
	at scala.collection.TraversableLike.$anonfun$map$1(TraversableLike.scala:237)
	at scala.collection.immutable.List.foreach(List.scala:392)
	at scala.collection.generic.TraversableForwarder.foreach(TraversableForwarder.scala:38)
	at scala.collection.generic.TraversableForwarder.foreach$(TraversableForwarder.scala:38)
	at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:47)
	at scala.collection.TraversableLike.map(TraversableLike.scala:237)
	at scala.collection.TraversableLike.map$(TraversableLike.scala:230)
	at scala.collection.AbstractTraversable.map(Traversable.scala:108)
	at br.unb.cic.soot.graph.StatementNode.pathVisitedMethodsToString(Graph.scala:80)
	at br.unb.cic.soot.graph.StatementNode.toString(Graph.scala:88)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.nodeToString(ConfluenceConflict.java:126)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.lambda$pathToString$0(ConfluenceConflict.java:118)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1382)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.pathToString(ConfluenceConflict.java:120)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.toString(ConfluenceConflict.java:40)
	at br.unb.cic.analysis.svfa.confluence.ConfluenceConflict.hashCode(ConfluenceConflict.java:135)
	at java.util.HashMap.hash(HashMap.java:339)
	at java.util.HashMap.put(HashMap.java:612)
	at java.util.HashSet.add(HashSet.java:220)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.intersectPathsByLastNode(DFPConfluenceAnalysis.java:232)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.execute(DFPConfluenceAnalysis.java:157)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:553)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/log-parser-plugin/a4d0e3ca611eef6567b9ac34a8b8453a35fb4fd8/original-without-dependencies/log-parser.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,61800
Runtime: 0.16s
Time to perform OA Inter 0,99900
OA Inter Visited methods: 137
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/log-parser-plugin/a4d0e3ca611eef6567b9ac34a8b8453a35fb4fd8/original-without-dependencies/log-parser.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,68900
Time to perform DFP Inter 2,01200
Depth limit: 5
CONFLICTS: DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 198, defined in tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 199, defined in status = (java.lang.String) $stack55 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199) => (<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings, 180)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 200, defined in $stack13 = (java.lang.Integer) $stack12 and propagated in $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack13 = (java.lang.Integer) $stack12, 300)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 199, defined in line_num = line_num + 1 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199) => (<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings, 180)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 203, defined in tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 201, defined in line_num = 0 and propagated in $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 200, defined in $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter> and propagated in $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>, 332)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 199, defined in line_num = 0 and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 198, defined in tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542 and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 199, defined in tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542 and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 200, defined in line_num = 0 and propagated in $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 201, defined in line_num = line_num + 1 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201) => (<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs, 188)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 200, defined in tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200) => (<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos, 184)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 198, defined in status = (java.lang.String) $stack55 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198) => (<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors, 176)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 201, defined in status = (java.lang.String) $stack55 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201) => (<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs, 188)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 201, defined in $stack13 = (java.lang.Integer) $stack12 and propagated in $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack13 = (java.lang.Integer) $stack12, 300)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 201, defined in tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201) => (<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs, 188)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 199, defined in tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199) => (<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings, 180)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 200, defined in line_num = line_num + 1 and propagated in $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 201, defined in $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter> and propagated in $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>, 332)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 200, defined in status = (java.lang.String) $stack55 and propagated in $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 203, defined in $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter> and propagated in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>, 332)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 200, defined in tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200) => (<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos, 184)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 198, defined in $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter> and propagated in $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>, 332)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 199, defined in tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199) => (<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings, 180)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 201, defined in line_num = line_num + 1 and propagated in $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 201, defined in line_num = 0 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201) => (<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs, 188)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 203, defined in line_num = 0 and propagated in $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203) => (<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>, $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts), 192)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 200, defined in line_num = 0 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200) => (<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos, 184)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 144 to 199, defined in $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter) and propagated in $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>()
Caused by line 144 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 144 to 198, defined in $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter) and propagated in $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>()
Caused by line 144 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 203, defined in tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer and propagated in $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203) => (<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>, $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts), 192)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 203, defined in line_num = line_num + 1 and propagated in $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203) => (<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>, $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts), 192)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 199, defined in $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter> and propagated in $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>, 332)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 198, defined in line_num = line_num + 1 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198) => (<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors, 176)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 200, defined in line_num = line_num + 1 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200) => (<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos, 184)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 199, defined in effectiveStatus = status and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199) => (<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings, 180)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 198, defined in line_num = 0 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198) => (<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors, 176)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 200, defined in effectiveStatus = status and propagated in $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 144 to 200, defined in $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter) and propagated in $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>()
Caused by line 144 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 200, defined in tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542 and propagated in $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 198, defined in status = (java.lang.String) $stack55 and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 203, defined in line_num = line_num + 1 and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 201, defined in tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542 and propagated in $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 203, defined in effectiveStatus = status and propagated in $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203) => (<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>, $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts), 192)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 198, defined in tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198) => (<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors, 176)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 201, defined in tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer and propagated in $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 200, defined in tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer and propagated in $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 198, defined in tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198) => (<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors, 176)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 198, defined in effectiveStatus = status and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 199, defined in line_num = line_num + 1 and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 203, defined in effectiveStatus = status and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 203, defined in line_num = 0 and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 144 to 203, defined in $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter) and propagated in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>()
Caused by line 144 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 203, defined in $stack13 = (java.lang.Integer) $stack12 and propagated in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack13 = (java.lang.Integer) $stack12, 300)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 199, defined in $stack13 = (java.lang.Integer) $stack12 and propagated in $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack13 = (java.lang.Integer) $stack12, 300)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 201, defined in tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201) => (<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs, 188)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 199, defined in status = (java.lang.String) $stack55 and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 199, defined in tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 198, defined in $stack13 = (java.lang.Integer) $stack12 and propagated in $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack13 = (java.lang.Integer) $stack12, 300)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 198, defined in line_num = 0 and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 201, defined in effectiveStatus = status and propagated in $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 199, defined in line_num = 0 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199) => (<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings, 180)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 144 to 201, defined in $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter) and propagated in $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>()
Caused by line 144 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 201, defined in status = (java.lang.String) $stack55 and propagated in $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>()
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 200, defined in effectiveStatus = status and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200) => (<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos, 184)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 203, defined in status = (java.lang.String) $stack55 and propagated in $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203) => (<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>, $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts), 192)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 200, defined in status = (java.lang.String) $stack55 and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)
Caused by line 200 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200) => (<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos, 184)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 203, defined in tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542 and propagated in $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203) => (<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>, $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts), 192)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 201, defined in effectiveStatus = status and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)
Caused by line 201 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201) => (<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs, 188)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 203, defined in status = (java.lang.String) $stack55 and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 198, defined in line_num = line_num + 1 and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 198, defined in effectiveStatus = status and propagated in this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)
Caused by line 198 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198) => (<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors, 176)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 203, defined in tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542 and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 161 to 199, defined in effectiveStatus = status and propagated in virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)
Caused by line 199 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199)
[List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>,totalErrors := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors,176,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198) => (<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors, 176))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>,totalDebugs := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs,188,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201) => (<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs, 188))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,$stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts),192,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203) => (<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>, $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts), 192))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack13 = (java.lang.Integer) $stack12,300,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack13 = (java.lang.Integer) $stack12, 300)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,$stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts),192,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203) => (<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>, $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts), 192))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>,totalErrors := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors,176,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198) => (<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors, 176))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>,332,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>, 332)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,sectionCounter := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,$stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter),28,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack13 = (java.lang.Integer) $stack12,300,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack13 = (java.lang.Integer) $stack12, 300)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201))), List(Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,$stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter),28,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>,totalWarnings := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings,180,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199) => (<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings, 180))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>,totalWarnings := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings,180,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199) => (<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings, 180))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>,332,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>, 332)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,sectionCounter := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,$stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter),28,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>,totalInfos := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos,184,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200) => (<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos, 184))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,$stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts),192,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203) => (<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>, $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts), 192))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>,332,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>, 332)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,sectionCounter := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,$stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter),28,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack13 = (java.lang.Integer) $stack12,300,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack13 = (java.lang.Integer) $stack12, 300)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>,totalDebugs := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs,188,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201) => (<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs, 188))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack13 = (java.lang.Integer) $stack12,300,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack13 = (java.lang.Integer) $stack12, 300)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>,totalDebugs := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs,188,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201) => (<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs, 188))), List(Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,$stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter),28,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>,totalErrors := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors,176,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198) => (<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors, 176))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = 0,362,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>,totalDebugs := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs,188,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201) => (<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs, 188))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>,totalWarnings := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings,180,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199) => (<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings, 180))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>,332,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>, 332)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,sectionCounter := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,$stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter),28,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>,totalWarnings := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings,180,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199) => (<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings, 180))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,$stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts),192,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203) => (<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>, $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts), 192))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = 0,362,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,$stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts),192,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203) => (<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>, $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts), 192))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>,totalErrors := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors,176,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198) => (<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors, 176))), List(Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,$stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter),28,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201))), List(Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,$stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter),28,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198))), List(Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,$stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter),28,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>,totalInfos := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos,184,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200) => (<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos, 184))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = 0,362,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>,totalInfos := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos,184,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200) => (<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos, 184))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>,totalInfos := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos,184,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200) => (<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos, 184))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = 0,362,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>,totalInfos := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos,184,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200) => (<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos, 184))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>,totalDebugs := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs,188,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201) => (<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs, 188))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = 0,362,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = 0,362,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>,totalWarnings := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings,180,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199) => (<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings, 180))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>,totalErrors := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors,176,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198) => (<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors, 176))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,$stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts),192,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203) => (<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>, $stack4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(totalCounts), 192))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>,332,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack39 = this.<hudson.plugins.logparser.LogParserParser: int sectionCounter>, 332)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,sectionCounter := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,$stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter),28,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200))), List(Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack13 = (java.lang.Integer) $stack12,300,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack13 = (java.lang.Integer) $stack12, 300)) => Node(<java.lang.Integer: java.lang.String toString()>,l0 := @this: java.lang.Integer,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>,totalWarnings := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings,180,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199) => (<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalWarnings> = totalWarnings, 180))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = 0,362,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>,totalInfos := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos,184,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>($stack149), 200) => (<hudson.plugins.logparser.LogParserResult: void setTotalInfos(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalInfos> = totalInfos, 184))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1340666542 = new hudson.plugins.logparser.LogParserStatusComputer,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, specialinvoke tmp$1340666542.<hudson.plugins.logparser.LogParserStatusComputer: void <init>(java.io.InputStream,java.lang.String[],java.util.regex.Pattern[],java.lang.String)>(log, $stack34, $stack33, signature), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>,totalDebugs := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs,188,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>($stack153), 201) => (<hudson.plugins.logparser.LogParserResult: void setTotalDebugs(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalDebugs> = totalDebugs, 188))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = 0,362,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(),198,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack141 = virtualinvoke $stack140.<java.lang.Integer: int intValue()>(), 198)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>,totalErrors := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198)) => Node(<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>,this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors,176,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>($stack141), 198) => (<hudson.plugins.logparser.LogParserResult: void setTotalErrors(int)>, this.<hudson.plugins.logparser.LogParserResult: int totalErrors> = totalErrors, 176))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171),203,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(),200,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack149 = virtualinvoke $stack148.<java.lang.Integer: int intValue()>(), 200))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = 0,362,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542,-1,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, tmp$1365349839 = (hudson.remoting.Callable) tmp$1340666542, -1)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839),351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack36 = interfaceinvoke $stack35.<hudson.remoting.VirtualChannel: java.lang.Object call(hudson.remoting.Callable)>(tmp$1365349839), 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,lineStatusMatches = (java.util.HashMap) $stack36,351,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, lineStatusMatches = (java.util.HashMap) $stack36, 351)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(),201,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack153 = virtualinvoke $stack152.<java.lang.Integer: int intValue()>(), 201))), List(Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = 0,362,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,line_num = line_num + 1,369,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<java.lang.String: java.lang.String valueOf(int)>,$stack1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(l0),3099,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack54 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(line_num), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,$stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54),364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, $stack55 = virtualinvoke lineStatusMatches.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($stack54), 364)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,status = (java.lang.String) $stack55,364,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, status = (java.lang.String) $stack55, 364)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,status := @parameter1: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,effectiveStatus = status,228,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, effectiveStatus = status, 228)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,status := @parameter0: java.lang.String,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269) => (<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>, $stack5 = virtualinvoke $stack4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(status), 112)) => Node(<hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>,$stack6 = virtualinvoke $stack5.<java.lang.StringBuilder: java.lang.String toString()>(),112,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber),269,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, key = staticinvoke <hudson.plugins.logparser.LogParserUtils: java.lang.String getSectionCountKey(java.lang.String,int)>(status, sectionNumber), 269)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key),271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack8 = virtualinvoke $stack7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(key), 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,currentValInteger = (java.lang.Integer) $stack8,271,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, currentValInteger = (java.lang.Integer) $stack8, 271)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,$stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(),276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, $stack9 = virtualinvoke currentValInteger.<java.lang.Integer: int intValue()>(), 276)) => Node(<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>,newVal = $stack9 + 1,276,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>(effectiveStatus, $stack19), 246) => (<hudson.plugins.logparser.LogParserParser: void incrementCounterPerSection(java.lang.String,int)>, newVal = $stack9 + 1, 276)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: int intValue()>,$stack1 = l0.<java.lang.Integer: int value>,893,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke this.<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>(effectiveStatus), 245) => (<hudson.plugins.logparser.LogParserParser: void incrementCounter(java.lang.String)>, currentVal = virtualinvoke $stack5.<java.lang.Integer: int intValue()>(), 263)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack145 = virtualinvoke $stack144.<java.lang.Integer: int intValue()>(), 199)) => Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145),199,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void setTotalWarnings(int)>($stack145), 199)))]
Visited methods: 62
 Analysis results
----------------------------
 Number of conflicts: 75
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/log-parser-plugin/a4d0e3ca611eef6567b9ac34a8b8453a35fb4fd8/original-without-dependencies/log-parser.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,61300
Time to perform DFP Inter 1,94700
Depth limit: 5
CONFLICTS: DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 144, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in str = virtualinvoke str.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("NUMBER", $stack13)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 144 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, str = virtualinvoke str.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>('NUMBER', $stack13), 27)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in virtualinvoke parsedLineColored#34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<br/>\n")
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke parsedLineColored#34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>('<br/>\n'), 258)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>()
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in virtualinvoke link.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(statusCountStr)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke link.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(statusCountStr), 312)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(marker)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(marker), 323)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</a>")
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>('</a>'), 309)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(line)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(line), 308)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 144, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in $stack15 = new java.lang.StringBuilder
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 144 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, specialinvoke $stack15.<java.lang.StringBuilder: void <init>()>(), 29)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in parsedLine = parsedLineColoredAndMarked
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLine = parsedLineColoredAndMarked, 254)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in link = $stack24
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, link = $stack24, 311)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(marker)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(marker), 306)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in markedLine = $stack31
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, markedLine = $stack31, 322)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in $stack44 = virtualinvoke brShortLink.<java.lang.StringBuffer: java.lang.String toString()>()
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack44 = virtualinvoke brShortLink.<java.lang.StringBuffer: java.lang.String toString()>(), 336)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\">")
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>('\'>'), 307)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"></a></p>")
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>('\'></a></p>'), 324)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in $stack36 = virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.String toString()>()
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(line)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(line), 325)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in virtualinvoke link.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</li>")
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke link.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>('</li>'), 314)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in brShortLink = $stack41
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, brShortLink = $stack41, 334)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in specialinvoke $stack11.<java.lang.StringBuffer: void <init>(java.lang.String)>(parsedLine)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, specialinvoke $stack11.<java.lang.StringBuffer: void <init>(java.lang.String)>(parsedLine), 256)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in $stack30 = virtualinvoke link.<java.lang.StringBuffer: java.lang.String toString()>()
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack30 = virtualinvoke link.<java.lang.StringBuffer: java.lang.String toString()>(), 318)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in shortLink = $stack19
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, shortLink = $stack19, 304)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in virtualinvoke link.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(shortLink)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke link.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(shortLink), 313)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 144, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>()
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 144 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>()
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in $stack13 = virtualinvoke parsedLineColored#34.<java.lang.StringBuffer: java.lang.String toString()>()
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in virtualinvoke brShortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(shortLink)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke brShortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(shortLink), 335)
DF interference in <hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>
Data flows from execution of line 203 to 161, defined in $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>() and propagated in virtualinvoke writer.<java.io.BufferedWriter: void write(java.lang.String)>(parsedLine)
Caused by line 203 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)
Caused by line 161 flow: path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, virtualinvoke writer.<java.io.BufferedWriter: void write(java.lang.String)>(parsedLine), 367)
[List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,shortLink = $stack19,304,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, shortLink = $stack19, 304)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,link = $stack24,311,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, link = $stack24, 311)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,virtualinvoke link.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(shortLink),313,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke link.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(shortLink), 313))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,markedLine = $stack31,322,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, markedLine = $stack31, 322)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"></a></p>"),324,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>('\'></a></p>'), 324))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,shortLink = $stack19,304,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, shortLink = $stack19, 304)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,link = $stack24,311,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, link = $stack24, 311))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,markedLine = $stack31,322,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, markedLine = $stack31, 322)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(line),325,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(line), 325))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,shortLink = $stack19,304,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, shortLink = $stack19, 304))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,markedLine = $stack31,322,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, markedLine = $stack31, 322)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack36 = virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.String toString()>(),339,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status),252,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLine = parsedLineColoredAndMarked,254,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLine = parsedLineColoredAndMarked, 254))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,shortLink = $stack19,304,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, shortLink = $stack19, 304)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\">"),307,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>('\'>'), 307))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,markedLine = $stack31,322,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, markedLine = $stack31, 322)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack36 = virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.String toString()>(),339,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status),252,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLine = parsedLineColoredAndMarked,254,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLine = parsedLineColoredAndMarked, 254)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,$stack11 = new java.lang.StringBuffer,256,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, specialinvoke $stack11.<java.lang.StringBuffer: void <init>(java.lang.String)>(parsedLine), 256)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,specialinvoke $stack11.<java.lang.StringBuffer: void <init>(java.lang.String)>(parsedLine),256,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, specialinvoke $stack11.<java.lang.StringBuffer: void <init>(java.lang.String)>(parsedLine), 256))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,shortLink = $stack19,304,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, shortLink = $stack19, 304)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</a>"),309,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>('</a>'), 309))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,shortLink = $stack19,304,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, shortLink = $stack19, 304)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,link = $stack24,311,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, link = $stack24, 311)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,virtualinvoke link.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("</li>"),314,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke link.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>('</li>'), 314))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,markedLine = $stack31,322,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, markedLine = $stack31, 322)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack36 = virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.String toString()>(),339,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status),252,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLine = parsedLineColoredAndMarked,254,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLine = parsedLineColoredAndMarked, 254)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,$stack11 = new java.lang.StringBuffer,256,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, specialinvoke $stack11.<java.lang.StringBuffer: void <init>(java.lang.String)>(parsedLine), 256)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLineColored#34 = $stack11,256,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColored#34 = $stack11, 256)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,virtualinvoke parsedLineColored#34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<br/>\n"),258,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, virtualinvoke parsedLineColored#34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>('<br/>\n'), 258))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,$stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(),28,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,str = virtualinvoke str.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("NUMBER", $stack13),27,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, str = virtualinvoke str.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>('NUMBER', $stack13), 27))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,markedLine = $stack31,322,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, markedLine = $stack31, 322))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,markedLine = $stack31,322,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, markedLine = $stack31, 322)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack36 = virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.String toString()>(),339,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status),252,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,shortLink = $stack19,304,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, shortLink = $stack19, 304)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,brShortLink = $stack41,334,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, brShortLink = $stack41, 334)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,virtualinvoke brShortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(shortLink),335,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke brShortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>(shortLink), 335))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,$stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(),28,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,markedLine = $stack31,322,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, markedLine = $stack31, 322)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack36 = virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.String toString()>(),339,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status),252,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLine = parsedLineColoredAndMarked,254,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLine = parsedLineColoredAndMarked, 254)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,$stack11 = new java.lang.StringBuffer,256,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, specialinvoke $stack11.<java.lang.StringBuffer: void <init>(java.lang.String)>(parsedLine), 256)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLineColored#34 = $stack11,256,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColored#34 = $stack11, 256)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,$stack13 = virtualinvoke parsedLineColored#34.<java.lang.StringBuffer: java.lang.String toString()>(),259,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status),365,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,virtualinvoke writer.<java.io.BufferedWriter: void write(java.lang.String)>(parsedLine),367,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, virtualinvoke writer.<java.io.BufferedWriter: void write(java.lang.String)>(parsedLine), 367))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,markedLine = $stack31,322,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, markedLine = $stack31, 322)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack36 = virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.String toString()>(),339,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status),252,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLine = parsedLineColoredAndMarked,254,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLine = parsedLineColoredAndMarked, 254)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,$stack11 = new java.lang.StringBuffer,256,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, specialinvoke $stack11.<java.lang.StringBuffer: void <init>(java.lang.String)>(parsedLine), 256)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLineColored#34 = $stack11,256,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColored#34 = $stack11, 256)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,$stack13 = virtualinvoke parsedLineColored#34.<java.lang.StringBuffer: java.lang.String toString()>(),259,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,shortLink = $stack19,304,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, shortLink = $stack19, 304)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,brShortLink = $stack41,334,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, brShortLink = $stack41, 334))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,markedLine = $stack31,322,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, markedLine = $stack31, 322)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack36 = virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.String toString()>(),339,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,shortLink = $stack19,304,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, shortLink = $stack19, 304)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,brShortLink = $stack41,334,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, brShortLink = $stack41, 334)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack44 = virtualinvoke brShortLink.<java.lang.StringBuffer: java.lang.String toString()>(),336,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack44 = virtualinvoke brShortLink.<java.lang.StringBuffer: java.lang.String toString()>(), 336))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,shortLink = $stack19,304,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, shortLink = $stack19, 304)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(line),308,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(line), 308))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(marker),323,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(marker), 323))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,shortLink = $stack19,304,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, shortLink = $stack19, 304)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,link = $stack24,311,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, link = $stack24, 311)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack30 = virtualinvoke link.<java.lang.StringBuffer: java.lang.String toString()>(),318,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack30 = virtualinvoke link.<java.lang.StringBuffer: java.lang.String toString()>(), 318))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,markedLine = $stack31,322,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, markedLine = $stack31, 322)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack36 = virtualinvoke markedLine.<java.lang.StringBuffer: java.lang.String toString()>(),339,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status),252,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLine = parsedLineColoredAndMarked,254,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLine = parsedLineColoredAndMarked, 254)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,$stack11 = new java.lang.StringBuffer,256,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, specialinvoke $stack11.<java.lang.StringBuffer: void <init>(java.lang.String)>(parsedLine), 256)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,parsedLineColored#34 = $stack11,256,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColored#34 = $stack11, 256)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>,$stack13 = virtualinvoke parsedLineColored#34.<java.lang.StringBuffer: java.lang.String toString()>(),259,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365)) => Node(<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>,parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status),365,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,shortLink = $stack19,304,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, shortLink = $stack19, 304)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,link = $stack24,311,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, link = $stack24, 311)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,virtualinvoke link.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(statusCountStr),312,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke link.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(statusCountStr), 312))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(),300,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, statusCountStr = virtualinvoke $stack13.<java.lang.Integer: java.lang.String toString()>(), 300)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack16 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(effectiveStatus), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,$stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, $stack17 = virtualinvoke $stack16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(statusCountStr), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),301,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, marker = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 301)) => Node(<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>,virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(marker),306,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, specialinvoke this.<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>(build, writer#7, log, logger), 161) => (<hudson.plugins.logparser.LogParserParser: void parseLogBody(hudson.model.Run,java.io.BufferedWriter,java.io.InputStream,java.util.logging.Logger)>, parsedLine = virtualinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>(line, status), 365) => (<hudson.plugins.logparser.LogParserParser: java.lang.String parseLine(java.lang.String,java.lang.String)>, parsedLineColoredAndMarked = specialinvoke this.<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>(parsedLineColored, effectiveStatus, status), 252) => (<hudson.plugins.logparser.LogParserParser: java.lang.String addMarkerAndLink(java.lang.String,java.lang.String,java.lang.String)>, virtualinvoke shortLink.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(marker), 306))), List(Node(<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>,$stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(),203,SourceNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, $stack171 = virtualinvoke $stack170.<java.lang.Integer: int intValue()>(), 203)) => Node(<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>,totalCounts := @parameter1: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, virtualinvoke result.<hudson.plugins.logparser.LogParserResult: void putTotalCountsByExtraTag(java.lang.String,int)>(extraTag#6, $stack171), 203)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(sectionCounter), 28) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack1 = l0.<java.lang.Integer: int value>,935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28) => (<java.lang.Integer: java.lang.String toString()>, $stack1 = l0.<java.lang.Integer: int value>, 935)) => Node(<java.lang.Integer: java.lang.String toString()>,$stack2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($stack1),935,SimpleNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,$stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(),28,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, $stack13 = virtualinvoke $stack12.<java.lang.Integer: java.lang.String toString()>(), 28)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,str = virtualinvoke str.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("NUMBER", $stack13),27,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, str = virtualinvoke str.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>('NUMBER', $stack13), 27)) => Node(<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>,$stack15 = new java.lang.StringBuilder,29,SinkNode, path: (<hudson.plugins.logparser.LogParserParser: hudson.plugins.logparser.LogParserResult parseLog(hudson.model.Run)>, staticinvoke <hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>($stack97, $stack96), 144) => (<hudson.plugins.logparser.LogParserWriter: void writeHeaderTemplateToAllLinkFiles(java.util.HashMap,int)>, specialinvoke $stack15.<java.lang.StringBuilder: void <init>()>(), 29)))]
Visited methods: 62
 Analysis results
----------------------------
 Number of conflicts: 30
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/log-parser-plugin/a4d0e3ca611eef6567b9ac34a8b8453a35fb4fd8/original-without-dependencies/log-parser.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,44300
Time to perform PDG 1,04200
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/log-parser-plugin/a4d0e3ca611eef6567b9ac34a8b8453a35fb4fd8/original-without-dependencies/log-parser.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,57400
Time to perform PDG 1,01500
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
