[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l0,197,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l0, 197)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l0,197,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l0, 197))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": 197
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": 197
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.Throwable: java.lang.Throwable cause> = l0",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
					"line": 197
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2,210,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2, 210)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2,210,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2, 210))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": 210
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": 210
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
					"line": 210
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412) => (<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>, $stack11 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 3082) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412) => (<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>, $stack11 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 3082) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "e = $stack9",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 499
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 499
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 479
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "e = $stack9",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 499
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 499
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 479
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>()",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.String getName()>",
					"line": 642
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(),310,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(),310,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": 310
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": 310
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>()",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
					"line": 310
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(),480,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(), 480)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(),480,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(), 480))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "e = $stack9",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 499
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 499
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 480
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "e = $stack9",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 499
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 499
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 480
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>()",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: java.lang.String toString()>",
					"line": 480
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1),105,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1),105,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": 105
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": 105
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1)",
				"location": {
					"file": "",
					"class": "java.lang.Error",
					"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
					"line": 105
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412) => (<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>, $stack11 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 3082) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Throwable: java.lang.String toString()>,l1 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l1 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 479))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "e = $stack9",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 499
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 499
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 479
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 642
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 479
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "e = $stack9",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 499
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 499
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 479
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>()",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: java.lang.String toString()>",
					"line": 479
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>,781,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>, 781)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>,781,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>, 781))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": 781
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": 781
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
					"line": 781
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3,227,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3, 227)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3,227,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3, 227))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": 227
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": 227
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
					"line": 227
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "e = $stack9",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 499
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 499
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 479
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 640
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "e = $stack9",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 499
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 499
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 479
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": -1
},{
	"class": "java.lang.Class",
	"method": "<java.lang.Class: java.lang.String getName()>",
	"line": 640
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l1 = l0.<java.lang.Class: java.lang.String name>",
				"location": {
					"file": "",
					"class": "java.lang.Class",
					"method": "<java.lang.Class: java.lang.String getName()>",
					"line": 640
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5,311,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5, 311)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5,311,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5, 311))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": 311
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": 311
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
					"line": 311
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Object: void <init>()>(),309,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 309)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Object: void <init>()>(),309,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 309))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": 309
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": 309
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke l0.<java.lang.Object: void <init>()>()",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
					"line": 309
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0),783,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0), 783)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0),783,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0), 783))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": 783
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": 783
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0)",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
					"line": 783
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(),480,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(), 480)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": "),481,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(': '), 481)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l2),481,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l2), 481)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(),481,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(),480,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(), 480)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": "),481,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(': '), 481))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "e = $stack9",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 499
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 499
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 480
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 481
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "e = $stack9",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 499
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 499
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 480
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 481
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 481
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String toString()>",
	"line": 481
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>()",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: java.lang.String toString()>",
					"line": 481
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>,786,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>, 786)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>,786,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>, 786))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": 786
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": 786
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
					"line": 786
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3,784,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3, 784)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3,784,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3, 784))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": 784
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "$stack10 = new java.lang.Error",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 500
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 500
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
	"line": 784
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>",
					"line": 784
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l1,312,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l1, 312)) SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l1,312,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l1, 312))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "e = $stack9",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 499
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 499
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": 312
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "e = $stack9",
				"location": {
					"file": "",
					"class": "org.openpnp.gui.MainFrame",
					"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
					"line": 499
				},
				"stackTrace": [{
	"class": "org.openpnp.gui.MainFrame",
	"method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
	"line": 499
},{
	"class": "java.lang.Error",
	"method": "<java.lang.Error: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
	"line": 312
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l0.<java.lang.Throwable: java.lang.Throwable cause> = l1",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: void <init>(java.lang.Throwable)>",
					"line": 312
				}
			}
		]
	}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>()",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "497"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l2 := @parameter1: org.openpnp.gui.importer.BoardImporter",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>()",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>()",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = new javax.swing.JMenuItem",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack10 = new java.lang.Error",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "500"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "500"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>()",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "e = $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "499"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "500"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>()",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>()",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "497"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l2 := @parameter1: org.openpnp.gui.importer.BoardImporter",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>()",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "497"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = new javax.swing.JMenuItem",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "e#2 = $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e#2 = $stack5, 502)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "513"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "513"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport>, 513)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "513"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513)"]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>()",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "497"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l2 := @parameter1: org.openpnp.gui.importer.BoardImporter",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>()",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>()",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = new javax.swing.JMenuItem",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack10 = new java.lang.Error",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "500"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "500"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>()",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "e = $stack9",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "499"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "500"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>()",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>()",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "505"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "497"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l2 := @parameter1: org.openpnp.gui.importer.BoardImporter",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "-1"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>()",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame$7",
  "method": "<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>",
  "line": "504"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)","(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "497"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack5 = new javax.swing.JMenuItem",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)"]
}, {
"type": "SourceNode",
"branch":"",
"text": "e#2 = $stack5",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "502"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e#2 = $stack5, 502)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "513"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport>",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "513"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport>, 513)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2)",
"location": {
  "file": "",
  "class": "org.openpnp.gui.MainFrame",
  "method": "<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>",
  "line": "513"
},
"stackTrace": ["(<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482)","(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513)"]
}]
}
}

]
