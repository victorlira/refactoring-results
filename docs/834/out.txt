SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l0,197,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l0, 197))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l0,197,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l0, 197))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2,210,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2, 210))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2,210,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2, 210))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l1,312,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l1, 312))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l1,312,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l1, 312))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5,311,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5, 311))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,$stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(),311,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5,311,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5, 311))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412) => (<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>, $stack11 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 3082) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412) => (<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>, $stack11 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 3082) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1),105,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1),105,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(),310,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(),310,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(),480,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(), 480))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(),480,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(), 480))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1),105,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1),105,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412) => (<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>, $stack11 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 3082) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Throwable: java.lang.String toString()>,l1 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l1 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 479))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>,781,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>, 781))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>,781,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>, 781))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3,227,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3, 227))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3,227,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3, 227))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5,311,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5, 311))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5,311,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5, 311))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Object: void <init>()>(),309,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 309))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Object: void <init>()>(),309,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 309))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0),783,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0), 783))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0),783,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0), 783))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(),480,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(), 480)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": "),481,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(': '), 481)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l2),481,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l2), 481)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(),481,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(),480,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(), 480)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": "),481,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(': '), 481))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>,786,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>, 786))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>,786,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>, 786))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3,784,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3, 784))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3,784,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3, 784))

SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l1,312,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l1, 312))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l1,312,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l1, 312))

List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4,497,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,l2 := @parameter1: org.openpnp.gui.importer.BoardImporter,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)))

List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(),504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6),504,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e),500,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4,497,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,l2 := @parameter1: org.openpnp.gui.importer.BoardImporter,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(),504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6),504,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)))

List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)))

List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(),504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6),504,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack5 = new javax.swing.JMenuItem,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e#2 = $stack5,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e#2 = $stack5, 502)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2),513,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport>,513,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport>, 513)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2),513,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4,497,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass),502,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e),500,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack5 = new javax.swing.JMenuItem,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6),502,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)))

List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)))

List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4,497,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,l2 := @parameter1: org.openpnp.gui.importer.BoardImporter,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)))

List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(),504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6),504,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e),500,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4,497,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,l2 := @parameter1: org.openpnp.gui.importer.BoardImporter,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(),504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6),504,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)))

List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)))

List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(),504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6),504,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack5 = new javax.swing.JMenuItem,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e#2 = $stack5,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e#2 = $stack5, 502)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2),513,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport>,513,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport>, 513)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2),513,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4,497,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass),502,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e),500,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)))

List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack5 = new javax.swing.JMenuItem,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6),502,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)))

List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)))

