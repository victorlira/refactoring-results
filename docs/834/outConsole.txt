Running soot scenario openpnp;org.openpnp.gui.MainFrame;registerBoardImporters();d1778a6820a095395d408955ba274ebdefe546e2
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openpnp/d1778a6820a095395d408955ba274ebdefe546e2/original-without-dependencies/openpnp-gui-0.0.1-alpha-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,82700
Time to perform Confluence 1 Inter 0,86700
Configure Soot Confluence 2 Inter 0,52000
Time to perform Confluence 2 Inter 0,16600
Visited methods: 36
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l0,197,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l0, 197))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l0,197,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l0, 197)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2,210,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2, 210))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2,210,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2, 210)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l1,312,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l1, 312))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l1,312,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l1, 312)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5,311,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5, 311))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,$stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(),311,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5,311,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5, 311)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412) => (<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>, $stack11 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 3082) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412) => (<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>, $stack11 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 3082) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1),105,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1),105,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(),310,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(),310,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(),480,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(), 480))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(),480,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(), 480)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1),105,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1),105,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, l2 = specialinvoke l0.<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>(l1, 1), 412) => (<java.lang.Class: java.lang.reflect.Constructor getConstructor0(java.lang.Class[],int)>, $stack11 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 3082) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Throwable: java.lang.String toString()>,l1 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l1 = virtualinvoke $stack3.<java.lang.Class: java.lang.String getName()>(), 479)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>,781,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>, 781))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>,781,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>, 781)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3,227,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3, 227))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3,227,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3, 227)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(),479,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack3 = virtualinvoke l0.<java.lang.Object: java.lang.Class getClass()>(), 479)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack4 = virtualinvoke boardImporterClass.<java.lang.Class: java.lang.Object newInstance()>(), 497) => (<java.lang.Class: java.lang.Object newInstance()>, specialinvoke l0.<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>(0, $stack24, 0), 397) => (<java.lang.Class: void checkMemberAccess(int,java.lang.Class,boolean)>, specialinvoke l0.<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>(l5, l3), 2351) => (<java.lang.Class: void checkPackageAccess(java.lang.ClassLoader,boolean)>, l5 = virtualinvoke l0.<java.lang.Class: java.lang.String getName()>(), 2366)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5,311,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5, 311))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5,311,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = $stack5, 311)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Object: void <init>()>(),309,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 309))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,specialinvoke l0.<java.lang.Object: void <init>()>(),309,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 309)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0),783,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0), 783))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0),783,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0), 783)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(),480,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(), 480)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": "),481,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(': '), 481)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l2),481,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack9 = virtualinvoke $stack8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(l2), 481)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack10 = virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.String toString()>(),481,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.String toString()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311)) => Node(<java.lang.Throwable: java.lang.String toString()>,l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(),480,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, l2 = virtualinvoke l0.<java.lang.Throwable: java.lang.String getLocalizedMessage()>(), 480)) => Node(<java.lang.Throwable: java.lang.String toString()>,$stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": "),481,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, $stack5 = virtualinvoke l1.<java.lang.Throwable: java.lang.String toString()>(), 311) => (<java.lang.Throwable: java.lang.String toString()>, $stack8 = virtualinvoke $stack7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(': '), 481)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>,786,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>, 786))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>,786,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>, 786)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3,784,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3, 784))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3,784,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 310) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3, 784)), SOURCE=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l1,312,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l1, 312))
SINK=>BASE: Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<java.lang.Error: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l1 := @parameter0: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105)) => Node(<java.lang.Throwable: void <init>(java.lang.Throwable)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l1,312,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l1, 312))]
Confluence interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Confluence flows from execution of lines 482 and 482 to line 482, defined in virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class "Lorg/openpnp/gui/importer/EagleBoardImporter;") and virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class "Lorg/openpnp/gui/importer/EagleBoardImporter;") and used in virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class "Lorg/openpnp/gui/importer/EagleBoardImporter;")
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500) => (<java.lang.Error: void <init>(java.lang.Throwable)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.Throwable)>(l1), 105) => (<java.lang.Throwable: void <init>(java.lang.Throwable)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l0, 197)
 Analysis results
----------------------------
 Number of conflicts: 20
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openpnp/d1778a6820a095395d408955ba274ebdefe546e2/original-without-dependencies/openpnp-gui-0.0.1-alpha-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,93300
Runtime: 0.003s
Time to perform OA Inter 0,97400
OA Inter Visited methods: 1
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openpnp/d1778a6820a095395d408955ba274ebdefe546e2/original-without-dependencies/openpnp-gui-0.0.1-alpha-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,88700
Time to perform DFP Inter 0,65800
Depth limit: 5
CONFLICTS: DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in $stack5 = new javax.swing.JMenuItem and propagated in virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> and propagated in virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in $stack10 = new java.lang.Error and propagated in specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2 and propagated in virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4 and propagated in virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>() and propagated in virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4 and propagated in specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2 and propagated in virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in $stack5 = new javax.swing.JMenuItem and propagated in specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4 and propagated in virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in $stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport> and propagated in virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport>, 513)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in e = $stack9 and propagated in specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> and propagated in virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)
[List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4,497,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,l2 := @parameter1: org.openpnp.gui.importer.BoardImporter,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505))), List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(),504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6),504,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e),500,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4,497,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,l2 := @parameter1: org.openpnp.gui.importer.BoardImporter,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(),504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6),504,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504))), List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505))), List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(),504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6),504,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack5 = new javax.swing.JMenuItem,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e#2 = $stack5,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e#2 = $stack5, 502)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2),513,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport>,513,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport>, 513)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2),513,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4,497,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass),502,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e),500,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack5 = new javax.swing.JMenuItem,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6),502,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502))), List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)))]
Visited methods: 18
 Analysis results
----------------------------
 Number of conflicts: 13
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openpnp/d1778a6820a095395d408955ba274ebdefe546e2/original-without-dependencies/openpnp-gui-0.0.1-alpha-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 1,13700
Time to perform DFP Inter 0,67700
Depth limit: 5
CONFLICTS: DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in $stack5 = new javax.swing.JMenuItem and propagated in virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> and propagated in virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in $stack10 = new java.lang.Error and propagated in specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2 and propagated in virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4 and propagated in virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>() and propagated in virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4 and propagated in specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2 and propagated in virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in $stack5 = new javax.swing.JMenuItem and propagated in specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4 and propagated in virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in $stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport> and propagated in virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport>, 513)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in e = $stack9 and propagated in specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)
DF interference in <org.openpnp.gui.MainFrame: void registerBoardImporters()>
Data flows from execution of line 482 to 482, defined in $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> and propagated in virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)
Caused by line 482 flow: path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)
[List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4,497,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,l2 := @parameter1: org.openpnp.gui.importer.BoardImporter,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505))), List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(),504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6),504,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack10 = new java.lang.Error,500,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e),500,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4,497,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,l2 := @parameter1: org.openpnp.gui.importer.BoardImporter,-1,SimpleNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(),504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6),504,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504))), List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505))), List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter> = l2, 502)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(),504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack6 = interfaceinvoke $stack4.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterName()>(), 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("Name", $stack6),504,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('Name', $stack6), 504))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack5 = new javax.swing.JMenuItem,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e#2 = $stack5,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e#2 = $stack5, 502)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2),513,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport>,513,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame: javax.swing.JMenu mnImport>, 513)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2),513,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, virtualinvoke $stack7.<javax.swing.JMenu: javax.swing.JMenuItem add(javax.swing.JMenuItem)>(e#2), 513))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4,497,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, boardImporter = (org.openpnp.gui.importer.BoardImporter) $stack4, 497)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass),502,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,e = $stack9,499,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, e = $stack9, 499)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e),500,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack10.<java.lang.Error: void <init>(java.lang.Throwable)>(e), 500))), List(Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,$stack5 = new javax.swing.JMenuItem,502,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502)) => Node(<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>,specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6),502,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack5.<javax.swing.JMenuItem: void <init>(javax.swing.Action)>($stack6), 502))), List(Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,504,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack4 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 504)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>,505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack7 = this.<org.openpnp.gui.MainFrame$7: org.openpnp.gui.importer.BoardImporter val$boardImporter>, 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,$stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(),505,SourceNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, $stack9 = interfaceinvoke $stack7.<org.openpnp.gui.importer.BoardImporter: java.lang.String getImporterDescription()>(), 505)) => Node(<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>,virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>("ShortDescription", $stack9),505,SinkNode, path: (<org.openpnp.gui.MainFrame: void registerBoardImporters()>, virtualinvoke this.<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>(class 'Lorg/openpnp/gui/importer/EagleBoardImporter;'), 482) => (<org.openpnp.gui.MainFrame: void registerBoardImporter(java.lang.Class)>, specialinvoke $stack6.<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>(this, boardImporter, boardImporterClass), 502) => (<org.openpnp.gui.MainFrame$7: void <init>(org.openpnp.gui.MainFrame,org.openpnp.gui.importer.BoardImporter,java.lang.Class)>, virtualinvoke this.<org.openpnp.gui.MainFrame$7: void putValue(java.lang.String,java.lang.Object)>('ShortDescription', $stack9), 505)))]
Visited methods: 18
 Analysis results
----------------------------
 Number of conflicts: 13
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openpnp/d1778a6820a095395d408955ba274ebdefe546e2/original-without-dependencies/openpnp-gui-0.0.1-alpha-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 1,05900
Time to perform PDG 0,42000
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openpnp/d1778a6820a095395d408955ba274ebdefe546e2/original-without-dependencies/openpnp-gui-0.0.1-alpha-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,83000
Time to perform PDG 0,36900
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
