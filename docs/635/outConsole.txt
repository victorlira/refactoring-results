Running soot scenario hdiv;org.hdiv.filter.ValidatorHelperRequest;restoreState(HttpServletRequest, String);f20c50afc9a677031789094bef758c39a5dbbc09
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdiv/f20c50afc9a677031789094bef758c39a5dbbc09/original-without-dependencies/hdiv-core-2.1.13-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,64100
Time to perform Confluence 1 Inter 1,25200
Configure Soot Confluence 2 Inter 0,16900
Time to perform Confluence 2 Inter 1,03000
Visited methods: 108
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdiv/f20c50afc9a677031789094bef758c39a5dbbc09/original-without-dependencies/hdiv-core-2.1.13-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,77900
Runtime: 0.027s
Time to perform OA Inter 0,87100
OA Inter Visited methods: 26
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdiv/f20c50afc9a677031789094bef758c39a5dbbc09/original-without-dependencies/hdiv-core-2.1.13-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,69900
Time to perform DFP Inter 0,93600
Depth limit: 5
CONFLICTS: []
Visited methods: 54
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdiv/f20c50afc9a677031789094bef758c39a5dbbc09/original-without-dependencies/hdiv-core-2.1.13-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,47200
Time to perform DFP Inter 1,00500
Depth limit: 5
CONFLICTS: DF interference in <org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>
Data flows from execution of line 615 to 628, defined in $stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>("#") and propagated in this.<org.hdiv.filter.ValidatorError: java.lang.String parameterValue> = parameterValue
Caused by line 615 flow: path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, $stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>('#'), 615)
Caused by line 628 flow: path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, specialinvoke $stack20.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>('INVALID_HDIV_PARAMETER_VALUE', target, hdivParameter, requestState), 628) => (<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>, this.<org.hdiv.filter.ValidatorError: java.lang.String parameterValue> = parameterValue, 86)
DF interference in <org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>
Data flows from execution of line 615 to 628, defined in $stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>("#") and propagated in specialinvoke $stack20.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("INVALID_HDIV_PARAMETER_VALUE", target, hdivParameter, requestState)
Caused by line 615 flow: path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, $stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>('#'), 615)
Caused by line 628 flow: path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, specialinvoke $stack20.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>('INVALID_HDIV_PARAMETER_VALUE', target, hdivParameter, requestState), 628)
DF interference in <org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>
Data flows from execution of line 615 to 644, defined in $stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>("#") and propagated in specialinvoke $stack36.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack37, target, hdivParameter, requestState)
Caused by line 615 flow: path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, $stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>('#'), 615)
Caused by line 644 flow: path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, specialinvoke $stack36.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack37, target, hdivParameter, requestState), 644)
[List(Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,$stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>("#"),615,SourceNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, $stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>('#'), 615)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,requestState = $stack22[0],615,SourceNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, requestState = $stack22[0], 615)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,specialinvoke $stack36.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack37, target, hdivParameter, requestState),644,SinkNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, specialinvoke $stack36.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack37, target, hdivParameter, requestState), 644))), List(Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,$stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>("#"),615,SourceNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, $stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>('#'), 615)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,requestState = $stack22[0],615,SourceNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, requestState = $stack22[0], 615)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,specialinvoke $stack20.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("INVALID_HDIV_PARAMETER_VALUE", target, hdivParameter, requestState),628,SinkNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, specialinvoke $stack20.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>('INVALID_HDIV_PARAMETER_VALUE', target, hdivParameter, requestState), 628))), List(Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,$stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>("#"),615,SourceNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, $stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>('#'), 615)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,requestState = $stack22[0],615,SourceNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, requestState = $stack22[0], 615)) => Node(<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>,parameterValue := @parameter3: java.lang.String,-1,SimpleNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, specialinvoke $stack20.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>('INVALID_HDIV_PARAMETER_VALUE', target, hdivParameter, requestState), 628) => (<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>, this.<org.hdiv.filter.ValidatorError: java.lang.String parameterValue> = parameterValue, 86)) => Node(<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>,this.<org.hdiv.filter.ValidatorError: java.lang.String parameterValue> = parameterValue,86,SinkNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, specialinvoke $stack20.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>('INVALID_HDIV_PARAMETER_VALUE', target, hdivParameter, requestState), 628) => (<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>, this.<org.hdiv.filter.ValidatorError: java.lang.String parameterValue> = parameterValue, 86)))]
Visited methods: 54
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdiv/f20c50afc9a677031789094bef758c39a5dbbc09/original-without-dependencies/hdiv-core-2.1.13-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,62000
Time to perform PDG 0,51100
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/hdiv/f20c50afc9a677031789094bef758c39a5dbbc09/original-without-dependencies/hdiv-core-2.1.13-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,51600
Time to perform PDG 0,43700
CONFLICTS: [List(Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,$stack9 = virtualinvoke requestState.<java.lang.String: boolean contains(java.lang.CharSequence)>("#"),614,SourceNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, $stack9 = virtualinvoke requestState.<java.lang.String: boolean contains(java.lang.CharSequence)>('#'), 614)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,if $stack9 == 0 goto $stack10 = this.<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.state.StateUtil stateUtil>,614,SourceNode, path: ) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,$stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>("#"),615,SourceNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, $stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>('#'), 615)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,requestState = $stack22[0],615,SourceNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, requestState = $stack22[0], 615)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,error#3 = virtualinvoke $stack10.<org.hdiv.state.StateUtil: org.hdiv.state.IState restoreState(java.lang.String)>(requestState),620,SimpleNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, error#3 = virtualinvoke $stack10.<org.hdiv.state.StateUtil: org.hdiv.state.IState restoreState(java.lang.String)>(requestState), 620)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,$stack17 = virtualinvoke this.<org.hdiv.filter.ValidatorHelperRequest: boolean validateHDIVSuffix(java.lang.String,org.hdiv.state.IState)>(requestState, error#3),627,SimpleNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, $stack17 = virtualinvoke this.<org.hdiv.filter.ValidatorHelperRequest: boolean validateHDIVSuffix(java.lang.String,org.hdiv.state.IState)>(requestState, error#3), 627)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,if $stack17 != 0 goto $stack16 = new org.hdiv.filter.ValidatorHelperResult,627,SimpleNode, path: ) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,$stack20 = new org.hdiv.filter.ValidatorError,628,SinkNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, specialinvoke $stack20.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>('INVALID_HDIV_PARAMETER_VALUE', target, hdivParameter, requestState), 628))), List(Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,$stack9 = virtualinvoke requestState.<java.lang.String: boolean contains(java.lang.CharSequence)>("#"),614,SourceNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, $stack9 = virtualinvoke requestState.<java.lang.String: boolean contains(java.lang.CharSequence)>('#'), 614)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,if $stack9 == 0 goto $stack10 = this.<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.state.StateUtil stateUtil>,614,SourceNode, path: ) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,$stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>("#"),615,SourceNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, $stack22 = virtualinvoke requestState.<java.lang.String: java.lang.String[] split(java.lang.String)>('#'), 615)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,requestState = $stack22[0],615,SourceNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, requestState = $stack22[0], 615)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,requestState = null,640,SimpleNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, specialinvoke $stack36.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack37, target, hdivParameter, requestState), 644)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,specialinvoke $stack36.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack37, target, hdivParameter, requestState),644,SinkNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, specialinvoke $stack36.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack37, target, hdivParameter, requestState), 644))), List(Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,requestState = $stack22[0],615,SourceNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, requestState = $stack22[0], 615)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,error#3 = virtualinvoke $stack10.<org.hdiv.state.StateUtil: org.hdiv.state.IState restoreState(java.lang.String)>(requestState),620,SimpleNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, error#3 = virtualinvoke $stack10.<org.hdiv.state.StateUtil: org.hdiv.state.IState restoreState(java.lang.String)>(requestState), 620)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,$stack17 = virtualinvoke this.<org.hdiv.filter.ValidatorHelperRequest: boolean validateHDIVSuffix(java.lang.String,org.hdiv.state.IState)>(requestState, error#3),627,SimpleNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, $stack17 = virtualinvoke this.<org.hdiv.filter.ValidatorHelperRequest: boolean validateHDIVSuffix(java.lang.String,org.hdiv.state.IState)>(requestState, error#3), 627)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,if $stack17 != 0 goto $stack16 = new org.hdiv.filter.ValidatorHelperResult,627,SimpleNode, path: ) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,$stack20 = new org.hdiv.filter.ValidatorError,628,SinkNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, specialinvoke $stack20.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>('INVALID_HDIV_PARAMETER_VALUE', target, hdivParameter, requestState), 628))), List(Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,requestState = $stack22[0],615,SourceNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, requestState = $stack22[0], 615)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,requestState = null,640,SimpleNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, specialinvoke $stack36.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack37, target, hdivParameter, requestState), 644)) => Node(<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>,specialinvoke $stack36.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack37, target, hdivParameter, requestState),644,SinkNode, path: (<org.hdiv.filter.ValidatorHelperRequest: org.hdiv.filter.ValidatorHelperResult restoreState(javax.servlet.http.HttpServletRequest,java.lang.String)>, specialinvoke $stack36.<org.hdiv.filter.ValidatorError: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($stack37, target, hdivParameter, requestState), 644)))]
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
