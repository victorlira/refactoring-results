List(Node(<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,if oldSchema != null goto $stack19 = new java.lang.StringBuilder,85,SourceNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,sbSQL = $stack19,89,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, sbSQL = $stack19, 89)) => Node(<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,$stack37 = virtualinvoke sbSQL.<java.lang.StringBuilder: int length()>(),159,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, $stack37 = virtualinvoke sbSQL.<java.lang.StringBuilder: int length()>(), 159)) => Node(<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,if $stack37 <= 0 goto $stack38 = virtualinvoke oldSequence.<cz.startnet.utils.pgdiff.schema.PgSequence: java.lang.String getComment()>(),159,SimpleNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,virtualinvoke searchPathHelper.<cz.startnet.utils.pgdiff.SearchPathHelper: void outputSearchPath(java.io.PrintWriter)>(writer),160,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, virtualinvoke searchPathHelper.<cz.startnet.utils.pgdiff.SearchPathHelper: void outputSearchPath(java.io.PrintWriter)>(writer), 160)))

List(Node(<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,if oldSequence != null goto virtualinvoke sbSQL.<java.lang.StringBuilder: void setLength(int)>(0),95,SourceNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,newMinValue = virtualinvoke newSequence.<cz.startnet.utils.pgdiff.schema.PgSequence: java.lang.String getMinValue()>(),111,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, newMinValue = virtualinvoke newSequence.<cz.startnet.utils.pgdiff.schema.PgSequence: java.lang.String getMinValue()>(), 111)) => Node(<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,sbSQL = $stack19,89,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, sbSQL = $stack19, 89)) => Node(<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,$stack37 = virtualinvoke sbSQL.<java.lang.StringBuilder: int length()>(),159,SimpleNode, path: (<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, $stack37 = virtualinvoke sbSQL.<java.lang.StringBuilder: int length()>(), 159)) => Node(<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,if $stack37 <= 0 goto $stack38 = virtualinvoke oldSequence.<cz.startnet.utils.pgdiff.schema.PgSequence: java.lang.String getComment()>(),159,SimpleNode, path: ) => Node(<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>,virtualinvoke searchPathHelper.<cz.startnet.utils.pgdiff.SearchPathHelper: void outputSearchPath(java.io.PrintWriter)>(writer),160,SinkNode, path: (<cz.startnet.utils.pgdiff.PgDiffSequences: void alterSequences(java.io.PrintWriter,cz.startnet.utils.pgdiff.PgDiffArguments,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.schema.PgSchema,cz.startnet.utils.pgdiff.SearchPathHelper)>, virtualinvoke searchPathHelper.<cz.startnet.utils.pgdiff.SearchPathHelper: void outputSearchPath(java.io.PrintWriter)>(writer), 160)))

