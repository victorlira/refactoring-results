Running soot scenario launch4j-maven-plugin;com.akathist.maven.plugins.launch4j.Launch4jMojo;getLaunch4jVersion();7fcbfe2892665c6ac9197546184c8b1f6e437ae4
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/launch4j-maven-plugin/7fcbfe2892665c6ac9197546184c8b1f6e437ae4/original-without-dependencies/launch4j-maven-plugin-2.4.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,71800
Time to perform Confluence 1 Inter 0,39000
Configure Soot Confluence 2 Inter 0,25300
Time to perform Confluence 2 Inter 0,07000
Visited methods: 10
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack16 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>(),848,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack16 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>(), 848)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack10 = lengthof $stack9,983,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack10 = lengthof $stack9, 983))
SINK=>BASE: Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,artifact = (org.eclipse.aether.artifact.Artifact) $stack14,859,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(),850,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(), 850)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack10 = lengthof $stack9,983,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack10 = lengthof $stack9, 983)), SOURCE=>BASE: Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack20 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>(),849,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack20 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>(), 849)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988))
SINK=>BASE: Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,artifact = (org.eclipse.aether.artifact.Artifact) $stack14,859,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(),850,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(), 850)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack20 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>(),849,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack20 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>(), 849)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981))
SINK=>BASE: Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,artifact = (org.eclipse.aether.artifact.Artifact) $stack14,859,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(),850,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(), 850)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)), SOURCE=>BASE: Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack16 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>(),848,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack16 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>(), 848)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980))
SINK=>BASE: Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,artifact = (org.eclipse.aether.artifact.Artifact) $stack14,859,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(),850,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(), 850)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980)), SOURCE=>BASE: Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack16 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>(),848,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack16 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>(), 848)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985))
SINK=>BASE: Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,artifact = (org.eclipse.aether.artifact.Artifact) $stack14,859,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(),850,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(), 850)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985))]
Confluence interference in <com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>
Confluence flows from execution of lines 848 and 859 to line 848, defined in $stack16 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>() and artifact = (org.eclipse.aether.artifact.Artifact) $stack14 and used in $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16)
Caused by line 848 flow: path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack16 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>(), 848)
Caused by line 859 flow: path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)
Caused by line 848 flow: path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack10 = lengthof $stack9, 983)
Confluence interference in <com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>
Confluence flows from execution of lines 849 and 859 to line 848, defined in $stack20 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>() and artifact = (org.eclipse.aether.artifact.Artifact) $stack14 and used in $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16)
Caused by line 849 flow: path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack20 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>(), 849)
Caused by line 859 flow: path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)
Caused by line 848 flow: path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)
 Analysis results
----------------------------
 Number of conflicts: 5
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/launch4j-maven-plugin/7fcbfe2892665c6ac9197546184c8b1f6e437ae4/original-without-dependencies/launch4j-maven-plugin-2.4.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,85500
Runtime: 0.008s
Time to perform OA Inter 0,89700
OA Inter Visited methods: 6
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/launch4j-maven-plugin/7fcbfe2892665c6ac9197546184c8b1f6e437ae4/original-without-dependencies/launch4j-maven-plugin-2.4.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,72900
Time to perform DFP Inter 0,30700
Depth limit: 5
CONFLICTS: []
Visited methods: 5
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/launch4j-maven-plugin/7fcbfe2892665c6ac9197546184c8b1f6e437ae4/original-without-dependencies/launch4j-maven-plugin-2.4.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,68300
Time to perform DFP Inter 0,37000
Depth limit: 5
CONFLICTS: DF interference in <com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>
Data flows from execution of line 859 to 848, defined in $stack14 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>() and propagated in $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16)
Caused by line 859 flow: path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack14 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 859)
Caused by line 848 flow: path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848)
DF interference in <com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack14 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),859,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack14 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,artifact = (org.eclipse.aether.artifact.Artifact) $stack14,859,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack16 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>(),848,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack16 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getGroupId()>(), 848)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16),848,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848))), List(Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack14 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),859,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack14 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,artifact = (org.eclipse.aether.artifact.Artifact) $stack14,859,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack20 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>(),849,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack20 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>(), 849)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack21 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>($stack20),849,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack21 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>($stack20), 849)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack21 == 0 goto (branch),849,SinkNode, path: ))]
Visited methods: 5
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/launch4j-maven-plugin/7fcbfe2892665c6ac9197546184c8b1f6e437ae4/original-without-dependencies/launch4j-maven-plugin-2.4.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,73500
Time to perform PDG 0,38700
CONFLICTS: [List(Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack21 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>($stack20),849,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack21 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>($stack20), 849)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack21 == 0 goto (branch),849,SourceNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack12 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(),847,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack12 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(), 847)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack12 == 0 goto (branch),847,SimpleNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,artifact = (org.eclipse.aether.artifact.Artifact) $stack14,859,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,version = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getVersion()>(),852,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, version = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getVersion()>(), 852)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if version != null goto return version,858,SimpleNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,specialinvoke tmp$788316339.<org.apache.maven.plugin.MojoExecutionException: void <init>(java.lang.String)>("Impossible to find which Launch4j version to use, no compatible version found in classpath"),859,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, specialinvoke tmp$788316339.<org.apache.maven.plugin.MojoExecutionException: void <init>(java.lang.String)>('Impossible to find which Launch4j version to use, no compatible version found in classpath'), 859))), List(Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack21 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>($stack20),849,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack21 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>($stack20), 849)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack21 == 0 goto (branch),849,SourceNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack12 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(),847,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack12 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(), 847)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack12 == 0 goto (branch),847,SimpleNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,artifact = (org.eclipse.aether.artifact.Artifact) $stack14,859,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(),850,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(), 850)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack24 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>($stack23),850,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack24 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>($stack23), 850)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack24 == 0 goto (branch),850,SimpleNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,specialinvoke tmp$152337314.<java.lang.StringBuilder: void <init>()>(),853,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, specialinvoke tmp$152337314.<java.lang.StringBuilder: void <init>()>(), 853))), List(Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack17 == 0 goto (branch),848,SourceNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack12 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(),847,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack12 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(), 847)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack12 == 0 goto (branch),847,SimpleNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,artifact = (org.eclipse.aether.artifact.Artifact) $stack14,859,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,version = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getVersion()>(),852,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, version = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getVersion()>(), 852)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if version != null goto return version,858,SimpleNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,specialinvoke tmp$788316339.<org.apache.maven.plugin.MojoExecutionException: void <init>(java.lang.String)>("Impossible to find which Launch4j version to use, no compatible version found in classpath"),859,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, specialinvoke tmp$788316339.<org.apache.maven.plugin.MojoExecutionException: void <init>(java.lang.String)>('Impossible to find which Launch4j version to use, no compatible version found in classpath'), 859))), List(Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack17 == 0 goto (branch),848,SourceNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack12 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(),847,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack12 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(), 847)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack12 == 0 goto (branch),847,SimpleNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,artifact = (org.eclipse.aether.artifact.Artifact) $stack14,859,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack20 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>(),849,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack20 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>(), 849)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack21 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>($stack20),849,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack21 = virtualinvoke $stack19.<java.lang.String: boolean equals(java.lang.Object)>($stack20), 849)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack21 == 0 goto (branch),849,SourceNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack22 = "core",850,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack24 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>($stack23), 850)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack24 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>($stack23),850,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack24 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>($stack23), 850)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack24 == 0 goto (branch),850,SimpleNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,specialinvoke tmp$152337314.<java.lang.StringBuilder: void <init>()>(),853,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, specialinvoke tmp$152337314.<java.lang.StringBuilder: void <init>()>(), 853)))]
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/launch4j-maven-plugin/7fcbfe2892665c6ac9197546184c8b1f6e437ae4/original-without-dependencies/launch4j-maven-plugin-2.4.2-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,49900
Time to perform PDG 0,36100
CONFLICTS: [List(Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack14 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),859,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack14 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,artifact = (org.eclipse.aether.artifact.Artifact) $stack14,859,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(),850,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(), 850)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack24 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>($stack23),850,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack24 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>($stack23), 850)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack24 == 0 goto (branch),850,SimpleNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack12 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(),847,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack12 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(), 847)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack12 == 0 goto (branch),847,SimpleNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16),848,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack17 = virtualinvoke $stack15.<java.lang.String: boolean equals(java.lang.Object)>($stack16), 848)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack17 == 0 goto (branch),848,SinkNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack20 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>(),849,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack20 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getArtifactId()>(), 849))), List(Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack14 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(),859,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack14 = interfaceinvoke l3.<java.util.Iterator: java.lang.Object next()>(), 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,artifact = (org.eclipse.aether.artifact.Artifact) $stack14,859,SourceNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, artifact = (org.eclipse.aether.artifact.Artifact) $stack14, 859)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(),850,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack23 = interfaceinvoke artifact.<org.eclipse.aether.artifact.Artifact: java.lang.String getClassifier()>(), 850)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack24 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>($stack23),850,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack24 = virtualinvoke $stack22.<java.lang.String: boolean equals(java.lang.Object)>($stack23), 850)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack24 == 0 goto (branch),850,SimpleNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack12 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(),847,SimpleNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack12 = interfaceinvoke l3.<java.util.Iterator: boolean hasNext()>(), 847)) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,if $stack12 == 0 goto (branch),847,SimpleNode, path: ) => Node(<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>,$stack15 = this.<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String launch4jGroupId>,848,SinkNode, path: (<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String getLaunch4jVersion()>, $stack15 = this.<com.akathist.maven.plugins.launch4j.Launch4jMojo: java.lang.String launch4jGroupId>, 848)))]
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
