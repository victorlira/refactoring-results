[
  {
    "branch": "L",
    "class": "org.assertj.assertions.generator.BaseAssertionGenerator",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Extract Variable\tsb : StringBuilder in method private assertionContentFor(getter GetterDescription) : String from class org.assertj.assertions.generator.BaseAssertionGenerator",
    "description": {
      "filePath": "src/main/java/org/assertj/assertions/generator/BaseAssertionGenerator.java",
      "startLine": 222,
      "endLine": 223,
      "startColumn": 7,
      "endColumn": 26,
      "codeElementType": "EXPRESSION_STATEMENT",
      "description": "statement with the name of the extracted variable",
      "codeElement": "assertionContent=hasIterableElementsAssertionTemplate.getContent().replaceAll(ELEMENT_TYPE_REGEXP,sb.toString());\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n"
    },
    "line": "248"
  },
  {
    "branch": "L",
    "class": "org.assertj.assertions.generator.BaseAssertionGenerator",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Extract Variable\tsb : StringBuilder in method private assertionContentFor(getter GetterDescription) : String from class org.assertj.assertions.generator.BaseAssertionGenerator",
    "description": {
      "filePath": "src/main/java/org/assertj/assertions/generator/BaseAssertionGenerator.java",
      "startLine": 212,
      "endLine": 237,
      "startColumn": 3,
      "endColumn": 4,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with extracted variable",
      "codeElement": "private assertionContentFor(getter GetterDescription) : String"
    },
    "line": "248"
  },
  {
    "branch": "L",
    "class": "org.assertj.assertions.generator.BaseAssertionGenerator",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Extract Variable\tsb : StringBuilder in method private assertionContentFor(getter GetterDescription) : String from class org.assertj.assertions.generator.BaseAssertionGenerator",
    "description": {
      "filePath": "src/main/java/org/assertj/assertions/generator/BaseAssertionGenerator.java",
      "startLine": 212,
      "endLine": 237,
      "startColumn": 3,
      "endColumn": 4,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with extracted variable",
      "codeElement": "private assertionContentFor(getter GetterDescription) : String"
    },
    "line": "245"
  },
  {
    "branch": "L",
    "class": "org.assertj.assertions.generator.BaseAssertionGenerator",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Extract Variable\tsb : StringBuilder in method private assertionContentFor(getter GetterDescription) : String from class org.assertj.assertions.generator.BaseAssertionGenerator",
    "description": {
      "filePath": "src/main/java/org/assertj/assertions/generator/BaseAssertionGenerator.java",
      "startLine": 212,
      "endLine": 237,
      "startColumn": 3,
      "endColumn": 4,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with extracted variable",
      "codeElement": "private assertionContentFor(getter GetterDescription) : String"
    },
    "line": "244"
  },
  {
    "branch": "L",
    "class": "org.assertj.assertions.generator.BaseAssertionGenerator",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Extract Variable\tsb : StringBuilder in method private assertionContentFor(getter GetterDescription) : String from class org.assertj.assertions.generator.BaseAssertionGenerator",
    "description": {
      "filePath": "src/main/java/org/assertj/assertions/generator/BaseAssertionGenerator.java",
      "startLine": 212,
      "endLine": 237,
      "startColumn": 3,
      "endColumn": 4,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with extracted variable",
      "codeElement": "private assertionContentFor(getter GetterDescription) : String"
    },
    "line": "243"
  },
  {
    "branch": "R",
    "class": "org.assertj.assertions.generator.BaseAssertionGenerator",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Extract Variable\tsb : StringBuilder in method private assertionContentFor(getter GetterDescription) : String from class org.assertj.assertions.generator.BaseAssertionGenerator",
    "description": {
      "filePath": "src/main/java/org/assertj/assertions/generator/BaseAssertionGenerator.java",
      "startLine": 211,
      "endLine": 212,
      "startColumn": 7,
      "endColumn": 26,
      "codeElementType": "EXPRESSION_STATEMENT",
      "description": "statement with the name of the extracted variable",
      "codeElement": "assertionContent=hasIterableElementsAssertionTemplate.getContent().replaceAll(ELEMENT_TYPE_REGEXP,sb.toString());\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n"
    },
    "line": "248"
  },
  {
    "branch": "R",
    "class": "org.assertj.assertions.generator.BaseAssertionGenerator",
    "tool": "ReExtractorPlus",
    "refactoringInfo": "Extract Variable\tsb : StringBuilder in method private assertionContentFor(getter GetterDescription) : String from class org.assertj.assertions.generator.BaseAssertionGenerator",
    "description": {
      "filePath": "src/main/java/org/assertj/assertions/generator/BaseAssertionGenerator.java",
      "startLine": 201,
      "endLine": 226,
      "startColumn": 3,
      "endColumn": 4,
      "codeElementType": "METHOD_DECLARATION",
      "description": "method declaration with extracted variable",
      "codeElement": "private assertionContentFor(getter GetterDescription) : String"
    },
    "line": "248"
  }
]