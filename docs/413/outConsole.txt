Running soot scenario jboss-modules;org.jboss.modules.ModuleXmlParser;parseModuleContents(File, XMLStreamReader, ModuleSpec);292744aae84372d91c45059c63f807174f4f4e05
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jboss-modules/292744aae84372d91c45059c63f807174f4f4e05/original-without-dependencies/jboss-modules-1.0.0.Beta1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,68000
Time to perform Confluence 1 Inter 2,01800
Configure Soot Confluence 2 Inter 0,17100
Time to perform Confluence 2 Inter 1,25300
Visited methods: 108
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jboss-modules/292744aae84372d91c45059c63f807174f4f4e05/original-without-dependencies/jboss-modules-1.0.0.Beta1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,76100
Runtime: 0.118s
Time to perform OA Inter 0,98100
OA Inter Visited methods: 101
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jboss-modules/292744aae84372d91c45059c63f807174f4f4e05/original-without-dependencies/jboss-modules-1.0.0.Beta1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,48700
Time to perform DFP Inter 1,39400
Depth limit: 5
CONFLICTS: []
Visited methods: 54
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jboss-modules/292744aae84372d91c45059c63f807174f4f4e05/original-without-dependencies/jboss-modules-1.0.0.Beta1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,67500
Time to perform DFP Inter 1,49000
Depth limit: 5
CONFLICTS: []
Visited methods: 52
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jboss-modules/292744aae84372d91c45059c63f807174f4f4e05/original-without-dependencies/jboss-modules-1.0.0.Beta1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,48400
Time to perform PDG 0,62100
CONFLICTS: [List(Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack19 = interfaceinvoke specBuilder.<org.jboss.modules.ModuleSpec$Builder: org.jboss.modules.ModuleIdentifier getIdentifier()>(),287,SourceNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack19 = interfaceinvoke specBuilder.<org.jboss.modules.ModuleSpec$Builder: org.jboss.modules.ModuleIdentifier getIdentifier()>(), 287)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack21 = virtualinvoke $stack19.<org.jboss.modules.ModuleIdentifier: boolean equals(org.jboss.modules.ModuleIdentifier)>($stack20),287,SourceNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack21 = virtualinvoke $stack19.<org.jboss.modules.ModuleIdentifier: boolean equals(org.jboss.modules.ModuleIdentifier)>($stack20), 287)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,if $stack21 != 0 goto (branch),287,SourceNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack23 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: boolean hasNext()>(),302,SimpleNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack23 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: boolean hasNext()>(), 302)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,if $stack23 == 0 goto $stack24 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: javax.xml.stream.Location getLocation()>(),302,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack26 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: int nextTag()>(),303,SinkNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack26 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: int nextTag()>(), 303)))]
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jboss-modules/292744aae84372d91c45059c63f807174f4f4e05/original-without-dependencies/jboss-modules-1.0.0.Beta1-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,52100
Time to perform PDG 0,55600
CONFLICTS: [List(Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,lookupswitch($stack26) {     case 1: goto $stack27 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();     case 2: goto return;     default: goto $stack37 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },303,SourceNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,attribute#21 = staticinvoke <org.jboss.modules.ModuleXmlParser$Element: org.jboss.modules.ModuleXmlParser$Element of(javax.xml.namespace.QName)>($stack27),308,SimpleNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, attribute#21 = staticinvoke <org.jboss.modules.ModuleXmlParser$Element: org.jboss.modules.ModuleXmlParser$Element of(javax.xml.namespace.QName)>($stack27), 308)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack29 = interfaceinvoke i#12.<java.util.Set: boolean contains(java.lang.Object)>(attribute#21),309,SimpleNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack29 = interfaceinvoke i#12.<java.util.Set: boolean contains(java.lang.Object)>(attribute#21), 309)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,if $stack29 == 0 goto interfaceinvoke i#12.<java.util.Set: boolean add(java.lang.Object)>(attribute#21),309,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,tableswitch($stack33) {     case 1: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseDependencies(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder);     case 2: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseMainClass(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder);     case 3: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseResources(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder);     default: goto $stack35 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },313,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,staticinvoke <org.jboss.modules.ModuleXmlParser: void parseMainClass(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder),315,SinkNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, staticinvoke <org.jboss.modules.ModuleXmlParser: void parseMainClass(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder), 315))), List(Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,lookupswitch($stack26) {     case 1: goto $stack27 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();     case 2: goto return;     default: goto $stack37 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },303,SourceNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,attribute#21 = staticinvoke <org.jboss.modules.ModuleXmlParser$Element: org.jboss.modules.ModuleXmlParser$Element of(javax.xml.namespace.QName)>($stack27),308,SimpleNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, attribute#21 = staticinvoke <org.jboss.modules.ModuleXmlParser$Element: org.jboss.modules.ModuleXmlParser$Element of(javax.xml.namespace.QName)>($stack27), 308)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack29 = interfaceinvoke i#12.<java.util.Set: boolean contains(java.lang.Object)>(attribute#21),309,SimpleNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack29 = interfaceinvoke i#12.<java.util.Set: boolean contains(java.lang.Object)>(attribute#21), 309)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,if $stack29 == 0 goto interfaceinvoke i#12.<java.util.Set: boolean add(java.lang.Object)>(attribute#21),309,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,tableswitch($stack33) {     case 1: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseDependencies(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder);     case 2: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseMainClass(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder);     case 3: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseResources(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder);     default: goto $stack35 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },313,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,staticinvoke <org.jboss.modules.ModuleXmlParser: void parseResources(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder),316,SinkNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, staticinvoke <org.jboss.modules.ModuleXmlParser: void parseResources(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder), 316))), List(Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,lookupswitch($stack26) {     case 1: goto $stack27 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();     case 2: goto return;     default: goto $stack37 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },303,SourceNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,attribute#21 = staticinvoke <org.jboss.modules.ModuleXmlParser$Element: org.jboss.modules.ModuleXmlParser$Element of(javax.xml.namespace.QName)>($stack27),308,SimpleNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, attribute#21 = staticinvoke <org.jboss.modules.ModuleXmlParser$Element: org.jboss.modules.ModuleXmlParser$Element of(javax.xml.namespace.QName)>($stack27), 308)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack29 = interfaceinvoke i#12.<java.util.Set: boolean contains(java.lang.Object)>(attribute#21),309,SimpleNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack29 = interfaceinvoke i#12.<java.util.Set: boolean contains(java.lang.Object)>(attribute#21), 309)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,if $stack29 == 0 goto interfaceinvoke i#12.<java.util.Set: boolean add(java.lang.Object)>(attribute#21),309,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,tableswitch($stack33) {     case 1: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseDependencies(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder);     case 2: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseMainClass(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder);     case 3: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseResources(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder);     default: goto $stack35 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },313,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,staticinvoke <org.jboss.modules.ModuleXmlParser: void parseDependencies(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder),314,SinkNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, staticinvoke <org.jboss.modules.ModuleXmlParser: void parseDependencies(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder), 314)))]
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
