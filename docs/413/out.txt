List(Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack19 = interfaceinvoke specBuilder.<org.jboss.modules.ModuleSpec$Builder: org.jboss.modules.ModuleIdentifier getIdentifier()>(),287,SourceNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack19 = interfaceinvoke specBuilder.<org.jboss.modules.ModuleSpec$Builder: org.jboss.modules.ModuleIdentifier getIdentifier()>(), 287)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack21 = virtualinvoke $stack19.<org.jboss.modules.ModuleIdentifier: boolean equals(org.jboss.modules.ModuleIdentifier)>($stack20),287,SourceNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack21 = virtualinvoke $stack19.<org.jboss.modules.ModuleIdentifier: boolean equals(org.jboss.modules.ModuleIdentifier)>($stack20), 287)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,if $stack21 != 0 goto (branch),287,SourceNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack23 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: boolean hasNext()>(),302,SimpleNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack23 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: boolean hasNext()>(), 302)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,if $stack23 == 0 goto $stack24 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: javax.xml.stream.Location getLocation()>(),302,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack26 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: int nextTag()>(),303,SinkNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack26 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: int nextTag()>(), 303)))

List(Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,lookupswitch($stack26) {     case 1: goto $stack27 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();     case 2: goto return;     default: goto $stack37 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },303,SourceNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,attribute#21 = staticinvoke <org.jboss.modules.ModuleXmlParser$Element: org.jboss.modules.ModuleXmlParser$Element of(javax.xml.namespace.QName)>($stack27),308,SimpleNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, attribute#21 = staticinvoke <org.jboss.modules.ModuleXmlParser$Element: org.jboss.modules.ModuleXmlParser$Element of(javax.xml.namespace.QName)>($stack27), 308)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack29 = interfaceinvoke i#12.<java.util.Set: boolean contains(java.lang.Object)>(attribute#21),309,SimpleNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack29 = interfaceinvoke i#12.<java.util.Set: boolean contains(java.lang.Object)>(attribute#21), 309)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,if $stack29 == 0 goto interfaceinvoke i#12.<java.util.Set: boolean add(java.lang.Object)>(attribute#21),309,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,tableswitch($stack33) {     case 1: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseDependencies(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder);     case 2: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseMainClass(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder);     case 3: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseResources(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder);     default: goto $stack35 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },313,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,staticinvoke <org.jboss.modules.ModuleXmlParser: void parseMainClass(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder),315,SinkNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, staticinvoke <org.jboss.modules.ModuleXmlParser: void parseMainClass(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder), 315)))

List(Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,lookupswitch($stack26) {     case 1: goto $stack27 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();     case 2: goto return;     default: goto $stack37 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },303,SourceNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,attribute#21 = staticinvoke <org.jboss.modules.ModuleXmlParser$Element: org.jboss.modules.ModuleXmlParser$Element of(javax.xml.namespace.QName)>($stack27),308,SimpleNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, attribute#21 = staticinvoke <org.jboss.modules.ModuleXmlParser$Element: org.jboss.modules.ModuleXmlParser$Element of(javax.xml.namespace.QName)>($stack27), 308)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack29 = interfaceinvoke i#12.<java.util.Set: boolean contains(java.lang.Object)>(attribute#21),309,SimpleNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack29 = interfaceinvoke i#12.<java.util.Set: boolean contains(java.lang.Object)>(attribute#21), 309)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,if $stack29 == 0 goto interfaceinvoke i#12.<java.util.Set: boolean add(java.lang.Object)>(attribute#21),309,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,tableswitch($stack33) {     case 1: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseDependencies(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder);     case 2: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseMainClass(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder);     case 3: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseResources(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder);     default: goto $stack35 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },313,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,staticinvoke <org.jboss.modules.ModuleXmlParser: void parseResources(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder),316,SinkNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, staticinvoke <org.jboss.modules.ModuleXmlParser: void parseResources(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder), 316)))

List(Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,lookupswitch($stack26) {     case 1: goto $stack27 = interfaceinvoke reader.<javax.xml.stream.XMLStreamReader: javax.xml.namespace.QName getName()>();     case 2: goto return;     default: goto $stack37 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },303,SourceNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,attribute#21 = staticinvoke <org.jboss.modules.ModuleXmlParser$Element: org.jboss.modules.ModuleXmlParser$Element of(javax.xml.namespace.QName)>($stack27),308,SimpleNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, attribute#21 = staticinvoke <org.jboss.modules.ModuleXmlParser$Element: org.jboss.modules.ModuleXmlParser$Element of(javax.xml.namespace.QName)>($stack27), 308)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,$stack29 = interfaceinvoke i#12.<java.util.Set: boolean contains(java.lang.Object)>(attribute#21),309,SimpleNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, $stack29 = interfaceinvoke i#12.<java.util.Set: boolean contains(java.lang.Object)>(attribute#21), 309)) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,if $stack29 == 0 goto interfaceinvoke i#12.<java.util.Set: boolean add(java.lang.Object)>(attribute#21),309,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,tableswitch($stack33) {     case 1: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseDependencies(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder);     case 2: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseMainClass(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder);     case 3: goto staticinvoke <org.jboss.modules.ModuleXmlParser: void parseResources(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(root, reader, specBuilder);     default: goto $stack35 = staticinvoke <org.jboss.modules.ModuleXmlParser: javax.xml.stream.XMLStreamException unexpectedContent(javax.xml.stream.XMLStreamReader)>(reader); },313,SimpleNode, path: ) => Node(<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>,staticinvoke <org.jboss.modules.ModuleXmlParser: void parseDependencies(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder),314,SinkNode, path: (<org.jboss.modules.ModuleXmlParser: void parseModuleContents(java.io.File,javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>, staticinvoke <org.jboss.modules.ModuleXmlParser: void parseDependencies(javax.xml.stream.XMLStreamReader,org.jboss.modules.ModuleSpec$Builder)>(reader, specBuilder), 314)))

