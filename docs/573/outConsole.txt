Running soot scenario checksum-maven-plugin;net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget;close();64d5937cfbe053b0773e365369d661c06bc34ba4
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/checksum-maven-plugin/64d5937cfbe053b0773e365369d661c06bc34ba4/original-without-dependencies/checksum-maven-plugin-1.3-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,44100
Time to perform Confluence 1 Inter 0,61500
Configure Soot Confluence 2 Inter 0,19700
Time to perform Confluence 2 Inter 0,14600
Visited methods: 26
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack33 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,142,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack9 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#"),133,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack9 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('#'), 133))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack48 = (java.lang.String) $stack47,149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack48 = (java.lang.String) $stack47, 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1476533308,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1476533308, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack9 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#"),133,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack9 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('#'), 133)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File"),133,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('File'), 133)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack48 = (java.lang.String) $stack47,149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack48 = (java.lang.String) $stack47, 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack25 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),162,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack25 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(), 162)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,staticinvoke <org.codehaus.plexus.util.FileUtils: void fileWrite(java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack24, $stack25),162,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, staticinvoke <org.codehaus.plexus.util.FileUtils: void fileWrite(java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack24, $stack25), 162))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack48 = (java.lang.String) $stack47,149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack48 = (java.lang.String) $stack47, 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1476533308,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1476533308, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack25 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),162,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack25 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(), 162)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,staticinvoke <org.codehaus.plexus.util.FileUtils: void fileWrite(java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack24, $stack25),162,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, staticinvoke <org.codehaus.plexus.util.FileUtils: void fileWrite(java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack24, $stack25), 162)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack21 = new java.lang.StringBuilder,65,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, specialinvoke $stack21.<java.lang.StringBuilder: void <init>()>(), 65)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(subPath),65,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(subPath), 65)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23),65,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack24 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack23), 65)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,subPath = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>(),65,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, subPath = virtualinvoke $stack24.<java.lang.StringBuilder: java.lang.String toString()>(), 65)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,l1 := @parameter0: java.lang.CharSequence,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack3 = interfaceinvoke l1.<java.lang.CharSequence: java.lang.String toString()>(),2239,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60) => (<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>, $stack3 = interfaceinvoke l1.<java.lang.CharSequence: java.lang.String toString()>(), 2239)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($stack3, 16),2239,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60) => (<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>, $stack4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($stack3, 16), 2239)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0),2239,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60) => (<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>, $stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0), 2239)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack8 = virtualinvoke $stack5.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($stack7),2240,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack14 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>(),60,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack14 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>(), 60)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack15 = virtualinvoke $stack14.<java.io.File: java.lang.String getPath()>(),60,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack15 = virtualinvoke $stack14.<java.io.File: java.lang.String getPath()>(), 60)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ""),60,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0),2239,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60) => (<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>, $stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0), 2239)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack8 = virtualinvoke $stack5.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($stack7),2240,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack45 = interfaceinvoke fileHashcodes.<java.util.Map: boolean containsKey(java.lang.Object)>(algorithm),147,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack45 = interfaceinvoke fileHashcodes.<java.util.Map: boolean containsKey(java.lang.Object)>(algorithm), 147))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack45 = interfaceinvoke fileHashcodes.<java.util.Map: boolean containsKey(java.lang.Object)>(algorithm),147,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack45 = interfaceinvoke fileHashcodes.<java.util.Map: boolean containsKey(java.lang.Object)>(algorithm), 147)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String basePath>,40,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack29 = new java.lang.StringBuilder,58,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, specialinvoke $stack29.<java.lang.StringBuilder: void <init>()>(), 58)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,specialinvoke $stack29.<java.lang.StringBuilder: void <init>()>(),58,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, specialinvoke $stack29.<java.lang.StringBuilder: void <init>()>(), 58))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack29 = new java.lang.StringBuilder,58,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, specialinvoke $stack29.<java.lang.StringBuilder: void <init>()>(), 58)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,specialinvoke $stack29.<java.lang.StringBuilder: void <init>()>(),58,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, specialinvoke $stack29.<java.lang.StringBuilder: void <init>()>(), 58)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String basePath>,40,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l3 = l0.<java.lang.String: char[] value>,1403,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449) => (<java.lang.String: boolean startsWith(java.lang.String,int)>, l3 = l0.<java.lang.String: char[] value>, 1403))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l3 = l0.<java.lang.String: char[] value>,1403,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449) => (<java.lang.String: boolean startsWith(java.lang.String,int)>, l3 = l0.<java.lang.String: char[] value>, 1403)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack33 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,142,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack51 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(","),136,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack51 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(','), 136)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(algorithm),136,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(algorithm), 136))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack18 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,154,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1476533308,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1476533308, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack51 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(","),136,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack51 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(','), 136)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String basePath>,40,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,return $stack1,40,SinkNode, path: )
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,this := @this: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String basePath>,40,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,return $stack1,40,SinkNode, path: ), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack33 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,142,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack18 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,154,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1476533308,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1476533308, 130)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ""),60,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0),2239,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60) => (<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>, $stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0), 2239))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,l1 := @parameter0: java.lang.CharSequence,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack3 = interfaceinvoke l1.<java.lang.CharSequence: java.lang.String toString()>(),2239,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60) => (<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>, $stack3 = interfaceinvoke l1.<java.lang.CharSequence: java.lang.String toString()>(), 2239)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack33 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,142,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack51 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(","),136,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack51 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(','), 136)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(algorithm),136,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(algorithm), 136))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack48 = (java.lang.String) $stack47,149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack48 = (java.lang.String) $stack47, 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1476533308,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1476533308, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack51 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(","),136,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack51 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(','), 136)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12),57,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,if $stack13 != 0 goto $stack14 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>(),57,SinkNode, path: )
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12),57,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,if $stack13 != 0 goto $stack14 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>(),57,SinkNode, path: ), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack33 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,142,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack9 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#"),133,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack9 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('#'), 133))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack18 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,154,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1476533308,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1476533308, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack9 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#"),133,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack9 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('#'), 133)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File"),133,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('File'), 133)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack12 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("file.separator"),57,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack12 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>('file.separator'), 57)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,$stack8 = l1.<java.lang.String: char[] value>,1407,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449) => (<java.lang.String: boolean startsWith(java.lang.String,int)>, $stack8 = l1.<java.lang.String: char[] value>, 1407)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l7 = lengthof $stack8,1407,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449) => (<java.lang.String: boolean startsWith(java.lang.String,int)>, l7 = lengthof $stack8, 1407)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,$stack11 = $stack10 - l7,1410,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449) => (<java.lang.String: boolean startsWith(java.lang.String,int)>, $stack11 = $stack10 - l7, 1410))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,$stack9 = l0.<java.lang.String: char[] value>,1410,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449) => (<java.lang.String: boolean startsWith(java.lang.String,int)>, $stack9 = l0.<java.lang.String: char[] value>, 1410)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,$stack10 = lengthof $stack9,1410,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449) => (<java.lang.String: boolean startsWith(java.lang.String,int)>, $stack10 = lengthof $stack9, 1410)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,$stack11 = $stack10 - l7,1410,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449) => (<java.lang.String: boolean startsWith(java.lang.String,int)>, $stack11 = $stack10 - l7, 1410)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File file>,45,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack5 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>(), 50)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>,return $stack1,45,SinkNode, path: )
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>,this := @this: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack5 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>(), 50)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File file>,45,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack5 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>(), 50)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>,return $stack1,45,SinkNode, path: ), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack9 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),72,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack9 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 72)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack10 = virtualinvoke $stack9.<java.lang.String: boolean isEmpty()>(),72,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack10 = virtualinvoke $stack9.<java.lang.String: boolean isEmpty()>(), 72)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,if $stack10 != 0 goto return filePath,72,SinkNode, path: )
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack14 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>(),60,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack14 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>(), 60)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack15 = virtualinvoke $stack14.<java.io.File: java.lang.String getPath()>(),60,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack15 = virtualinvoke $stack14.<java.io.File: java.lang.String getPath()>(), 60)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ""),60,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,return filePath,72,SinkNode, path: ), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String basePath>,40,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l3 = l0.<java.lang.String: char[] value>,1403,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449) => (<java.lang.String: boolean startsWith(java.lang.String,int)>, l3 = l0.<java.lang.String: char[] value>, 1403)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,$stack15 = l3[$stack12],1413,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449) => (<java.lang.String: boolean startsWith(java.lang.String,int)>, $stack15 = l3[$stack12], 1413))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l3 = l0.<java.lang.String: char[] value>,1403,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449) => (<java.lang.String: boolean startsWith(java.lang.String,int)>, l3 = l0.<java.lang.String: char[] value>, 1403)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,$stack15 = l3[$stack12],1413,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449) => (<java.lang.String: boolean startsWith(java.lang.String,int)>, $stack15 = l3[$stack12], 1413)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack48 = (java.lang.String) $stack47,149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack48 = (java.lang.String) $stack47, 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(","),146,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(','), 146))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack48 = (java.lang.String) $stack47,149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack48 = (java.lang.String) $stack47, 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1476533308,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1476533308, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(","),146,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(','), 146)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String basePath>,40,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,$stack2 = l0.<java.lang.String: char[] value>,1449,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack2 = l0.<java.lang.String: char[] value>, 1449)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,$stack5 = lengthof $stack2,1449,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack5 = lengthof $stack2, 1449)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,$stack6 = $stack5 - $stack4,1449,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack6 = $stack5 - $stack4, 1449)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l4 = l2,1404,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449) => (<java.lang.String: boolean startsWith(java.lang.String,int)>, l4 = l2, 1404))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,$stack2 = l0.<java.lang.String: char[] value>,1449,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack2 = l0.<java.lang.String: char[] value>, 1449)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,$stack5 = lengthof $stack2,1449,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack5 = lengthof $stack2, 1449)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,$stack6 = $stack5 - $stack4,1449,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack6 = $stack5 - $stack4, 1449)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449)) => Node(<java.lang.String: boolean startsWith(java.lang.String,int)>,l4 = l2,1404,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack7 = virtualinvoke l0.<java.lang.String: boolean startsWith(java.lang.String,int)>(l1, $stack6), 1449) => (<java.lang.String: boolean startsWith(java.lang.String,int)>, l4 = l2, 1404)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack33 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,142,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48),149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48), 149))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack18 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,154,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1476533308,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1476533308, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48),149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48), 149)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack48 = (java.lang.String) $stack47,149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack48 = (java.lang.String) $stack47, 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(","),146,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(','), 146))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack18 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,154,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1476533308,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1476533308, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(","),146,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(','), 146)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack33 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,142,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack48 = (java.lang.String) $stack47,149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack48 = (java.lang.String) $stack47, 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1476533308,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1476533308, 130)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack33 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,142,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48),149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack48), 149))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack48 = (java.lang.String) $stack47,149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack48 = (java.lang.String) $stack47, 149)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,$stack2 = l0.<java.lang.String: char[] value>,1449,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack2 = l0.<java.lang.String: char[] value>, 1449)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,$stack5 = lengthof $stack2,1449,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack5 = lengthof $stack2, 1449)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,$stack6 = $stack5 - $stack4,1449,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack6 = $stack5 - $stack4, 1449))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,$stack2 = l0.<java.lang.String: char[] value>,1449,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack2 = l0.<java.lang.String: char[] value>, 1449)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,$stack5 = lengthof $stack2,1449,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack5 = lengthof $stack2, 1449)) => Node(<java.lang.String: boolean endsWith(java.lang.String)>,$stack6 = $stack5 - $stack4,1449,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57) => (<java.lang.String: boolean endsWith(java.lang.String)>, $stack6 = $stack5 - $stack4, 1449)), SOURCE=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack48 = (java.lang.String) $stack47,149,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack48 = (java.lang.String) $stack47, 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack25 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),162,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack25 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(), 162)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,staticinvoke <org.codehaus.plexus.util.FileUtils: void fileWrite(java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack24, $stack25),162,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, staticinvoke <org.codehaus.plexus.util.FileUtils: void fileWrite(java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack24, $stack25), 162))
SINK=>BASE: Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack18 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,154,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1476533308,130,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1476533308, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack25 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),162,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack25 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(), 162)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,staticinvoke <org.codehaus.plexus.util.FileUtils: void fileWrite(java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack24, $stack25),162,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, staticinvoke <org.codehaus.plexus.util.FileUtils: void fileWrite(java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack24, $stack25), 162))]
Confluence interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Confluence flows from execution of lines 142 and 165 to line 133, defined in $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33) and $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>() and used in virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File")
Caused by line 142 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)
Caused by line 165 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)
Caused by line 133 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke $stack9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('File'), 133)
Confluence interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Confluence flows from execution of lines 140 and 165 to line 162, defined in $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>() and $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>() and used in staticinvoke <org.codehaus.plexus.util.FileUtils: void fileWrite(java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack24, $stack25)
Caused by line 140 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 140)
Caused by line 165 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)
Caused by line 162 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, staticinvoke <org.codehaus.plexus.util.FileUtils: void fileWrite(java.lang.String,java.lang.String,java.lang.String)>($stack23, $stack24, $stack25), 162)
Confluence interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Confluence flows from execution of lines 142 and 165 to line 142, defined in $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath) and $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>() and used in $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath)
Caused by line 142 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, specialinvoke $stack21.<java.lang.StringBuilder: void <init>()>(), 65)
Caused by line 165 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)
Caused by line 142 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60)
Confluence interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Confluence flows from execution of lines 140 and 165 to line 147, defined in $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>() and $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>() and used in $stack45 = interfaceinvoke fileHashcodes.<java.util.Map: boolean containsKey(java.lang.Object)>(algorithm)
Caused by line 140 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 140)
Caused by line 165 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)
Caused by line 147 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack45 = interfaceinvoke fileHashcodes.<java.util.Map: boolean containsKey(java.lang.Object)>(algorithm), 147)
Confluence interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Confluence flows from execution of lines 142 and 154 to line 136, defined in $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33) and virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18) and used in $stack51 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",")
Caused by line 142 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)
Caused by line 154 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154)
Caused by line 136 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack51 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(','), 136)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/checksum-maven-plugin/64d5937cfbe053b0773e365369d661c06bc34ba4/original-without-dependencies/checksum-maven-plugin-1.3-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,72200
Runtime: 0.012s
Time to perform OA Inter 0,81600
OA Inter Visited methods: 2
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/checksum-maven-plugin/64d5937cfbe053b0773e365369d661c06bc34ba4/original-without-dependencies/checksum-maven-plugin-1.3-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,39900
Time to perform DFP Inter 0,55800
Depth limit: 5
CONFLICTS: DF interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Data flows from execution of line 140 to 165, defined in $stack14 = this.<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.util.Map filesHashcodes> and propagated in $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>()
Caused by line 140 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack14 = this.<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.util.Map filesHashcodes>, 140)
Caused by line 165 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)
DF interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Data flows from execution of line 142 to 154, defined in $stack33 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR> and propagated in virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18)
Caused by line 142 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)
Caused by line 154 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154)
DF interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Data flows from execution of line 140 to 154, defined in $stack14 = this.<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.util.Map filesHashcodes> and propagated in virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18)
Caused by line 140 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack14 = this.<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.util.Map filesHashcodes>, 140)
Caused by line 154 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154)
[List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack14 = this.<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.util.Map filesHashcodes>,140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack14 = this.<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.util.Map filesHashcodes>, 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),149,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack48 = (java.lang.String) $stack47,149,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack48 = (java.lang.String) $stack47, 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$971256592,130,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$971256592, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18),154,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154))), List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack14 = this.<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.util.Map filesHashcodes>,140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack14 = this.<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.util.Map filesHashcodes>, 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165))), List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack33 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,142,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$971256592,130,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$971256592, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18),154,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154)))]
Visited methods: 13
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/checksum-maven-plugin/64d5937cfbe053b0773e365369d661c06bc34ba4/original-without-dependencies/checksum-maven-plugin-1.3-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,40600
Time to perform DFP Inter 0,59600
Depth limit: 5
CONFLICTS: DF interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Data flows from execution of line 165 to 142, defined in $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>() and propagated in specialinvoke $stack29.<java.lang.StringBuilder: void <init>()>()
Caused by line 165 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)
Caused by line 142 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, specialinvoke $stack29.<java.lang.StringBuilder: void <init>()>(), 58)
DF interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Data flows from execution of line 165 to 142, defined in $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>() and propagated in filePath = virtualinvoke filePath.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(subPath, "")
Caused by line 165 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)
Caused by line 142 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)
DF interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Data flows from execution of line 165 to 142, defined in $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>() and propagated in basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>()
Caused by line 165 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)
Caused by line 142 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)
DF interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Data flows from execution of line 165 to 142, defined in $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>() and propagated in $stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File file>
Caused by line 165 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)
Caused by line 142 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack5 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>(), 50)
DF interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Data flows from execution of line 165 to 142, defined in $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>() and propagated in $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12)
Caused by line 165 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)
Caused by line 142 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57)
DF interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Data flows from execution of line 165 to 142, defined in $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>() and propagated in filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, "")
Caused by line 165 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)
Caused by line 142 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)
DF interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Data flows from execution of line 165 to 142, defined in $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>() and propagated in $stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String basePath>
Caused by line 165 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)
Caused by line 142 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)
DF interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Data flows from execution of line 154 to 142, defined in $stack18 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR> and propagated in virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35)
Caused by line 154 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154)
Caused by line 142 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35), 142)
DF interference in <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>
Data flows from execution of line 165 to 142, defined in $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>() and propagated in $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath)
Caused by line 165 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)
Caused by line 142 flow: path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)
[List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath),142,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142))), List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,this := @this: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String basePath>,40,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53))), List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>,this := @this: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack5 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>(), 50)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File file>,45,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack5 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.io.File getFile()>(), 50))), List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,this := @this: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String basePath>,40,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ""),60,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0),2239,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60) => (<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>, $stack5 = virtualinvoke $stack4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0), 2239)) => Node(<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>,$stack8 = virtualinvoke $stack5.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>($stack7),2240,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ''), 60)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,filePath = virtualinvoke filePath.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(subPath, ""),67,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142))), List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,this := @this: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String basePath>,40,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,filePath = virtualinvoke $stack15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(basePath, ""),60,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142))), List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,this := @this: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String basePath>,40,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12),57,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack13 = virtualinvoke basePath.<java.lang.String: boolean endsWith(java.lang.String)>($stack12), 57))), List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,this := @this: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String basePath>,40,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55))), List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack18 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,154,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$971256592,130,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$971256592, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33),142,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35),142,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35), 142))), List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,file := @parameter0: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,this := @this: net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,-1,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>,$stack1 = this.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String basePath>,40,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, $stack7 = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 53)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(),55,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, basePath = virtualinvoke file.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getBasePath()>(), 55)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,$stack29 = new java.lang.StringBuilder,58,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, specialinvoke $stack29.<java.lang.StringBuilder: void <init>()>(), 58)) => Node(<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>,specialinvoke $stack29.<java.lang.StringBuilder: void <init>()>(),58,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142) => (<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>, specialinvoke $stack29.<java.lang.StringBuilder: void <init>()>(), 58)))]
Visited methods: 13
 Analysis results
----------------------------
 Number of conflicts: 9
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/checksum-maven-plugin/64d5937cfbe053b0773e365369d661c06bc34ba4/original-without-dependencies/checksum-maven-plugin-1.3-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,40400
Time to perform PDG 0,57000
CONFLICTS: [List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),143,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack38 = interfaceinvoke $stack37.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,fileHashcodes = (java.util.Map) $stack38,143,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, fileHashcodes = (java.util.Map) $stack38, 143)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm),149,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack47 = interfaceinvoke fileHashcodes.<java.util.Map: java.lang.Object get(java.lang.Object)>(algorithm), 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack48 = (java.lang.String) $stack47,149,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack48 = (java.lang.String) $stack47, 149)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18),154,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154))), List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack15 = interfaceinvoke $stack14.<java.util.Map: java.util.Set keySet()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(),140,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, e = interfaceinvoke $stack15.<java.util.Set: java.util.Iterator iterator()>(), 140)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165))), List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack33 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,142,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18),154,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154)))]
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/checksum-maven-plugin/64d5937cfbe053b0773e365369d661c06bc34ba4/original-without-dependencies/checksum-maven-plugin-1.3-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,36800
Time to perform PDG 0,55000
CONFLICTS: [List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(),165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack32 = interfaceinvoke e.<java.util.Iterator: java.lang.Object next()>(), 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32,165,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, algorithm = (net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile) $stack32, 165)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath),142,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack35 = virtualinvoke algorithm.<net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile: java.lang.String getRelativePath(net.nicoulaj.maven.plugins.checksum.mojo.ChecksumFile,java.lang.String)>(algorithm, subPath), 142))), List(Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack18 = <net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: java.lang.String LINE_SEPARATOR>,154,SourceNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack18), 154)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,sb = tmp$1141811719,130,SimpleNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, sb = tmp$1141811719, 130)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,$stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33),142,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, $stack34 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack33), 142)) => Node(<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>,virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35),142,SinkNode, path: (<net.nicoulaj.maven.plugins.checksum.execution.target.CsvSummaryFileTarget: void close(java.lang.String)>, virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack35), 142)))]
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
