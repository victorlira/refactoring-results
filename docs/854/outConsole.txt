Running soot scenario jcabi-jdbc;com.jcabi.jdbc.ColumnOutcome;fetch(ResultSet);40e95d792465ff63e698273a475a8b256cf11a5b
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jcabi-jdbc/40e95d792465ff63e698273a475a8b256cf11a5b/original-without-dependencies/jcabi-jdbc-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,49900
Time to perform Confluence 1 Inter 0,58100
Configure Soot Confluence 2 Inter 0,25800
Time to perform Confluence 2 Inter 0,23100
Visited methods: 36
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,$stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1),3369,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369)) => Node(<java.lang.ClassCastException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369) => (<java.lang.ClassCastException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 58)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369) => (<java.lang.ClassCastException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 58) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369) => (<java.lang.ClassCastException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 58) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66))
SINK=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,$stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1),3369,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369)) => Node(<java.lang.ClassCastException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369) => (<java.lang.ClassCastException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 58)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369) => (<java.lang.ClassCastException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 58) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),66,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369) => (<java.lang.ClassCastException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 58) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)), SOURCE=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,$stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1),3369,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369))
SINK=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,$stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1),3369,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369)), SOURCE=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,$stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1),3369,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369)) => Node(<java.lang.ClassCastException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369) => (<java.lang.ClassCastException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 58)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369) => (<java.lang.ClassCastException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 58) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62))
SINK=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,$stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1),3369,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369)) => Node(<java.lang.ClassCastException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369) => (<java.lang.ClassCastException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 58)) => Node(<java.lang.RuntimeException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1),62,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369) => (<java.lang.ClassCastException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 58) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62)), SOURCE=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,$stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1),3369,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369)) => Node(<java.lang.ClassCastException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369)) => Node(<java.lang.ClassCastException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1),58,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369) => (<java.lang.ClassCastException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 58))
SINK=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,$stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1),3369,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369)) => Node(<java.lang.ClassCastException: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369)) => Node(<java.lang.ClassCastException: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1),58,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369) => (<java.lang.ClassCastException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 58)), SOURCE=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369)) => Node(<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>,$stack4 = virtualinvoke l1.<java.lang.Object: java.lang.Class getClass()>(),3374,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369) => (<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>, $stack4 = virtualinvoke l1.<java.lang.Object: java.lang.Class getClass()>(), 3374)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack19 = virtualinvoke tpe.<java.lang.Class: java.lang.String getName()>(), 129)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack19 = virtualinvoke tpe.<java.lang.Class: java.lang.String getName()>(), 129)) => Node(<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>,$stack5 = virtualinvoke $stack4.<java.lang.Class: java.lang.String getName()>(),3374,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369) => (<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>, $stack5 = virtualinvoke $stack4.<java.lang.Class: java.lang.String getName()>(), 3374))
SINK=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369)) => Node(<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>,$stack4 = virtualinvoke l1.<java.lang.Object: java.lang.Class getClass()>(),3374,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369) => (<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>, $stack4 = virtualinvoke l1.<java.lang.Object: java.lang.Class getClass()>(), 3374)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack19 = virtualinvoke tpe.<java.lang.Class: java.lang.String getName()>(), 129)) => Node(<java.lang.Class: java.lang.String getName()>,$stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(),642,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack19 = virtualinvoke tpe.<java.lang.Class: java.lang.String getName()>(), 129) => (<java.lang.Class: java.lang.String getName()>, $stack2 = specialinvoke l0.<java.lang.Class: java.lang.String getName0()>(), 642)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = $stack2,642,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack19 = virtualinvoke tpe.<java.lang.Class: java.lang.String getName()>(), 129)) => Node(<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>,$stack5 = virtualinvoke $stack4.<java.lang.Class: java.lang.String getName()>(),3374,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369) => (<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>, $stack5 = virtualinvoke $stack4.<java.lang.Class: java.lang.String getName()>(), 3374)), SOURCE=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,$stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result),137,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,return $stack22,137,SinkNode, path: )
SINK=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,$stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result),137,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,return $stack22,137,SinkNode, path: ), SOURCE=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369)) => Node(<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>,$stack4 = virtualinvoke l1.<java.lang.Object: java.lang.Class getClass()>(),3374,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369) => (<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>, $stack4 = virtualinvoke l1.<java.lang.Object: java.lang.Class getClass()>(), 3374)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack19 = virtualinvoke tpe.<java.lang.Class: java.lang.String getName()>(), 129)) => Node(<java.lang.Class: java.lang.String getName()>,l0.<java.lang.Class: java.lang.String name> = $stack2,642,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack19 = virtualinvoke tpe.<java.lang.Class: java.lang.String getName()>(), 129) => (<java.lang.Class: java.lang.String getName()>, l0.<java.lang.Class: java.lang.String name> = $stack2, 642))
SINK=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369)) => Node(<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>,$stack4 = virtualinvoke l1.<java.lang.Object: java.lang.Class getClass()>(),3374,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369) => (<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>, $stack4 = virtualinvoke l1.<java.lang.Object: java.lang.Class getClass()>(), 3374)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack19 = virtualinvoke tpe.<java.lang.Class: java.lang.String getName()>(), 129)) => Node(<java.lang.Class: java.lang.String getName()>,l0.<java.lang.Class: java.lang.String name> = $stack2,642,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack19 = virtualinvoke tpe.<java.lang.Class: java.lang.String getName()>(), 129) => (<java.lang.Class: java.lang.String getName()>, l0.<java.lang.Class: java.lang.String name> = $stack2, 642)), SOURCE=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369)) => Node(<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>,$stack4 = virtualinvoke l1.<java.lang.Object: java.lang.Class getClass()>(),3374,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369) => (<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>, $stack4 = virtualinvoke l1.<java.lang.Object: java.lang.Class getClass()>(), 3374)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack19 = virtualinvoke tpe.<java.lang.Class: java.lang.String getName()>(), 129)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack19 = virtualinvoke tpe.<java.lang.Class: java.lang.String getName()>(), 129))
SINK=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369)) => Node(<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>,$stack4 = virtualinvoke l1.<java.lang.Object: java.lang.Class getClass()>(),3374,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack5 = specialinvoke l0.<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>(l1), 3369) => (<java.lang.Class: java.lang.String cannotCastMsg(java.lang.Object)>, $stack4 = virtualinvoke l1.<java.lang.Object: java.lang.Class getClass()>(), 3374)) => Node(<java.lang.Class: java.lang.String getName()>,l0 := @this: java.lang.Class,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack19 = virtualinvoke tpe.<java.lang.Class: java.lang.String getName()>(), 129)) => Node(<java.lang.Class: java.lang.String getName()>,l1 = l0.<java.lang.Class: java.lang.String name>,640,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack19 = virtualinvoke tpe.<java.lang.Class: java.lang.String getName()>(), 129)), SOURCE=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,$stack2 = virtualinvoke l0.<java.lang.Class: boolean isInstance(java.lang.Object)>(l1),3370,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack2 = virtualinvoke l0.<java.lang.Class: boolean isInstance(java.lang.Object)>(l1), 3370))
SINK=>BASE: Node(<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>,result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1),126,SourceNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137)) => Node(<java.lang.Class: java.lang.Object cast(java.lang.Object)>,$stack2 = virtualinvoke l0.<java.lang.Class: boolean isInstance(java.lang.Object)>(l1),3370,SinkNode, path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, $stack2 = virtualinvoke l0.<java.lang.Class: boolean isInstance(java.lang.Object)>(l1), 3370))]
Confluence interference in <com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>
Confluence flows from execution of lines 126 and 126 to line 137, defined in result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1) and result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1) and used in $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result)
Caused by line 126 flow: path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)
Caused by line 126 flow: path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, result = interfaceinvoke rset.<java.sql.ResultSet: byte[] getBytes(int)>(1), 126)
Caused by line 137 flow: path: (<com.jcabi.jdbc.ColumnOutcome: java.lang.Object fetch(java.sql.ResultSet)>, $stack22 = virtualinvoke tpe.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(result), 137) => (<java.lang.Class: java.lang.Object cast(java.lang.Object)>, specialinvoke $stack4.<java.lang.ClassCastException: void <init>(java.lang.String)>($stack5), 3369) => (<java.lang.ClassCastException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.RuntimeException: void <init>(java.lang.String)>(l1), 58) => (<java.lang.RuntimeException: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Exception: void <init>(java.lang.String)>(l1), 62) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jcabi-jdbc/40e95d792465ff63e698273a475a8b256cf11a5b/original-without-dependencies/jcabi-jdbc-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,56300
Runtime: 0.018s
Time to perform OA Inter 0,64700
OA Inter Visited methods: 34
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jcabi-jdbc/40e95d792465ff63e698273a475a8b256cf11a5b/original-without-dependencies/jcabi-jdbc-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,45300
Time to perform DFP Inter 0,46000
Depth limit: 5
CONFLICTS: []
Visited methods: 18
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jcabi-jdbc/40e95d792465ff63e698273a475a8b256cf11a5b/original-without-dependencies/jcabi-jdbc-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,41900
Time to perform DFP Inter 0,41000
Depth limit: 5
CONFLICTS: []
Visited methods: 18
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jcabi-jdbc/40e95d792465ff63e698273a475a8b256cf11a5b/original-without-dependencies/jcabi-jdbc-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,38900
Time to perform PDG 0,52300
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jcabi-jdbc/40e95d792465ff63e698273a475a8b256cf11a5b/original-without-dependencies/jcabi-jdbc-1.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,62000
Time to perform PDG 0,45700
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
