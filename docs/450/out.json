[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.datasift.tests.TestLiveApi: void testValidate_Success()>,e1 = $stack12,44,SourceNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, e1 = $stack12, 44)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack15 = virtualinvoke e1.<org.datasift.EInvalidData: java.lang.String getMessage()>(), 45)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>,377,SinkNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack15 = virtualinvoke e1.<org.datasift.EInvalidData: java.lang.String getMessage()>(), 45)) SINK=>BASE: Node(<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String,java.lang.String)>,this.<org.datasift.Definition: org.datasift.User _user> = user,85,SourceNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, specialinvoke $stack3.<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String)>($stack5, $stack4), 40) => (<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String)>, specialinvoke this.<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String,java.lang.String)>(user, csdl, ''), 72) => (<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String,java.lang.String)>, this.<org.datasift.Definition: org.datasift.User _user> = user, 85)) => Node(<org.datasift.Definition: void validate()>,$stack10 = this.<org.datasift.Definition: org.datasift.User _user>,230,SinkNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49) => (<org.datasift.Definition: void validate()>, $stack10 = this.<org.datasift.Definition: org.datasift.User _user>, 230)) => Node(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>,this := @this: org.datasift.User,-1,SimpleNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49) => (<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)) => Node(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>,$stack8 = this.<org.datasift.User: org.datasift.ApiClient _api_client>,660,SinkNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49) => (<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230) => (<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack8 = this.<org.datasift.User: org.datasift.ApiClient _api_client>, 660)) => Node(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>,res = virtualinvoke $stack8.<org.datasift.ApiClient: org.datasift.ApiResponse call(java.lang.String,java.util.HashMap)>(endpoint, params),660,SinkNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49) => (<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230) => (<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, res = virtualinvoke $stack8.<org.datasift.ApiClient: org.datasift.ApiResponse call(java.lang.String,java.util.HashMap)>(endpoint, params), 660)) => Node(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>,$stack81 = virtualinvoke res.<org.datasift.ApiResponse: int getStatusCode()>(),673,SinkNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49) => (<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230) => (<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack81 = virtualinvoke res.<org.datasift.ApiResponse: int getStatusCode()>(), 673)) => Node(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>,$stack82 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack81),673,SinkNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49) => (<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230) => (<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack82 = virtualinvoke $stack80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($stack81), 673)) => Node(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>,$stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" "),673,SinkNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49) => (<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230) => (<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack83 = virtualinvoke $stack82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(' '), 673)) => Node(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>,$stack85 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack84),674,SinkNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49) => (<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230) => (<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack85 = virtualinvoke $stack83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack84), 674)) => Node(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>,$stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.String toString()>(),674,SinkNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49) => (<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230) => (<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack86 = virtualinvoke $stack85.<java.lang.StringBuilder: java.lang.String toString()>(), 674)) => Node(<org.datasift.EAPIError: void <init>(java.lang.String)>,arg0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49) => (<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230) => (<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, res = virtualinvoke $stack8.<org.datasift.ApiClient: org.datasift.ApiResponse call(java.lang.String,java.util.HashMap)>(endpoint, params), 660) => (<org.datasift.ApiClient: org.datasift.ApiResponse call(java.lang.String,java.util.HashMap)>, specialinvoke tmp$2123396274.<org.datasift.EAPIError: void <init>(java.lang.String)>($stack76), 100)) => Node(<java.lang.Exception: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack7 = virtualinvoke def.<org.datasift.Definition: java.lang.String get()>(), 42) => (<org.datasift.Definition: java.lang.String get()>, specialinvoke $stack3.<org.datasift.EInvalidData: void <init>(java.lang.String)>('CSDL not available'), 100) => (<org.datasift.EInvalidData: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(arg0), 27)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l1 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack7 = virtualinvoke def.<org.datasift.Definition: java.lang.String get()>(), 42) => (<org.datasift.Definition: java.lang.String get()>, specialinvoke $stack3.<org.datasift.EInvalidData: void <init>(java.lang.String)>('CSDL not available'), 100) => (<org.datasift.EInvalidData: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(arg0), 27) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = l1,266,SinkNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack7 = virtualinvoke def.<org.datasift.Definition: java.lang.String get()>(), 42) => (<org.datasift.Definition: java.lang.String get()>, specialinvoke $stack3.<org.datasift.EInvalidData: void <init>(java.lang.String)>('CSDL not available'), 100) => (<org.datasift.EInvalidData: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(arg0), 27) => (<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = l1, 266)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>,377,SinkNode, path: (<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack33 = virtualinvoke e1.<org.datasift.EInvalidData: java.lang.String getMessage()>(), 45))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "this.<org.datasift.Definition: org.datasift.User _user> = user",
				"location": {
					"file": "",
					"class": "org.datasift.Definition",
					"method": "<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String,java.lang.String)>",
					"line": 85
				},
				"stackTrace": [{
	"class": "org.datasift.Definition",
	"method": "<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String,java.lang.String)>",
	"line": 85
},{
	"class": "org.datasift.Definition",
	"method": "<org.datasift.Definition: void validate()>",
	"line": 230
},{
	"class": "org.datasift.User",
	"method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
	"line": -1
},{
	"class": "org.datasift.User",
	"method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
	"line": 660
},{
	"class": "org.datasift.User",
	"method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
	"line": 660
},{
	"class": "org.datasift.User",
	"method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
	"line": 673
},{
	"class": "org.datasift.User",
	"method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
	"line": 673
},{
	"class": "org.datasift.User",
	"method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
	"line": 673
},{
	"class": "org.datasift.User",
	"method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
	"line": 674
},{
	"class": "org.datasift.User",
	"method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
	"line": 674
},{
	"class": "org.datasift.EAPIError",
	"method": "<org.datasift.EAPIError: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Exception",
	"method": "<java.lang.Exception: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: void <init>(java.lang.String)>",
	"line": 266
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String getMessage()>",
	"line": 377
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "e1 = $stack12",
				"location": {
					"file": "",
					"class": "org.datasift.tests.TestLiveApi",
					"method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
					"line": 44
				},
				"stackTrace": [{
	"class": "org.datasift.tests.TestLiveApi",
	"method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
	"line": 44
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String getMessage()>",
	"line": -1
},{
	"class": "java.lang.Throwable",
	"method": "<java.lang.Throwable: java.lang.String getMessage()>",
	"line": 377
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>",
				"location": {
					"file": "",
					"class": "java.lang.Throwable",
					"method": "<java.lang.Throwable: java.lang.String getMessage()>",
					"line": 377
				}
			}
		]
	}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "def = $stack3",
"location": {
  "file": "",
  "class": "org.datasift.tests.TestLiveApi",
  "method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
  "line": "40"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, def = $stack3, 40)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.datasift.Definition",
"location": {
  "file": "",
  "class": "org.datasift.Definition",
  "method": "<org.datasift.Definition: void validate()>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.datasift.Definition: org.datasift.User _user>",
"location": {
  "file": "",
  "class": "org.datasift.Definition",
  "method": "<org.datasift.Definition: void validate()>",
  "line": "230"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, $stack10 = this.<org.datasift.Definition: org.datasift.User _user>, 230)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.datasift.User",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack8 = this.<org.datasift.User: org.datasift.ApiClient _api_client>",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "660"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack8 = this.<org.datasift.User: org.datasift.ApiClient _api_client>, 660)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "res = virtualinvoke $stack8.<org.datasift.ApiClient: org.datasift.ApiResponse call(java.lang.String,java.util.HashMap)>(endpoint, params)",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "660"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, res = virtualinvoke $stack8.<org.datasift.ApiClient: org.datasift.ApiResponse call(java.lang.String,java.util.HashMap)>(endpoint, params), 660)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.datasift.ApiResponse",
"location": {
  "file": "",
  "class": "org.datasift.ApiResponse",
  "method": "<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack77 = virtualinvoke res.<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>(), 674)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.datasift.ApiResponse: java.lang.String _reason_phrase>",
"location": {
  "file": "",
  "class": "org.datasift.ApiResponse",
  "method": "<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>",
  "line": "50"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack77 = virtualinvoke res.<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>(), 674)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = virtualinvoke res.<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>()",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "720"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack52 = virtualinvoke res.<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>(), 720)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack52)",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "720"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack52), 720)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "720"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>(), 720)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "arg0 := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.datasift.EAPIError",
  "method": "<org.datasift.EAPIError: void <init>(java.lang.String,int)>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, specialinvoke $stack39.<org.datasift.EAPIError: void <init>(java.lang.String,int)>($stack40, $stack41), 687)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l1 := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "java.lang.Exception",
  "method": "<java.lang.Exception: void <init>(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack7 = virtualinvoke def.<org.datasift.Definition: java.lang.String get()>(), 42)","(<org.datasift.Definition: java.lang.String get()>, specialinvoke $stack3.<org.datasift.EInvalidData: void <init>(java.lang.String)>('CSDL not available'), 100)","(<org.datasift.EInvalidData: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(arg0), 27)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l1 := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "java.lang.Throwable",
  "method": "<java.lang.Throwable: void <init>(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack7 = virtualinvoke def.<org.datasift.Definition: java.lang.String get()>(), 42)","(<org.datasift.Definition: java.lang.String get()>, specialinvoke $stack3.<org.datasift.EInvalidData: void <init>(java.lang.String)>('CSDL not available'), 100)","(<org.datasift.EInvalidData: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(arg0), 27)","(<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l0.<java.lang.Throwable: java.lang.String detailMessage> = l1",
"location": {
  "file": "",
  "class": "java.lang.Throwable",
  "method": "<java.lang.Throwable: void <init>(java.lang.String)>",
  "line": "266"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack7 = virtualinvoke def.<org.datasift.Definition: java.lang.String get()>(), 42)","(<org.datasift.Definition: java.lang.String get()>, specialinvoke $stack3.<org.datasift.EInvalidData: void <init>(java.lang.String)>('CSDL not available'), 100)","(<org.datasift.EInvalidData: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(arg0), 27)","(<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)","(<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = l1, 266)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>",
"location": {
  "file": "",
  "class": "java.lang.Throwable",
  "method": "<java.lang.Throwable: java.lang.String getMessage()>",
  "line": "377"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack27 = virtualinvoke e1.<org.datasift.EInvalidData: java.lang.String getMessage()>(), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = virtualinvoke e1.<org.datasift.EInvalidData: java.lang.String getMessage()>()",
"location": {
  "file": "",
  "class": "org.datasift.tests.TestLiveApi",
  "method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
  "line": "45"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack27 = virtualinvoke e1.<org.datasift.EInvalidData: java.lang.String getMessage()>(), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('EInvalidData: ')",
"location": {
  "file": "",
  "class": "org.datasift.tests.TestLiveApi",
  "method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
  "line": "45"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('EInvalidData: '), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27)",
"location": {
  "file": "",
  "class": "org.datasift.tests.TestLiveApi",
  "method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
  "line": "45"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.datasift.tests.TestLiveApi",
  "method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
  "line": "45"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>(), 45)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<org.datasift.Definition: org.datasift.User _user> = user",
"location": {
  "file": "",
  "class": "org.datasift.Definition",
  "method": "<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String,java.lang.String)>",
  "line": "85"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, specialinvoke $stack3.<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String)>($stack5, $stack4), 40)","(<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String)>, specialinvoke this.<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String,java.lang.String)>(user, csdl, ''), 72)","(<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String,java.lang.String)>, this.<org.datasift.Definition: org.datasift.User _user> = user, 85)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.datasift.Definition: org.datasift.User _user>",
"location": {
  "file": "",
  "class": "org.datasift.Definition",
  "method": "<org.datasift.Definition: void validate()>",
  "line": "230"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, $stack10 = this.<org.datasift.Definition: org.datasift.User _user>, 230)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.datasift.User",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack8 = this.<org.datasift.User: org.datasift.ApiClient _api_client>",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "660"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack8 = this.<org.datasift.User: org.datasift.ApiClient _api_client>, 660)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "res = virtualinvoke $stack8.<org.datasift.ApiClient: org.datasift.ApiResponse call(java.lang.String,java.util.HashMap)>(endpoint, params)",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "660"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, res = virtualinvoke $stack8.<org.datasift.ApiClient: org.datasift.ApiResponse call(java.lang.String,java.util.HashMap)>(endpoint, params), 660)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.datasift.ApiResponse",
"location": {
  "file": "",
  "class": "org.datasift.ApiResponse",
  "method": "<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack77 = virtualinvoke res.<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>(), 674)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.datasift.ApiResponse: java.lang.String _reason_phrase>",
"location": {
  "file": "",
  "class": "org.datasift.ApiResponse",
  "method": "<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>",
  "line": "50"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack77 = virtualinvoke res.<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>(), 674)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = virtualinvoke res.<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>()",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "720"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack52 = virtualinvoke res.<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>(), 720)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack52)",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "720"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack52), 720)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "720"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>(), 720)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "arg0 := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.datasift.EAPIError",
  "method": "<org.datasift.EAPIError: void <init>(java.lang.String,int)>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, specialinvoke $stack39.<org.datasift.EAPIError: void <init>(java.lang.String,int)>($stack40, $stack41), 687)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l1 := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "java.lang.Exception",
  "method": "<java.lang.Exception: void <init>(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack7 = virtualinvoke def.<org.datasift.Definition: java.lang.String get()>(), 42)","(<org.datasift.Definition: java.lang.String get()>, specialinvoke $stack3.<org.datasift.EInvalidData: void <init>(java.lang.String)>('CSDL not available'), 100)","(<org.datasift.EInvalidData: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(arg0), 27)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l1 := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "java.lang.Throwable",
  "method": "<java.lang.Throwable: void <init>(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack7 = virtualinvoke def.<org.datasift.Definition: java.lang.String get()>(), 42)","(<org.datasift.Definition: java.lang.String get()>, specialinvoke $stack3.<org.datasift.EInvalidData: void <init>(java.lang.String)>('CSDL not available'), 100)","(<org.datasift.EInvalidData: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(arg0), 27)","(<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l0.<java.lang.Throwable: java.lang.String detailMessage> = l1",
"location": {
  "file": "",
  "class": "java.lang.Throwable",
  "method": "<java.lang.Throwable: void <init>(java.lang.String)>",
  "line": "266"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack7 = virtualinvoke def.<org.datasift.Definition: java.lang.String get()>(), 42)","(<org.datasift.Definition: java.lang.String get()>, specialinvoke $stack3.<org.datasift.EInvalidData: void <init>(java.lang.String)>('CSDL not available'), 100)","(<org.datasift.EInvalidData: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(arg0), 27)","(<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)","(<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = l1, 266)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>",
"location": {
  "file": "",
  "class": "java.lang.Throwable",
  "method": "<java.lang.Throwable: java.lang.String getMessage()>",
  "line": "377"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack27 = virtualinvoke e1.<org.datasift.EInvalidData: java.lang.String getMessage()>(), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = virtualinvoke e1.<org.datasift.EInvalidData: java.lang.String getMessage()>()",
"location": {
  "file": "",
  "class": "org.datasift.tests.TestLiveApi",
  "method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
  "line": "45"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack27 = virtualinvoke e1.<org.datasift.EInvalidData: java.lang.String getMessage()>(), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('EInvalidData: ')",
"location": {
  "file": "",
  "class": "org.datasift.tests.TestLiveApi",
  "method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
  "line": "45"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('EInvalidData: '), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27)",
"location": {
  "file": "",
  "class": "org.datasift.tests.TestLiveApi",
  "method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
  "line": "45"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.datasift.tests.TestLiveApi",
  "method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
  "line": "45"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>(), 45)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "this.<org.datasift.Definition: org.datasift.User _user> = null",
"location": {
  "file": "",
  "class": "org.datasift.Definition",
  "method": "<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String,java.lang.String)>",
  "line": "31"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, specialinvoke $stack3.<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String)>($stack5, $stack4), 40)","(<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String)>, specialinvoke this.<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String,java.lang.String)>(user, csdl, ''), 72)","(<org.datasift.Definition: void <init>(org.datasift.User,java.lang.String,java.lang.String)>, this.<org.datasift.Definition: org.datasift.User _user> = null, 31)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack10 = this.<org.datasift.Definition: org.datasift.User _user>",
"location": {
  "file": "",
  "class": "org.datasift.Definition",
  "method": "<org.datasift.Definition: void validate()>",
  "line": "230"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, $stack10 = this.<org.datasift.Definition: org.datasift.User _user>, 230)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.datasift.User",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack8 = this.<org.datasift.User: org.datasift.ApiClient _api_client>",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "660"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack8 = this.<org.datasift.User: org.datasift.ApiClient _api_client>, 660)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "res = virtualinvoke $stack8.<org.datasift.ApiClient: org.datasift.ApiResponse call(java.lang.String,java.util.HashMap)>(endpoint, params)",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "660"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, res = virtualinvoke $stack8.<org.datasift.ApiClient: org.datasift.ApiResponse call(java.lang.String,java.util.HashMap)>(endpoint, params), 660)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: org.datasift.ApiResponse",
"location": {
  "file": "",
  "class": "org.datasift.ApiResponse",
  "method": "<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack77 = virtualinvoke res.<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>(), 674)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = this.<org.datasift.ApiResponse: java.lang.String _reason_phrase>",
"location": {
  "file": "",
  "class": "org.datasift.ApiResponse",
  "method": "<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>",
  "line": "50"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack77 = virtualinvoke res.<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>(), 674)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack52 = virtualinvoke res.<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>()",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "720"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack52 = virtualinvoke res.<org.datasift.ApiResponse: java.lang.String getReasonPhrase()>(), 720)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack52)",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "720"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack53 = virtualinvoke $stack51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack52), 720)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.datasift.User",
  "method": "<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>",
  "line": "720"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, $stack54 = virtualinvoke $stack53.<java.lang.StringBuilder: java.lang.String toString()>(), 720)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "arg0 := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.datasift.EAPIError",
  "method": "<org.datasift.EAPIError: void <init>(java.lang.String,int)>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, virtualinvoke def.<org.datasift.Definition: void validate()>(), 49)","(<org.datasift.Definition: void validate()>, res = virtualinvoke $stack10.<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>('validate', params), 230)","(<org.datasift.User: org.json.JSONObject callAPI(java.lang.String,java.util.HashMap)>, specialinvoke $stack39.<org.datasift.EAPIError: void <init>(java.lang.String,int)>($stack40, $stack41), 687)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l1 := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "java.lang.Exception",
  "method": "<java.lang.Exception: void <init>(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack7 = virtualinvoke def.<org.datasift.Definition: java.lang.String get()>(), 42)","(<org.datasift.Definition: java.lang.String get()>, specialinvoke $stack3.<org.datasift.EInvalidData: void <init>(java.lang.String)>('CSDL not available'), 100)","(<org.datasift.EInvalidData: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(arg0), 27)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l1 := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "java.lang.Throwable",
  "method": "<java.lang.Throwable: void <init>(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack7 = virtualinvoke def.<org.datasift.Definition: java.lang.String get()>(), 42)","(<org.datasift.Definition: java.lang.String get()>, specialinvoke $stack3.<org.datasift.EInvalidData: void <init>(java.lang.String)>('CSDL not available'), 100)","(<org.datasift.EInvalidData: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(arg0), 27)","(<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l0.<java.lang.Throwable: java.lang.String detailMessage> = l1",
"location": {
  "file": "",
  "class": "java.lang.Throwable",
  "method": "<java.lang.Throwable: void <init>(java.lang.String)>",
  "line": "266"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack7 = virtualinvoke def.<org.datasift.Definition: java.lang.String get()>(), 42)","(<org.datasift.Definition: java.lang.String get()>, specialinvoke $stack3.<org.datasift.EInvalidData: void <init>(java.lang.String)>('CSDL not available'), 100)","(<org.datasift.EInvalidData: void <init>(java.lang.String)>, specialinvoke this.<java.lang.Exception: void <init>(java.lang.String)>(arg0), 27)","(<java.lang.Exception: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 66)","(<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = l1, 266)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>",
"location": {
  "file": "",
  "class": "java.lang.Throwable",
  "method": "<java.lang.Throwable: java.lang.String getMessage()>",
  "line": "377"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack27 = virtualinvoke e1.<org.datasift.EInvalidData: java.lang.String getMessage()>(), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack27 = virtualinvoke e1.<org.datasift.EInvalidData: java.lang.String getMessage()>()",
"location": {
  "file": "",
  "class": "org.datasift.tests.TestLiveApi",
  "method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
  "line": "45"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack27 = virtualinvoke e1.<org.datasift.EInvalidData: java.lang.String getMessage()>(), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('EInvalidData: ')",
"location": {
  "file": "",
  "class": "org.datasift.tests.TestLiveApi",
  "method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
  "line": "45"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack26 = virtualinvoke $stack25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('EInvalidData: '), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27)",
"location": {
  "file": "",
  "class": "org.datasift.tests.TestLiveApi",
  "method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
  "line": "45"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack28 = virtualinvoke $stack26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack27), 45)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.datasift.tests.TestLiveApi",
  "method": "<org.datasift.tests.TestLiveApi: void testValidate_Success()>",
  "line": "45"
},
"stackTrace": ["(<org.datasift.tests.TestLiveApi: void testValidate_Success()>, $stack29 = virtualinvoke $stack28.<java.lang.StringBuilder: java.lang.String toString()>(), 45)"]
}]
}
}

]
