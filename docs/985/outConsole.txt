Running soot scenario firefly;com.firefly.net.tcp.secure.AbstractSecureSession;read(ByteBuffer);7c207900f6cb1bb9eca2ab0d127b42442231b0fd
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/firefly/7c207900f6cb1bb9eca2ab0d127b42442231b0fd/original-without-dependencies/firefly-nettool.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,80500
Time to perform Confluence 1 Inter 1,11500
Configure Soot Confluence 2 Inter 0,24000
Time to perform Confluence 2 Inter 0,43700
Visited methods: 50
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>,$stack15 = this.<com.firefly.net.tcp.secure.AbstractSecureSession: com.firefly.net.Session session>,377,SourceNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void doHandshakeReceive(java.nio.ByteBuffer)>(receiveBuffer), 91) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void doHandshakeReceive(java.nio.ByteBuffer)>, result = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>(), 112) => (<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>, $stack15 = this.<com.firefly.net.tcp.secure.AbstractSecureSession: com.firefly.net.Session session>, 377)) => Node(<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>,$stack19 = interfaceinvoke $stack15.<com.firefly.net.Session: int getSessionId()>(),377,SourceNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void doHandshakeReceive(java.nio.ByteBuffer)>(receiveBuffer), 91) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void doHandshakeReceive(java.nio.ByteBuffer)>, result = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>(), 112) => (<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>, $stack19 = interfaceinvoke $stack15.<com.firefly.net.Session: int getSessionId()>(), 377)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832))
SINK=>BASE: Node(<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>,$stack66 = this.<com.firefly.net.tcp.secure.AbstractSecureSession: com.firefly.net.Session session>,401,SourceNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack66 = this.<com.firefly.net.tcp.secure.AbstractSecureSession: com.firefly.net.Session session>, 401)) => Node(<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>,$stack70 = interfaceinvoke $stack66.<com.firefly.net.Session: int getSessionId()>(),401,SourceNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack70 = interfaceinvoke $stack66.<com.firefly.net.Session: int getSessionId()>(), 401)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)), SOURCE=>BASE: Node(<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer splitBuffer(int)>,splitBuf = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer newBuffer(int)>(netSize),357,SourceNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void doHandshakeReceive(java.nio.ByteBuffer)>(receiveBuffer), 91) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void doHandshakeReceive(java.nio.ByteBuffer)>, result = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>(), 112) => (<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>, buf = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer splitBuffer(int)>(packetBufferSize), 374)) => Node(<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>,buf = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer splitBuffer(int)>(packetBufferSize),374,SourceNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void doHandshakeReceive(java.nio.ByteBuffer)>(receiveBuffer), 91) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void doHandshakeReceive(java.nio.ByteBuffer)>, result = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>(), 112) => (<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>, buf = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer splitBuffer(int)>(packetBufferSize), 374)) => Node(<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>,$stack22 = virtualinvoke buf.<java.nio.ByteBuffer: int remaining()>(),377,SourceNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void doHandshakeReceive(java.nio.ByteBuffer)>(receiveBuffer), 91) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void doHandshakeReceive(java.nio.ByteBuffer)>, result = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>(), 112) => (<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>, $stack22 = virtualinvoke buf.<java.nio.ByteBuffer: int remaining()>(), 377)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831))
SINK=>BASE: Node(<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>,$stack66 = this.<com.firefly.net.tcp.secure.AbstractSecureSession: com.firefly.net.Session session>,401,SourceNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack66 = this.<com.firefly.net.tcp.secure.AbstractSecureSession: com.firefly.net.Session session>, 401)) => Node(<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>,$stack70 = interfaceinvoke $stack66.<com.firefly.net.Session: int getSessionId()>(),401,SourceNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack70 = interfaceinvoke $stack66.<com.firefly.net.Session: int getSessionId()>(), 401)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)), SOURCE=>BASE: Node(<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>,$stack62 = virtualinvoke $stack60.<java.nio.ByteBuffer: int remaining()>(),417,SourceNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack62 = virtualinvoke $stack60.<java.nio.ByteBuffer: int remaining()>(), 417)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850))
SINK=>BASE: Node(<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>,$stack66 = this.<com.firefly.net.tcp.secure.AbstractSecureSession: com.firefly.net.Session session>,401,SourceNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack66 = this.<com.firefly.net.tcp.secure.AbstractSecureSession: com.firefly.net.Session session>, 401)) => Node(<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>,$stack70 = interfaceinvoke $stack66.<com.firefly.net.Session: int getSessionId()>(),401,SourceNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack70 = interfaceinvoke $stack66.<com.firefly.net.Session: int getSessionId()>(), 401)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850))]
Confluence interference in <com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>
Confluence flows from execution of lines 394 and 401 to line 394, defined in $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer) and $stack66 = this.<com.firefly.net.tcp.secure.AbstractSecureSession: com.firefly.net.Session session> and used in $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer)
Caused by line 394 flow: path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void doHandshakeReceive(java.nio.ByteBuffer)>(receiveBuffer), 91) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void doHandshakeReceive(java.nio.ByteBuffer)>, result = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>(), 112) => (<com.firefly.net.tcp.secure.AbstractSecureSession: javax.net.ssl.SSLEngineResult unwrap()>, $stack15 = this.<com.firefly.net.tcp.secure.AbstractSecureSession: com.firefly.net.Session session>, 377)
Caused by line 401 flow: path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack66 = this.<com.firefly.net.tcp.secure.AbstractSecureSession: com.firefly.net.Session session>, 401)
Caused by line 394 flow: path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)
Confluence interference in <com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>
Confluence flows from execution of lines 417 and 401 to line 394, defined in $stack62 = virtualinvoke $stack60.<java.nio.ByteBuffer: int remaining()>() and $stack66 = this.<com.firefly.net.tcp.secure.AbstractSecureSession: com.firefly.net.Session session> and used in $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer)
Caused by line 417 flow: path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack62 = virtualinvoke $stack60.<java.nio.ByteBuffer: int remaining()>(), 417)
Caused by line 401 flow: path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack66 = this.<com.firefly.net.tcp.secure.AbstractSecureSession: com.firefly.net.Session session>, 401)
Caused by line 394 flow: path: (<com.firefly.net.tcp.secure.AbstractSecureSession: java.nio.ByteBuffer read(java.nio.ByteBuffer)>, $stack4 = virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>(receiveBuffer), 394) => (<com.firefly.net.tcp.secure.AbstractSecureSession: boolean doHandshake(java.nio.ByteBuffer)>, virtualinvoke this.<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>(), 86) => (<com.firefly.net.tcp.secure.AbstractSecureSession: void handshakeFinish()>, $stack5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack4), 171) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)
 Analysis results
----------------------------
 Number of conflicts: 3
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/firefly/7c207900f6cb1bb9eca2ab0d127b42442231b0fd/original-without-dependencies/firefly-nettool.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,99800
Runtime: 0.037s
OA interference in class AbstractSecureSession, method java.nio.ByteBuffer read(java.nio.ByteBuffer), execution of line 402 overrides 402, assigning to variable <java.lang.Boolean: java.lang.Boolean TRUE>, 
Caused by line 402 flow:
at com.firefly.net.tcp.secure.AbstractSecureSession.read(AbstractSecureSession.java:402)
at java.lang.Boolean.<clinit>(Boolean.java:50)
And line 402 flow:
at com.firefly.net.tcp.secure.AbstractSecureSession.read(AbstractSecureSession.java:402)
at java.lang.Boolean.<clinit>(Boolean.java:50)
 
OA interference in class AbstractSecureSession, method java.nio.ByteBuffer read(java.nio.ByteBuffer), execution of line 401 overrides 401, assigning to variable <java.lang.Integer: int[] sizeTable>, 
Caused by line 401 flow:
at com.firefly.net.tcp.secure.AbstractSecureSession.read(AbstractSecureSession.java:401)
at java.lang.Integer.<clinit>(Integer.java:467)
And line 401 flow:
at com.firefly.net.tcp.secure.AbstractSecureSession.read(AbstractSecureSession.java:401)
at java.lang.Integer.<clinit>(Integer.java:467)
 
Time to perform OA Inter 1,14300
OA Inter Visited methods: 30
 Analysis results
----------------------------
 Number of conflicts: 277
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/firefly/7c207900f6cb1bb9eca2ab0d127b42442231b0fd/original-without-dependencies/firefly-nettool.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,78300
Time to perform DFP Inter 0,68800
Depth limit: 5
CONFLICTS: []
Visited methods: 25
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/firefly/7c207900f6cb1bb9eca2ab0d127b42442231b0fd/original-without-dependencies/firefly-nettool.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,56200
Time to perform DFP Inter 0,83700
Depth limit: 5
CONFLICTS: []
Visited methods: 25
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/firefly/7c207900f6cb1bb9eca2ab0d127b42442231b0fd/original-without-dependencies/firefly-nettool.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,70400
Time to perform PDG 0,58900
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/firefly/7c207900f6cb1bb9eca2ab0d127b42442231b0fd/original-without-dependencies/firefly-nettool.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,59200
Time to perform PDG 0,59400
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
