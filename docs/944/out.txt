source(cz.startnet.utils.pgdiff.Resources, <clinit>, 19, <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE> = $stack0, [at cz.startnet.utils.pgdiff.loader.PgDumpLoader.loadDatabaseSchema(PgDumpLoader.java:152), at cz.startnet.utils.pgdiff.Resources.<clinit>(Resources.java:19)]) => sink(cz.startnet.utils.pgdiff.Resources, <clinit>, 19, <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE> = $stack0, [at cz.startnet.utils.pgdiff.loader.PgDumpLoader.loadDatabaseSchema(PgDumpLoader.java:202), at cz.startnet.utils.pgdiff.parsers.CommentParser.parse(CommentParser.java:41), at cz.startnet.utils.pgdiff.parsers.Parser.expect(Parser.java:46), at cz.startnet.utils.pgdiff.parsers.Parser.expect(Parser.java:81), at cz.startnet.utils.pgdiff.Resources.<clinit>(Resources.java:19)])

List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>,$stack10 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedExpression"),303,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>(parser, table), 58) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>, $stack6 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>(), 125) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>, $stack10 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedExpression'), 303)))

List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>,$stack15 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedString"),279,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, $stack31 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>(), 85) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>, $stack15 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedString'), 279)))

List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>,$stack62 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedDataType"),440,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack68), 199) => (<cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, dataType = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>(), 63) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>, $stack62 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedDataType'), 440)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>,$stack75 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack62, $stack63),439,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack68), 199) => (<cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, dataType = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>(), 63) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>, $stack75 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack62, $stack63), 439)))

List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: void throwUnsupportedCommand()>,$stack2 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringUnsupportedCommand"),375,SimpleNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void throwUnsupportedCommand()>(), 87) => (<cz.startnet.utils.pgdiff.parsers.Parser: void throwUnsupportedCommand()>, $stack2 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringUnsupportedCommand'), 375)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: void throwUnsupportedCommand()>,$stack15 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack2, $stack3),374,SimpleNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void throwUnsupportedCommand()>(), 87) => (<cz.startnet.utils.pgdiff.parsers.Parser: void throwUnsupportedCommand()>, $stack15 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack2, $stack3), 374)) => Node(<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>,msg := @parameter0: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack80), 168) => (<cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>($stack6), 33) => (<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>, virtualinvoke this.<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>(word, 0), 46) => (<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>, specialinvoke $stack8.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack22), 80)) => Node(<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(msg),34,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack80), 168) => (<cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>($stack6), 33) => (<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>, virtualinvoke this.<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>(word, 0), 46) => (<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>, specialinvoke $stack8.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack22), 80) => (<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(msg), 34)))

List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>,$stack9 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedWord"),81,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack80), 168) => (<cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>($stack6), 33) => (<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>, virtualinvoke this.<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>(word, 0), 46) => (<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>, $stack9 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedWord'), 81)))

List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>,$stack62 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedDataType"),440,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack68), 199) => (<cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, dataType = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>(), 63) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>, $stack62 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedDataType'), 440)))

List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,return $stack2,35,SinkNode, path: ))

List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>,$stack10 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedExpression"),303,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>(parser, table), 58) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>, $stack6 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>(), 125) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>, $stack10 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedExpression'), 303)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>,$stack23 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack10, $stack11),302,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>(parser, table), 58) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>, $stack6 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>(), 125) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>, $stack23 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack10, $stack11), 302)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>,specialinvoke $stack9.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack23),302,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>(parser, table), 58) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>, $stack6 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>(), 125) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>, specialinvoke $stack9.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack23), 302)))

List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>,$stack15 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedString"),279,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, $stack31 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>(), 85) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>, $stack15 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedString'), 279)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>,$stack22 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack15, $stack16),278,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, $stack31 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>(), 85) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>, $stack22 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack15, $stack16), 278)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>,specialinvoke $stack14.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack22),278,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, $stack31 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>(), 85) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>, specialinvoke $stack14.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack22), 278)))

List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>,$stack9 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedWord"),81,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack80), 168) => (<cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>($stack6), 33) => (<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>, virtualinvoke this.<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>(word, 0), 46) => (<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>, $stack9 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedWord'), 81)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>,$stack22 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack9, $stack10),80,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack80), 168) => (<cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>($stack6), 33) => (<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>, virtualinvoke this.<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>(word, 0), 46) => (<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>, $stack22 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack9, $stack10), 80)))

List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>,$stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("UnsupportedEncoding"),152,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>,$stack87 = new java.lang.StringBuilder,151,SimpleNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, specialinvoke $stack87.<java.lang.StringBuilder: void <init>()>(), 151)) => Node(<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>,$stack89 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack88),152,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack89 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack88), 152)) => Node(<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>,$stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": "),152,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(': '), 152)))

List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>,$stack84 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotReadFile"),219,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack84 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotReadFile'), 219)))

List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>,$stack84 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotReadFile"),219,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack84 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotReadFile'), 219)) => Node(<cz.startnet.utils.pgdiff.loader.FileException: void <init>(java.lang.String,java.lang.Throwable)>,msg := @parameter0: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack80 = staticinvoke <cz.startnet.utils.pgdiff.loader.PgDumpLoader: java.lang.String getWholeStatement(java.io.BufferedReader,java.lang.String)>(reader, ex#4), 169) => (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: java.lang.String getWholeStatement(java.io.BufferedReader,java.lang.String)>, specialinvoke $stack19.<cz.startnet.utils.pgdiff.loader.FileException: void <init>(java.lang.String,java.lang.Throwable)>($stack20, ex), 264)) => Node(<cz.startnet.utils.pgdiff.loader.FileException: void <init>(java.lang.String,java.lang.Throwable)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(msg, cause),45,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack80 = staticinvoke <cz.startnet.utils.pgdiff.loader.PgDumpLoader: java.lang.String getWholeStatement(java.io.BufferedReader,java.lang.String)>(reader, ex#4), 169) => (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: java.lang.String getWholeStatement(java.io.BufferedReader,java.lang.String)>, specialinvoke $stack19.<cz.startnet.utils.pgdiff.loader.FileException: void <init>(java.lang.String,java.lang.Throwable)>($stack20, ex), 264) => (<cz.startnet.utils.pgdiff.loader.FileException: void <init>(java.lang.String,java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(msg, cause), 45)))

List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,return $stack2,35,SinkNode, path: ))

