Running soot scenario apgdiff;cz.startnet.utils.pgdiff.loader.PgDumpLoader;loadDatabaseSchema(InputStream, String, boolean);969537124e1b37732eb6bf02926238ec18dc7c3e
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/apgdiff/969537124e1b37732eb6bf02926238ec18dc7c3e/original-without-dependencies/apgdiff-2.3-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,73300
Time to perform Confluence 1 Inter 102,59600
Configure Soot Confluence 2 Inter 0,16100
Execution exceeded the timeout of 240 secondsRunning ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/apgdiff/969537124e1b37732eb6bf02926238ec18dc7c3e/original-without-dependencies/apgdiff-2.3-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,67500
Runtime: 2.204s
OA interference in class PgDumpLoader, method cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean), execution of line 152 overrides 202, assigning to variable <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>, 
Caused by line 152 flow:
at cz.startnet.utils.pgdiff.loader.PgDumpLoader.loadDatabaseSchema(PgDumpLoader.java:152)
at cz.startnet.utils.pgdiff.Resources.<clinit>(Resources.java:19)
And line 202 flow:
at cz.startnet.utils.pgdiff.loader.PgDumpLoader.loadDatabaseSchema(PgDumpLoader.java:202)
at cz.startnet.utils.pgdiff.parsers.CommentParser.parse(CommentParser.java:41)
at cz.startnet.utils.pgdiff.parsers.Parser.expect(Parser.java:46)
at cz.startnet.utils.pgdiff.parsers.Parser.expect(Parser.java:81)
at cz.startnet.utils.pgdiff.Resources.<clinit>(Resources.java:19)
 
Time to perform OA Inter 3,19600
OA Inter Visited methods: 6094
 Analysis results
----------------------------
 Number of conflicts: 1
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/apgdiff/969537124e1b37732eb6bf02926238ec18dc7c3e/original-without-dependencies/apgdiff-2.3-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,70900
Time to perform DFP Inter 119,24200
Depth limit: 5
CONFLICTS: DF interference in <cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>
Data flows from execution of line 152 to 168, defined in $stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE> and propagated in $stack9 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedWord")
Caused by line 152 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)
Caused by line 168 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack80), 168) => (<cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>($stack6), 33) => (<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>, virtualinvoke this.<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>(word, 0), 46) => (<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>, $stack9 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedWord'), 81)
DF interference in <cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>
Data flows from execution of line 152 to 176, defined in $stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE> and propagated in specialinvoke $stack14.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack22)
Caused by line 152 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)
Caused by line 176 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, $stack31 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>(), 85) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>, specialinvoke $stack14.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack22), 278)
DF interference in <cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>
Data flows from execution of line 152 to 176, defined in $stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE> and propagated in $stack10 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedExpression")
Caused by line 152 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)
Caused by line 176 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>(parser, table), 58) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>, $stack6 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>(), 125) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>, $stack10 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedExpression'), 303)
DF interference in <cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>
Data flows from execution of line 152 to 176, defined in $stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE> and propagated in $stack15 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedString")
Caused by line 152 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)
Caused by line 176 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, $stack31 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>(), 85) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>, $stack15 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedString'), 279)
DF interference in <cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>
Data flows from execution of line 152 to 199, defined in $stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE> and propagated in $stack62 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedDataType")
Caused by line 152 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)
Caused by line 199 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack68), 199) => (<cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, dataType = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>(), 63) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>, $stack62 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedDataType'), 440)
DF interference in <cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>
Data flows from execution of line 152 to 176, defined in $stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE> and propagated in specialinvoke $stack9.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack23)
Caused by line 152 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)
Caused by line 176 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>(parser, table), 58) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>, $stack6 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>(), 125) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>, specialinvoke $stack9.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack23), 302)
DF interference in <cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>
Data flows from execution of line 152 to 168, defined in $stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE> and propagated in specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(msg)
Caused by line 152 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)
Caused by line 168 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack80), 168) => (<cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>($stack6), 33) => (<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>, virtualinvoke this.<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>(word, 0), 46) => (<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>, specialinvoke $stack8.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack22), 80) => (<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(msg), 34)
DF interference in <cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>
Data flows from execution of line 152 to 199, defined in $stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE> and propagated in $stack75 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack62, $stack63)
Caused by line 152 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)
Caused by line 199 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack68), 199) => (<cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, dataType = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>(), 63) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>, $stack75 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack62, $stack63), 439)
DF interference in <cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>
Data flows from execution of line 152 to 168, defined in $stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE> and propagated in $stack22 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack9, $stack10)
Caused by line 152 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)
Caused by line 168 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack80), 168) => (<cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>($stack6), 33) => (<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>, virtualinvoke this.<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>(word, 0), 46) => (<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>, $stack22 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack9, $stack10), 80)
[List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>,$stack10 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedExpression"),303,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>(parser, table), 58) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>, $stack6 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>(), 125) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>, $stack10 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedExpression'), 303))), List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>,$stack15 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedString"),279,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, $stack31 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>(), 85) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>, $stack15 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedString'), 279))), List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>,$stack62 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedDataType"),440,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack68), 199) => (<cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, dataType = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>(), 63) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>, $stack62 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedDataType'), 440)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>,$stack75 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack62, $stack63),439,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack68), 199) => (<cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, dataType = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>(), 63) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>, $stack75 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack62, $stack63), 439))), List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: void throwUnsupportedCommand()>,$stack2 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringUnsupportedCommand"),375,SimpleNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void throwUnsupportedCommand()>(), 87) => (<cz.startnet.utils.pgdiff.parsers.Parser: void throwUnsupportedCommand()>, $stack2 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringUnsupportedCommand'), 375)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: void throwUnsupportedCommand()>,$stack15 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack2, $stack3),374,SimpleNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void throwUnsupportedCommand()>(), 87) => (<cz.startnet.utils.pgdiff.parsers.Parser: void throwUnsupportedCommand()>, $stack15 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack2, $stack3), 374)) => Node(<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>,msg := @parameter0: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack80), 168) => (<cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>($stack6), 33) => (<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>, virtualinvoke this.<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>(word, 0), 46) => (<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>, specialinvoke $stack8.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack22), 80)) => Node(<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(msg),34,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack80), 168) => (<cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>($stack6), 33) => (<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>, virtualinvoke this.<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>(word, 0), 46) => (<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>, specialinvoke $stack8.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack22), 80) => (<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String)>(msg), 34))), List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>,$stack9 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedWord"),81,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack80), 168) => (<cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>($stack6), 33) => (<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>, virtualinvoke this.<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>(word, 0), 46) => (<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>, $stack9 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedWord'), 81))), List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>,$stack62 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedDataType"),440,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack68), 199) => (<cz.startnet.utils.pgdiff.parsers.CreateFunctionParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, dataType = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>(), 63) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseDataType()>, $stack62 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedDataType'), 440))), List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,return $stack2,35,SinkNode, path: )), List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>,$stack10 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedExpression"),303,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>(parser, table), 58) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>, $stack6 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>(), 125) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>, $stack10 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedExpression'), 303)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>,$stack23 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack10, $stack11),302,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>(parser, table), 58) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>, $stack6 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>(), 125) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>, $stack23 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack10, $stack11), 302)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>,specialinvoke $stack9.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack23),302,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>(parser, table), 58) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parseConstraint(cz.startnet.utils.pgdiff.parsers.Parser,cz.startnet.utils.pgdiff.schema.PgTable)>, $stack6 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>(), 125) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String getExpression()>, specialinvoke $stack9.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack23), 302))), List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>,$stack15 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedString"),279,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, $stack31 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>(), 85) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>, $stack15 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedString'), 279)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>,$stack22 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack15, $stack16),278,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, $stack31 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>(), 85) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>, $stack22 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack15, $stack16), 278)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>,specialinvoke $stack14.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack22),278,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack75), 176) => (<cz.startnet.utils.pgdiff.parsers.CreateTableParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, $stack31 = virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>(), 85) => (<cz.startnet.utils.pgdiff.parsers.Parser: java.lang.String parseString()>, specialinvoke $stack14.<cz.startnet.utils.pgdiff.parsers.ParserException: void <init>(java.lang.String)>($stack22), 278))), List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>,$stack9 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotParseStringExpectedWord"),81,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack80), 168) => (<cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>($stack6), 33) => (<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>, virtualinvoke this.<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>(word, 0), 46) => (<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>, $stack9 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotParseStringExpectedWord'), 81)) => Node(<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>,$stack22 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack9, $stack10),80,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, staticinvoke <cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>(database, $stack80), 168) => (<cz.startnet.utils.pgdiff.parsers.CreateSchemaParser: void parse(cz.startnet.utils.pgdiff.schema.PgDatabase,java.lang.String)>, virtualinvoke parser.<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>($stack6), 33) => (<cz.startnet.utils.pgdiff.parsers.Parser: void expect(java.lang.String[])>, virtualinvoke this.<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>(word, 0), 46) => (<cz.startnet.utils.pgdiff.parsers.Parser: boolean expect(java.lang.String,boolean)>, $stack22 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($stack9, $stack10), 80)))]
Visited methods: 202
 Analysis results
----------------------------
 Number of conflicts: 10
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/apgdiff/969537124e1b37732eb6bf02926238ec18dc7c3e/original-without-dependencies/apgdiff-2.3-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,50100
Time to perform DFP Inter 96,04300
Depth limit: 5
CONFLICTS: DF interference in <cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>
Data flows from execution of line 152 to 219, defined in $stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE> and propagated in $stack84 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotReadFile")
Caused by line 152 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)
Caused by line 219 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack84 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotReadFile'), 219)
DF interference in <cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>
Data flows from execution of line 152 to 152, defined in $stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE> and propagated in $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ")
Caused by line 152 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)
Caused by line 152 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(': '), 152)
DF interference in <cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>
Data flows from execution of line 152 to 169, defined in $stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE> and propagated in specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(msg, cause)
Caused by line 152 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)
Caused by line 169 flow: path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack80 = staticinvoke <cz.startnet.utils.pgdiff.loader.PgDumpLoader: java.lang.String getWholeStatement(java.io.BufferedReader,java.lang.String)>(reader, ex#4), 169) => (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: java.lang.String getWholeStatement(java.io.BufferedReader,java.lang.String)>, specialinvoke $stack19.<cz.startnet.utils.pgdiff.loader.FileException: void <init>(java.lang.String,java.lang.Throwable)>($stack20, ex), 264) => (<cz.startnet.utils.pgdiff.loader.FileException: void <init>(java.lang.String,java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(msg, cause), 45)
[List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>,$stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("UnsupportedEncoding"),152,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>,$stack87 = new java.lang.StringBuilder,151,SimpleNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, specialinvoke $stack87.<java.lang.StringBuilder: void <init>()>(), 151)) => Node(<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>,$stack89 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack88),152,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack89 = virtualinvoke $stack87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack88), 152)) => Node(<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>,$stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": "),152,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack90 = virtualinvoke $stack89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(': '), 152))), List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>,$stack84 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotReadFile"),219,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack84 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotReadFile'), 219))), List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>,$stack84 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>("CannotReadFile"),219,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack84 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('CannotReadFile'), 219)) => Node(<cz.startnet.utils.pgdiff.loader.FileException: void <init>(java.lang.String,java.lang.Throwable)>,msg := @parameter0: java.lang.String,-1,SimpleNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack80 = staticinvoke <cz.startnet.utils.pgdiff.loader.PgDumpLoader: java.lang.String getWholeStatement(java.io.BufferedReader,java.lang.String)>(reader, ex#4), 169) => (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: java.lang.String getWholeStatement(java.io.BufferedReader,java.lang.String)>, specialinvoke $stack19.<cz.startnet.utils.pgdiff.loader.FileException: void <init>(java.lang.String,java.lang.Throwable)>($stack20, ex), 264)) => Node(<cz.startnet.utils.pgdiff.loader.FileException: void <init>(java.lang.String,java.lang.Throwable)>,specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(msg, cause),45,SinkNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack80 = staticinvoke <cz.startnet.utils.pgdiff.loader.PgDumpLoader: java.lang.String getWholeStatement(java.io.BufferedReader,java.lang.String)>(reader, ex#4), 169) => (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: java.lang.String getWholeStatement(java.io.BufferedReader,java.lang.String)>, specialinvoke $stack19.<cz.startnet.utils.pgdiff.loader.FileException: void <init>(java.lang.String,java.lang.Throwable)>($stack20, ex), 264) => (<cz.startnet.utils.pgdiff.loader.FileException: void <init>(java.lang.String,java.lang.Throwable)>, specialinvoke this.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(msg, cause), 45))), List(Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack1 = <cz.startnet.utils.pgdiff.Resources: java.util.ResourceBundle RESOURCE_BUNDLE>,35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152) => (<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>, $stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key), 35)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,$stack2 = virtualinvoke $stack1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(key),35,SourceNode, path: (<cz.startnet.utils.pgdiff.loader.PgDumpLoader: cz.startnet.utils.pgdiff.schema.PgDatabase loadDatabaseSchema(java.io.InputStream,java.lang.String,boolean)>, $stack88 = staticinvoke <cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>('UnsupportedEncoding'), 152)) => Node(<cz.startnet.utils.pgdiff.Resources: java.lang.String getString(java.lang.String)>,return $stack2,35,SinkNode, path: ))]
Visited methods: 203
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/apgdiff/969537124e1b37732eb6bf02926238ec18dc7c3e/original-without-dependencies/apgdiff-2.3-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,53300
Time to perform PDG 0,89000
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/apgdiff/969537124e1b37732eb6bf02926238ec18dc7c3e/original-without-dependencies/apgdiff-2.3-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,39400
Time to perform PDG 0,87700
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
