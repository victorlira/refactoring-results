source(org.graylog2.GelfMessage, toDatagrams, 89, $stack14 = datagrams[0], [at org.graylog2.GelfMessage.toDatagrams(GelfMessage.java:89)]) => sink(org.graylog2.GelfMessage, toDatagrams, 89, $stack14 = datagrams[0], [at org.graylog2.GelfMessage.toDatagrams(GelfMessage.java:89)])

source(org.graylog2.GelfMessage, toDatagrams, 83, $stack5 = lengthof messageBytes, [at org.graylog2.GelfMessage.toDatagrams(GelfMessage.java:83)]) => sink(org.graylog2.GelfMessage, toDatagrams, 83, $stack5 = lengthof messageBytes, [at org.graylog2.GelfMessage.toDatagrams(GelfMessage.java:83)])

source(org.graylog2.GelfMessage, toDatagrams, 83, $stack6 = $stack5 / 1420, [at org.graylog2.GelfMessage.toDatagrams(GelfMessage.java:83)]) => sink(org.graylog2.GelfMessage, toDatagrams, 83, $stack6 = $stack5 / 1420, [at org.graylog2.GelfMessage.toDatagrams(GelfMessage.java:83)])

source(org.graylog2.GelfMessage, toDatagrams, 83, $stack7 = $stack6 + 1, [at org.graylog2.GelfMessage.toDatagrams(GelfMessage.java:83)]) => sink(org.graylog2.GelfMessage, toDatagrams, 83, $stack7 = $stack6 + 1, [at org.graylog2.GelfMessage.toDatagrams(GelfMessage.java:83)])

source(org.graylog2.GelfMessage, toDatagrams, 83, datagrams = newarray (java.nio.ByteBuffer)[$stack7], [at org.graylog2.GelfMessage.toDatagrams(GelfMessage.java:83)]) => sink(org.graylog2.GelfMessage, toDatagrams, 83, datagrams = newarray (java.nio.ByteBuffer)[$stack7], [at org.graylog2.GelfMessage.toDatagrams(GelfMessage.java:83)])

List(Node(<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>,$stack7 = $stack6 + 1,83,SourceNode, path: (<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>, $stack7 = $stack6 + 1, 83)) => Node(<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>,datagrams = newarray (java.nio.ByteBuffer)[$stack7],83,SourceNode, path: (<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>, datagrams = newarray (java.nio.ByteBuffer)[$stack7], 83)) => Node(<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>,$stack12 = datagrams[0],88,SinkNode, path: (<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>, $stack12 = datagrams[0], 88)) => Node(<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>,virtualinvoke $stack12.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(messageBytes),88,SinkNode, path: (<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>, virtualinvoke $stack12.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(messageBytes), 88)))

List(Node(<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>,$stack5 = lengthof messageBytes,83,SourceNode, path: (<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>, $stack5 = lengthof messageBytes, 83)) => Node(<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>,$stack6 = $stack5 / 1420,83,SourceNode, path: (<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>, $stack6 = $stack5 / 1420, 83)) => Node(<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>,$stack7 = $stack6 + 1,83,SourceNode, path: (<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>, $stack7 = $stack6 + 1, 83)) => Node(<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>,datagrams = newarray (java.nio.ByteBuffer)[$stack7],83,SourceNode, path: (<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>, datagrams = newarray (java.nio.ByteBuffer)[$stack7], 83)) => Node(<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>,$stack12 = datagrams[0],88,SinkNode, path: (<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>, $stack12 = datagrams[0], 88)) => Node(<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>,virtualinvoke $stack12.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(messageBytes),88,SinkNode, path: (<org.graylog2.GelfMessage: java.nio.ByteBuffer[] toDatagrams()>, virtualinvoke $stack12.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(messageBytes), 88)))

