Running soot scenario coverity-plugin;jenkins.plugins.coverity.analysis.FresnoToolHandler;perform(AbstractBuild<?,?>, Launcher, BuildListener, CoverityPublisher);09ae8cd6353743a1ebbd9bbfb903b60d7c7bbf55
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/09ae8cd6353743a1ebbd9bbfb903b60d7c7bbf55/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 1,22800
An error occurred in getInvokeExpr with args: specialinvoke $stack5.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
Time to perform Confluence 1 Inter 18,73000
Configure Soot Confluence 2 Inter 0,29600
An error occurred in getInvokeExpr with args: specialinvoke $stack5.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
Time to perform Confluence 2 Inter 24,45100
Visited methods: 436
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack22 = interfaceinvoke listener.<hudson.model.BuildListener: java.io.PrintStream getLogger()>(),270,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack22 = interfaceinvoke listener.<hudson.model.BuildListener: java.io.PrintStream getLogger()>(), 270)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack23 = virtualinvoke $stack21.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stderr(java.io.OutputStream)>($stack22),270,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack23 = virtualinvoke $stack21.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stderr(java.io.OutputStream)>($stack22), 270)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars),271,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars), 271)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,result = virtualinvoke $stack24.<hudson.Launcher$ProcStarter: int join()>(),272,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this.<jenkins.plugins.coverity.EnvParser$Scanner: int index> = 0,146,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211) => (<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>, this.<jenkins.plugins.coverity.EnvParser$Scanner: int index> = 0, 146)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack2 = this.<jenkins.plugins.coverity.EnvParser$Scanner: int index>,151,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack2 = this.<jenkins.plugins.coverity.EnvParser$Scanner: int index>, 151)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack4 = this.<jenkins.plugins.coverity.EnvParser$Scanner: int index>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack4 = this.<jenkins.plugins.coverity.EnvParser$Scanner: int index>, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),249,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 249)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,$stack4 = virtualinvoke environment.<hudson.EnvVars: java.lang.String expand(java.lang.String)>(input),47,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = $stack27,222,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = $stack27, 222)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack35 = new java.lang.StringBuilder,243,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack35.<java.lang.StringBuilder: void <init>()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,result = virtualinvoke $stack24.<hudson.Launcher$ProcStarter: int join()>(),272,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack21 = virtualinvoke $stack20.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stdout(hudson.model.TaskListener)>(listener),269,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack21 = virtualinvoke $stack20.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stdout(hudson.model.TaskListener)>(listener), 269)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack23 = virtualinvoke $stack21.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stderr(java.io.OutputStream)>($stack22),270,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack23 = virtualinvoke $stack21.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stderr(java.io.OutputStream)>($stack22), 270)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars),271,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars), 271)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,result = virtualinvoke $stack24.<hudson.Launcher$ProcStarter: int join()>(),272,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,launcherEnvVars = virtualinvoke $stack8.<hudson.Launcher$ProcStarter: java.lang.String[] envs()>(),262,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, launcherEnvVars = virtualinvoke $stack8.<hudson.Launcher$ProcStarter: java.lang.String[] envs()>(), 262)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,launcherEnvVars = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>(launcherEnvVars, envVars),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, launcherEnvVars = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>(launcherEnvVars, envVars), 263)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars),271,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars), 271)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,result = virtualinvoke $stack24.<hudson.Launcher$ProcStarter: int join()>(),272,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(),159,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(), 159))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(),159,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(), 159)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,$stack57 = interfaceinvoke invocationAssistance.<java.util.Iterator: boolean hasNext()>(),159,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack57 = interfaceinvoke invocationAssistance.<java.util.Iterator: boolean hasNext()>(), 159)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),221,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 221)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack18 = virtualinvoke $stack12.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter cmds(hudson.util.ArgumentListBuilder)>($stack13),267,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack18 = virtualinvoke $stack12.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter cmds(hudson.util.ArgumentListBuilder)>($stack13), 267)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack20 = virtualinvoke $stack18.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter pwd(hudson.FilePath)>($stack19),268,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack20 = virtualinvoke $stack18.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter pwd(hudson.FilePath)>($stack19), 268)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack21 = virtualinvoke $stack20.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stdout(hudson.model.TaskListener)>(listener),269,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack21 = virtualinvoke $stack20.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stdout(hudson.model.TaskListener)>(listener), 269)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack23 = virtualinvoke $stack21.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stderr(java.io.OutputStream)>($stack22),270,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack23 = virtualinvoke $stack21.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stderr(java.io.OutputStream)>($stack22), 270)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars),271,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars), 271)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,result = virtualinvoke $stack24.<hudson.Launcher$ProcStarter: int join()>(),272,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),249,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 249)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useAdvancedParser = 0,62,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack20 = virtualinvoke $stack18.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter pwd(hudson.FilePath)>($stack19),268,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack20 = virtualinvoke $stack18.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter pwd(hudson.FilePath)>($stack19), 268)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack21 = virtualinvoke $stack20.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stdout(hudson.model.TaskListener)>(listener),269,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack21 = virtualinvoke $stack20.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stdout(hudson.model.TaskListener)>(listener), 269)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack23 = virtualinvoke $stack21.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stderr(java.io.OutputStream)>($stack22),270,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack23 = virtualinvoke $stack21.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stderr(java.io.OutputStream)>($stack22), 270)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars),271,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars), 271)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,result = virtualinvoke $stack24.<hudson.Launcher$ProcStarter: int join()>(),272,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),249,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 249)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>,$stack9 = virtualinvoke resultMap.<hudson.EnvVars: int size()>(),247,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, launcherEnvVars = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>(launcherEnvVars, envVars), 263) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>, $stack9 = virtualinvoke resultMap.<hudson.EnvVars: int size()>(), 247)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>,r = newarray (java.lang.String)[$stack9],247,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, launcherEnvVars = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>(launcherEnvVars, envVars), 263)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,launcherEnvVars = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>(launcherEnvVars, envVars),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, launcherEnvVars = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>(launcherEnvVars, envVars), 263)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars),271,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars), 271)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,result = virtualinvoke $stack24.<hudson.Launcher$ProcStarter: int join()>(),272,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SinkNode, path: )
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>(),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useAdvancedParser = 1,64,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack12 = virtualinvoke launcher.<hudson.Launcher: hudson.Launcher$ProcStarter launch()>(),266,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack12 = virtualinvoke launcher.<hudson.Launcher: hudson.Launcher$ProcStarter launch()>(), 266)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack18 = virtualinvoke $stack12.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter cmds(hudson.util.ArgumentListBuilder)>($stack13),267,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack18 = virtualinvoke $stack12.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter cmds(hudson.util.ArgumentListBuilder)>($stack13), 267)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack20 = virtualinvoke $stack18.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter pwd(hudson.FilePath)>($stack19),268,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack20 = virtualinvoke $stack18.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter pwd(hudson.FilePath)>($stack19), 268)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack21 = virtualinvoke $stack20.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stdout(hudson.model.TaskListener)>(listener),269,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack21 = virtualinvoke $stack20.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stdout(hudson.model.TaskListener)>(listener), 269)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack23 = virtualinvoke $stack21.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stderr(java.io.OutputStream)>($stack22),270,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack23 = virtualinvoke $stack21.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter stderr(java.io.OutputStream)>($stack22), 270)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars),271,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars), 271)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,result = virtualinvoke $stack24.<hudson.Launcher$ProcStarter: int join()>(),272,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,launcherEnvVars = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>(launcherEnvVars, envVars),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, launcherEnvVars = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>(launcherEnvVars, envVars), 263)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars),271,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars), 271)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,result = virtualinvoke $stack24.<hudson.Launcher$ProcStarter: int join()>(),272,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SinkNode, path: )
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>,$stack1 = this.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String home>,42,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack37.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack38), 57) => (<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>, $stack11 = virtualinvoke install.<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>(environment), 559) => (<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>, $stack4 = virtualinvoke this.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(), 47)) => Node(<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>,$stack10 = virtualinvoke $stack9.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(),561,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack37.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack38), 57)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,home = virtualinvoke $stack37.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack38),57,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack37.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack38), 57)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,scanner = $stack9,211,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, scanner = $stack9, 211)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),213,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>,$stack1 = this.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String home>,42,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack37.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack38), 57) => (<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>, $stack11 = virtualinvoke install.<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>(environment), 559) => (<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>, $stack4 = virtualinvoke this.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(), 47)) => Node(<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>,$stack10 = virtualinvoke $stack9.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(),561,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack37.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack38), 57)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,home = virtualinvoke $stack37.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack38),57,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack37.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack38), 57)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack6 = depth + 1,303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, $stack6 = depth + 1, 303)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>(),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>(), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack8 = new java.lang.StringBuilder,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack8.<java.lang.StringBuilder: void <init>()>(), 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useAdvancedParser = 1,64,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useAdvancedParser = 0,62,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack793 = virtualinvoke $stack789.<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>($stack792),78,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack793 = virtualinvoke $stack789.<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>($stack792), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,home = virtualinvoke $stack793.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(),78,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack793.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),249,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 249)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>,$stack3 = virtualinvoke this.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),173,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>(125), 225)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>(125),225,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>(125), 225)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>(),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>(), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),213,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>,151,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>, 151)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack6 = this.<jenkins.plugins.coverity.EnvParser$Scanner: java.lang.String input>, 152)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack217 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($stack216), 511) => (<java.lang.Long: long parseLong(java.lang.String)>, $stack1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(l0, 10), 631) => (<java.lang.Long: long parseLong(java.lang.String,int)>, l12 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 572) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),249,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 249)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack734 != 0 goto (branch),158,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack35 = new java.lang.StringBuilder,243,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack35.<java.lang.StringBuilder: void <init>()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack36 = virtualinvoke $stack35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack37 = virtualinvoke $stack36.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(),243,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack37.<java.lang.StringBuilder: java.lang.String toString()>(), 243)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack47 = new java.lang.StringBuilder,251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack47.<java.lang.StringBuilder: void <init>()>(), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,$stack51 = interfaceinvoke javaWarFiles.<java.util.List: boolean isEmpty()>(),177,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack51 = interfaceinvoke javaWarFiles.<java.util.List: boolean isEmpty()>(), 177))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,$stack51 = interfaceinvoke javaWarFiles.<java.util.List: boolean isEmpty()>(),177,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack51 = interfaceinvoke javaWarFiles.<java.util.List: boolean isEmpty()>(), 177)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(),159,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(), 159)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,$stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(),171,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(), 171))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(),159,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(), 159)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,$stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(),171,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(), 171)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFile = (java.lang.String) $stack58,171,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, javaWarFile = (java.lang.String) $stack58, 171)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SinkNode, path: )
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,home = virtualinvoke $stack793.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(),78,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack793.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = $stack64,232,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = $stack64, 232)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack74 = virtualinvoke $stack73.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack74.<java.lang.StringBuilder: java.lang.String toString()>(),234,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 234)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>(125),225,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char hunt(char)>(125), 225)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack61 = virtualinvoke $stack60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack62 = virtualinvoke $stack61.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>(),227,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envVarName = virtualinvoke $stack62.<java.lang.StringBuilder: java.lang.String toString()>(), 227)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(),159,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(), 159)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,$stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(),171,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(), 171)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFile = (java.lang.String) $stack58,171,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, javaWarFile = (java.lang.String) $stack58, 171)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,interfaceinvoke cmd.<java.util.List: boolean add(java.lang.Object)>(javaWarFile),161,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, interfaceinvoke cmd.<java.util.List: boolean add(java.lang.Object)>(javaWarFile), 161))
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFiles := @parameter5: java.util.List,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(),159,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, invocationAssistance = interfaceinvoke javaWarFiles.<java.util.List: java.util.Iterator iterator()>(), 159)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,$stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(),171,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, $stack58 = interfaceinvoke invocationAssistance.<java.util.Iterator: java.lang.Object next()>(), 171)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,javaWarFile = (java.lang.String) $stack58,171,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, javaWarFile = (java.lang.String) $stack58, 171)) => Node(<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>,interfaceinvoke cmd.<java.util.List: boolean add(java.lang.Object)>(javaWarFile),161,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126) => (<jenkins.plugins.coverity.analysis.CoverityToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>, interfaceinvoke cmd.<java.util.List: boolean add(java.lang.Object)>(javaWarFile), 161)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>,$stack3 = new jenkins.plugins.coverity.CoverityInstallation,47,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack37.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>(node, $stack38), 57) => (<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: java.lang.String getHome(hudson.model.Node,hudson.EnvVars)>, $stack11 = virtualinvoke install.<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>(environment), 559)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack793 = virtualinvoke $stack789.<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>($stack792),78,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack793 = virtualinvoke $stack789.<jenkins.plugins.coverity.CoverityInstallation: jenkins.plugins.coverity.CoverityInstallation forEnvironment(hudson.EnvVars)>($stack792), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,home = virtualinvoke $stack793.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(),78,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, home = virtualinvoke $stack793.<jenkins.plugins.coverity.CoverityInstallation: java.lang.String getHome()>(), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119))
SINK=>BASE: Node(<jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>,$stack8 = new jenkins.plugins.coverity.EnvParser$Scanner,55,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack763 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(postCovBuild), 92) => (<jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>, specialinvoke $stack8.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 55)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this := @this: jenkins.plugins.coverity.EnvParser$Scanner,-1,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>,this.<jenkins.plugins.coverity.EnvParser$Scanner: int index> = 0,146,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, specialinvoke $stack9.<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>(input), 211) => (<jenkins.plugins.coverity.EnvParser$Scanner: void <init>(java.lang.String)>, this.<jenkins.plugins.coverity.EnvParser$Scanner: int index> = 0, 146)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack2 = this.<jenkins.plugins.coverity.EnvParser$Scanner: int index>,151,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack2 = this.<jenkins.plugins.coverity.EnvParser$Scanner: int index>, 151)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack4 = this.<jenkins.plugins.coverity.EnvParser$Scanner: int index>,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack4 = this.<jenkins.plugins.coverity.EnvParser$Scanner: int index>, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,$stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4),152,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, $stack7 = virtualinvoke $stack6.<java.lang.String: char charAt(int)>($stack4), 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>,this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7,152,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack10 = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>(), 212) => (<jenkins.plugins.coverity.EnvParser$Scanner: boolean get()>, this.<jenkins.plugins.coverity.EnvParser$Scanner: char next> = $stack7, 152)) => Node(<jenkins.plugins.coverity.EnvParser$Scanner: char got()>,$stack1 = this.<jenkins.plugins.coverity.EnvParser$Scanner: char next>,165,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 213)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(),249,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, c = virtualinvoke scanner.<jenkins.plugins.coverity.EnvParser$Scanner: char got()>(), 249)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envVarName = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.String toString()>(),251,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack48 = virtualinvoke $stack47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(envVarName), 251)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, $stack41 = virtualinvoke environment.<hudson.EnvVars: java.lang.Object get(java.lang.Object)>(envVarName), 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,envValue = (java.lang.String) $stack41,263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, envValue = (java.lang.String) $stack41, 263)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,builder = $stack8,209,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>, builder = $stack8, 209)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>,$stack13 = virtualinvoke builder.<java.lang.StringBuilder: java.lang.String toString()>(),287,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment),299,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44) => (<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolate(java.lang.String,hudson.EnvVars)>(input, environment), 299)) => Node(<jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>,$stack7 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(interpolated, $stack6, environment),303,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>, interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment), 44)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>,interpolated = staticinvoke <jenkins.plugins.coverity.EnvParser: java.lang.String interpolateRecursively(java.lang.String,int,hudson.EnvVars)>(input, 1, environment),44,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack791 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack790, envVars, useAdvancedParser), 78)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser),121,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack752 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>(givenJar, envVars, useAdvancedParser), 121)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#44 = $stack752,116,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#44 = $stack752, 116)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44),119,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke postCovBuild#35.<java.util.List: boolean add(java.lang.Object)>(javaWarFile#44), 119)), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>,$stack7 = new hudson.EnvVars,244,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, launcherEnvVars = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>(launcherEnvVars, envVars), 263) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>, specialinvoke $stack7.<hudson.EnvVars: void <init>(hudson.EnvVars)>(envVars), 244)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>,resultMap = $stack7,244,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, launcherEnvVars = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>(launcherEnvVars, envVars), 263) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>, resultMap = $stack7, 244)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>,$stack9 = virtualinvoke resultMap.<hudson.EnvVars: int size()>(),247,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, launcherEnvVars = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>(launcherEnvVars, envVars), 263) => (<jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>, $stack9 = virtualinvoke resultMap.<hudson.EnvVars: int size()>(), 247)) => Node(<jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>,r = newarray (java.lang.String)[$stack9],247,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, launcherEnvVars = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>(launcherEnvVars, envVars), 263)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,launcherEnvVars = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>(launcherEnvVars, envVars),263,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, launcherEnvVars = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String[] addEnvVars(java.lang.String[],hudson.EnvVars)>(launcherEnvVars, envVars), 263)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars),271,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars), 271)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,result = virtualinvoke $stack24.<hudson.Launcher$ProcStarter: int join()>(),272,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if postCovBuild#35 == null goto (branch),125,SinkNode, path: )
SINK=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if postCovBuild#35 == null goto (branch),125,SinkNode, path: ), SOURCE=>BASE: Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(),158,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack734 = interfaceinvoke postCovBuild#35.<java.util.List: boolean isEmpty()>(), 158))
SINK=>BASE: Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,$stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars),271,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96) => (<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>, $stack24 = virtualinvoke $stack23.<hudson.Launcher$ProcStarter: hudson.Launcher$ProcStarter envs(java.lang.String[])>(launcherEnvVars), 271)) => Node(<jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>,result = virtualinvoke $stack24.<hudson.Launcher$ProcStarter: int join()>(),272,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVars, useAdvancedParser), 96)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SinkNode, path: )]
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/09ae8cd6353743a1ebbd9bbfb903b60d7c7bbf55/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,75800
Runtime: 0.225s
OA interference in class FresnoToolHandler, method boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher), execution of line 111 overrides 111, assigning to variable ArrayList.<java.util.ArrayList: java.lang.Object[] elementData>, 
Caused by line 111 flow:
at jenkins.plugins.coverity.analysis.FresnoToolHandler.perform(FresnoToolHandler.java:111)
And line 111 flow:
at jenkins.plugins.coverity.analysis.FresnoToolHandler.perform(FresnoToolHandler.java:111)
 
OA interference in class FresnoToolHandler, method boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher), execution of line 111 overrides 111, assigning to variable postCovBuild#35, 
Caused by line 111 flow:
at jenkins.plugins.coverity.analysis.FresnoToolHandler.perform(FresnoToolHandler.java:111)
And line 111 flow:
at jenkins.plugins.coverity.analysis.FresnoToolHandler.perform(FresnoToolHandler.java:111)
 
Time to perform OA Inter 1,17500
OA Inter Visited methods: 480
 Analysis results
----------------------------
 Number of conflicts: 4
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/09ae8cd6353743a1ebbd9bbfb903b60d7c7bbf55/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 1,04000
An error occurred in getInvokeExpr with args: specialinvoke $stack5.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
Time to perform DFP Inter 11,94600
Depth limit: 5
CONFLICTS: []
Visited methods: 218
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/09ae8cd6353743a1ebbd9bbfb903b60d7c7bbf55/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,83000
An error occurred in getInvokeExpr with args: specialinvoke $stack5.<java.lang.StringBuffer: void <init>()>() -> java.lang.NullPointerException
Time to perform DFP Inter 11,83200
Depth limit: 5
CONFLICTS: []
Visited methods: 218
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/09ae8cd6353743a1ebbd9bbfb903b60d7c7bbf55/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,63900
Time to perform PDG 4,32500
CONFLICTS: [List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack457 != 0 goto cmd#51 = null,309,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack475 == null goto $stack476 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getScmSystem()>(),264,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack525 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getFileRegex()>(),266,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack525 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getFileRegex()>(), 266))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack457 != 0 goto cmd#51 = null,309,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack481 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getScmAdditionalCmd()>(),281,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack481 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getScmAdditionalCmd()>(), 281)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack481 == null goto $stack482 = interfaceinvoke listener.<hudson.model.BuildListener: java.io.PrintStream getLogger()>(),281,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack500 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getScmAdditionalCmd()>(),282,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack500 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getScmAdditionalCmd()>(), 282)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack501 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>($stack500),282,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack501 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>($stack500), 282))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(),318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(), 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449,318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449, 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(),304,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(), 304)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51),334,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51), 334)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack65 == 0 goto $stack66 = "CSHARP",334,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack67 == 0 goto $stack68 = new java.lang.RuntimeException,336,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser),368,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser), 368)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if useDataPort#146 == 0 goto $stack77 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,370,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),382,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack358 == 0 goto (branch),421,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),383,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 383)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack360 == null goto (branch),383,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(),408,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(), 408)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack362 != 0 goto (branch),408,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#85 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(givenJar#152, build, launcher, listener, envVars, useAdvancedParser),394,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#85 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(givenJar#152, build, launcher, listener, envVars, useAdvancedParser), 394)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if javaWarFile#85 == 0 goto $stack376 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,396,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto $stack79 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),408,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack79 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack79 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#41 = interfaceinvoke $stack79.<java.util.List: java.util.Iterator iterator()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#41 = interfaceinvoke $stack79.<java.util.List: java.util.Iterator iterator()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack81 = interfaceinvoke result#41.<java.util.Iterator: boolean hasNext()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack81 = interfaceinvoke result#41.<java.util.Iterator: boolean hasNext()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack81 == 0 goto (branch),421,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if temp == null goto $stack82 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: boolean isSkipFetchingDefects()>(),492,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack220 == 0 goto $stack221 = interfaceinvoke listener.<hudson.model.BuildListener: java.io.PrintStream getLogger()>(),494,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack224 == 0 goto $stack225 = interfaceinvoke listener.<hudson.model.BuildListener: java.io.PrintStream getLogger()>(),502,SinkNode, path: )), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(),318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(), 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449,318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449, 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(),304,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(), 304)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51),334,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51), 334)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack65 == 0 goto $stack66 = "CSHARP",334,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack67 == 0 goto $stack68 = new java.lang.RuntimeException,336,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser),368,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser), 368)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if useDataPort#146 == 0 goto $stack77 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,370,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),382,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack358 == 0 goto (branch),421,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),383,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 383)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack360 == null goto (branch),383,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(),408,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(), 408)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack362 != 0 goto (branch),408,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#151 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),385,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#151 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 385)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack367 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(result#151),390,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack367 = staticinvoke <jenkins.plugins.coverity.EnvParser: java.util.List tokenize(java.lang.String)>(result#151), 390)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke givenJar#152.<java.util.List: boolean addAll(java.util.Collection)>($stack367),390,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke givenJar#152.<java.util.List: boolean addAll(java.util.Collection)>($stack367), 390))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack605 = new hudson.EnvVars,207,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack605.<hudson.EnvVars: void <init>(hudson.EnvVars)>(envVars), 207))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack457 != 0 goto cmd#51 = null,309,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack476 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getScmSystem()>(),270,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack476 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getScmSystem()>(), 270)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack477 = virtualinvoke $stack476.<java.lang.String: boolean equals(java.lang.Object)>("accurev"),270,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack477 = virtualinvoke $stack476.<java.lang.String: boolean equals(java.lang.Object)>('accurev'), 270)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack477 == 0 goto $stack478 = new java.util.HashMap,270,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack518 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getAccRevRepo()>(),281,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack518 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getAccRevRepo()>(), 281))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,envVarsWithPassphrase = $stack605,207,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, envVarsWithPassphrase = $stack605, 207)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,virtualinvoke envVarsWithPassphrase.<hudson.EnvVars: java.lang.String put(java.lang.String,java.lang.String)>("COVERITY_PASSPHRASE", $stack607),208,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, virtualinvoke envVarsWithPassphrase.<hudson.EnvVars: java.lang.String put(java.lang.String,java.lang.String)>('COVERITY_PASSPHRASE', $stack607), 208))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(),318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(), 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449,318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449, 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(),304,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(), 304)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51),334,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51), 334)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack65 == 0 goto $stack66 = "CSHARP",334,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack67 == 0 goto $stack68 = new java.lang.RuntimeException,336,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser),368,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser), 368)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if useDataPort#146 == 0 goto $stack77 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,370,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),382,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack358 == 0 goto (branch),421,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),383,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 383)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack360 == null goto (branch),383,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(),408,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(), 408)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack362 != 0 goto (branch),408,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#85 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(givenJar#152, build, launcher, listener, envVars, useAdvancedParser),394,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#85 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(givenJar#152, build, launcher, listener, envVars, useAdvancedParser), 394)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if javaWarFile#85 == 0 goto $stack376 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,396,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto $stack79 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),408,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack79 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack79 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#41 = interfaceinvoke $stack79.<java.util.List: java.util.Iterator iterator()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#41 = interfaceinvoke $stack79.<java.util.List: java.util.Iterator iterator()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack234 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(),496,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack234 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(), 496)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack234,496,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack234, 496)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack330 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: jenkins.plugins.coverity.InvocationAssistance getInvocationAssistanceOverride()>(),427,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack330 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: jenkins.plugins.coverity.InvocationAssistance getInvocationAssistanceOverride()>(), 427)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack330 == null goto cmd#51 = "cov-commit-defects",427,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useDataPort#188 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: jenkins.plugins.coverity.InvocationAssistance merge(jenkins.plugins.coverity.InvocationAssistance)>($stack333),428,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, useDataPort#188 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: jenkins.plugins.coverity.InvocationAssistance merge(jenkins.plugins.coverity.InvocationAssistance)>($stack333), 428)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack279 = virtualinvoke useDataPort#188.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCommitArguments()>(),469,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack279 = virtualinvoke useDataPort#188.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCommitArguments()>(), 469)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack279 == null goto $stack262 = new hudson.EnvVars,469,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack290 = virtualinvoke useDataPort#188.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCommitArguments()>(),470,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack290 = virtualinvoke useDataPort#188.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCommitArguments()>(), 470))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(),318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(), 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449,318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449, 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(),304,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(), 304)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51),334,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51), 334)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack65 == 0 goto $stack66 = "CSHARP",334,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack67 == 0 goto $stack68 = new java.lang.RuntimeException,336,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser),368,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser), 368)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if useDataPort#146 == 0 goto $stack77 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,370,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),382,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack358 == 0 goto (branch),421,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),383,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 383)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack360 == null goto (branch),383,SinkNode, path: )), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(),318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(), 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449,318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449, 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(),304,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(), 304)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51),334,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51), 334)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack65 == 0 goto $stack66 = "CSHARP",334,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack67 == 0 goto $stack68 = new java.lang.RuntimeException,336,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser),368,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser), 368)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if useDataPort#146 == 0 goto $stack77 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,370,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),382,SinkNode, path: )), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(),318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(), 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449,318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449, 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(),304,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(), 304)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51),334,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51), 334)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack65 == 0 goto $stack66 = "CSHARP",334,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack67 == 0 goto $stack68 = new java.lang.RuntimeException,336,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser),368,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser), 368)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if useDataPort#146 == 0 goto $stack77 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,370,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),382,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack358 == 0 goto (branch),421,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),383,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 383)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack360 == null goto (branch),383,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(),408,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(), 408)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack362 != 0 goto (branch),408,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#151 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),385,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#151 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 385))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack457 != 0 goto cmd#51 = null,309,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#52 = $stack462,238,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#52 = $stack462, 238)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke result#52.<java.util.List: boolean add(java.lang.Object)>("--filename-regex"),265,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke result#52.<java.util.List: boolean add(java.lang.Object)>('--filename-regex'), 265))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack457 != 0 goto cmd#51 = null,309,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack480 = virtualinvoke $stack479.<java.lang.String: boolean equals(java.lang.Object)>("perforce"),277,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack480 = virtualinvoke $stack479.<java.lang.String: boolean equals(java.lang.Object)>('perforce'), 277)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack480 == 0 goto $stack481 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getScmAdditionalCmd()>(),277,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke givenJar#76.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("P4PORT", $stack515),278,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke givenJar#76.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>('P4PORT', $stack515), 278))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(),318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(), 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449,318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449, 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(),304,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(), 304)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51),334,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51), 334)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack65 == 0 goto $stack66 = "CSHARP",334,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack67 == 0 goto $stack68 = new java.lang.RuntimeException,336,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser),368,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser), 368)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if useDataPort#146 == 0 goto $stack77 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,370,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),382,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack358 == 0 goto (branch),421,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),383,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 383)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack360 == null goto (branch),383,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(),408,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(), 408)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack362 != 0 goto (branch),408,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#85 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(givenJar#152, build, launcher, listener, envVars, useAdvancedParser),394,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#85 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(givenJar#152, build, launcher, listener, envVars, useAdvancedParser), 394)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if javaWarFile#85 == 0 goto $stack376 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,396,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto $stack79 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),408,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack337 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(),426,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack337 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getCsharpMsvscaOutputFiles()>(), 426)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack337 == null goto $stack79 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),426,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack340, envVars, useAdvancedParser),410,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String evaluateEnvVars(java.lang.String,hudson.EnvVars,boolean)>($stack340, envVars, useAdvancedParser), 410))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(),318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(), 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449,318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449, 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(),304,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(), 304)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51),334,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51), 334)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack65 == 0 goto $stack66 = "CSHARP",334,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack67 == 0 goto $stack68 = new java.lang.RuntimeException,336,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser),368,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser), 368)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if useDataPort#146 == 0 goto $stack77 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,370,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),382,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack358 == 0 goto (branch),421,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),383,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 383)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack360 == null goto (branch),383,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(),408,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(), 408)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack362 != 0 goto (branch),408,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#85 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(givenJar#152, build, launcher, listener, envVars, useAdvancedParser),394,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#85 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(givenJar#152, build, launcher, listener, envVars, useAdvancedParser), 394)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if javaWarFile#85 == 0 goto $stack376 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,396,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto $stack79 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),408,SinkNode, path: )), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack457 != 0 goto cmd#51 = null,309,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack475 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getFileRegex()>(),264,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack475 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getFileRegex()>(), 264))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack687 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),152,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack687 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 152))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(),318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(), 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449,318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449, 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(),304,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(), 304)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51),334,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51), 334)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack65 == 0 goto $stack66 = "CSHARP",334,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if result#105 == null goto $stack70 = interfaceinvoke listener.<hudson.model.BuildListener: java.io.PrintStream getLogger()>(),360,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack400 = virtualinvoke result#105.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getAnalyzeArguments()>(),361,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack400 = virtualinvoke result#105.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getAnalyzeArguments()>(), 361)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack400 == null goto $stack70 = interfaceinvoke listener.<hudson.model.BuildListener: java.io.PrintStream getLogger()>(),361,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack411 = virtualinvoke result#105.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getAnalyzeArguments()>(),362,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack411 = virtualinvoke result#105.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getAnalyzeArguments()>(), 362))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVarsWithPassphrase, useAdvancedParser),209,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(cmd, build, launcher, listener, envVarsWithPassphrase, useAdvancedParser), 209))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack457 != 0 goto cmd#51 = null,309,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack473 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getScmCommandArgs()>(),254,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack473 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getScmCommandArgs()>(), 254)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack473 == null goto $stack474 = virtualinvoke scm.<jenkins.plugins.coverity.ScmOptionBlock: java.lang.String getLogFileLoc()>(),254,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack535 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String doubleQuote(java.lang.String,boolean)>($stack534, useAdvancedParser),256,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack535 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String doubleQuote(java.lang.String,boolean)>($stack534, useAdvancedParser), 256))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack591 = virtualinvoke result#59.<jenkins.plugins.coverity.CIMStream: java.lang.String getStream()>(),196,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack591 = virtualinvoke result#59.<jenkins.plugins.coverity.CIMStream: java.lang.String getStream()>(), 196)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack592 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String doubleQuote(java.lang.String,boolean)>($stack591, useAdvancedParser),196,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack592 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: java.lang.String doubleQuote(java.lang.String,boolean)>($stack591, useAdvancedParser), 196)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke cmd.<java.util.List: boolean add(java.lang.Object)>($stack592),196,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke cmd.<java.util.List: boolean add(java.lang.Object)>($stack592), 196))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack457 != 0 goto cmd#51 = null,309,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#52 = $stack462,238,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#52 = $stack462, 238)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,interfaceinvoke result#52.<java.util.List: boolean add(java.lang.Object)>($stack540),251,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, interfaceinvoke result#52.<java.util.List: boolean add(java.lang.Object)>($stack540), 251))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(),318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(), 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449,318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449, 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(),304,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(), 304)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51),334,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51), 334)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack65 == 0 goto $stack66 = "CSHARP",334,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack67 == 0 goto $stack68 = new java.lang.RuntimeException,336,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser),368,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser), 368)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if useDataPort#146 == 0 goto $stack77 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,370,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),382,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack358 == 0 goto (branch),421,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),383,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 383)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack360 == null goto (branch),383,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(),408,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(), 408)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack362 != 0 goto (branch),408,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#85 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(givenJar#152, build, launcher, listener, envVars, useAdvancedParser),394,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#85 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(givenJar#152, build, launcher, listener, envVars, useAdvancedParser), 394)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if javaWarFile#85 == 0 goto $stack376 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,396,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack379 = new java.lang.StringBuilder,397,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack379.<java.lang.StringBuilder: void <init>()>(), 397)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,specialinvoke $stack379.<java.lang.StringBuilder: void <init>()>(),397,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, specialinvoke $stack379.<java.lang.StringBuilder: void <init>()>(), 397))), List(Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,postCovBuild#35 = $stack48,111,SourceNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, postCovBuild#35 = $stack48, 111)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35),126,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#48 = virtualinvoke this.<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean covEmitWar(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,java.lang.String,jenkins.plugins.coverity.CoverityTempDir,java.util.List)>(build, launcher, listener, home, temp, postCovBuild#35), 126)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if cmd#48 != 0 goto (branch),127,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),134,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(),135,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack672 = virtualinvoke testAnalysis.<jenkins.plugins.coverity.TaOptionBlock: java.lang.String getCustomTestCommand()>(), 135)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack672 == null goto (branch),135,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser),156,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#53 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(result#52, build, launcher, listener, envVars, useAdvancedParser), 156)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if givenJar#53 == 0 goto $stack697 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,158,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if testAnalysis == null goto (branch),171,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack564 == 0 goto (branch),172,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(),173,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack568 = interfaceinvoke cmd#58.<java.util.Iterator: boolean hasNext()>(), 173)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack568 == 0 goto (branch),173,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if scm == null goto cmd#51 = null,225,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack49 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(),302,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#41 = interfaceinvoke $stack49.<java.util.List: java.util.Iterator iterator()>(), 302)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(),318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack449 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(), 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449,318,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack449, 318)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(),304,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, cmd#51 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getLanguage()>(), 304)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51),334,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack65 = virtualinvoke $stack64.<java.lang.String: boolean equals(java.lang.Object)>(cmd#51), 334)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack65 == 0 goto $stack66 = "CSHARP",334,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack67 == 0 goto $stack68 = new java.lang.RuntimeException,336,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser),368,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, useDataPort#146 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(javaWarFile#107, build, launcher, listener, envVars, useAdvancedParser), 368)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if useDataPort#146 == 0 goto $stack77 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,370,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto (branch),382,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack358 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: boolean getIsUsingPostCovAnalyzeCmd()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack358 == 0 goto (branch),421,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(),383,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack360 = virtualinvoke invocationAssistance.<jenkins.plugins.coverity.InvocationAssistance: java.lang.String getPostCovAnalyzeCmd()>(), 383)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack360 == null goto (branch),383,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(),408,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack362 = virtualinvoke $stack361.<java.lang.String: boolean isEmpty()>(), 408)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack362 != 0 goto (branch),408,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#85 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(givenJar#152, build, launcher, listener, envVars, useAdvancedParser),394,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#85 = staticinvoke <jenkins.plugins.coverity.CoverityUtils: int runCmd(java.util.List,hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,hudson.EnvVars,boolean)>(givenJar#152, build, launcher, listener, envVars, useAdvancedParser), 394)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if javaWarFile#85 == 0 goto $stack376 = <jenkins.plugins.coverity.CoverityLauncherDecorator: java.lang.ThreadLocal SKIP>,396,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if invocationAssistance == null goto $stack79 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),408,SinkNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack79 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack79 = virtualinvoke publisher.<jenkins.plugins.coverity.CoverityPublisher: java.util.List getCimStreams()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,result#41 = interfaceinvoke $stack79.<java.util.List: java.util.Iterator iterator()>(),421,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, result#41 = interfaceinvoke $stack79.<java.util.List: java.util.Iterator iterator()>(), 421)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack234 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(),496,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack234 = interfaceinvoke result#41.<java.util.Iterator: java.lang.Object next()>(), 496)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack234,496,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, givenJar#104 = (jenkins.plugins.coverity.CIMStream) $stack234, 496)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack236 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getInstance()>(),422,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack236 = virtualinvoke givenJar#104.<jenkins.plugins.coverity.CIMStream: java.lang.String getInstance()>(), 422)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,javaWarFile#187 = virtualinvoke $stack235.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: jenkins.plugins.coverity.CIMInstance getInstance(java.lang.String)>($stack236),422,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, javaWarFile#187 = virtualinvoke $stack235.<jenkins.plugins.coverity.CoverityPublisher$DescriptorImpl: jenkins.plugins.coverity.CIMInstance getInstance(java.lang.String)>($stack236), 422)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack240 = virtualinvoke javaWarFile#187.<jenkins.plugins.coverity.CIMInstance: int getDataPort()>(),441,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack240 = virtualinvoke javaWarFile#187.<jenkins.plugins.coverity.CIMInstance: int getDataPort()>(), 441)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if $stack240 == 0 goto $stack311 = 0,441,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack311 = 0,468,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, envVarsWithPassphrase#195 = $stack311, 441)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,envVarsWithPassphrase#195 = $stack311,441,SimpleNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, envVarsWithPassphrase#195 = $stack311, 441)) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,if envVarsWithPassphrase#195 == 0 goto $stack250 = virtualinvoke javaWarFile#187.<jenkins.plugins.coverity.CIMInstance: boolean isUseSSL()>(),452,SimpleNode, path: ) => Node(<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>,$stack250 = virtualinvoke javaWarFile#187.<jenkins.plugins.coverity.CIMInstance: boolean isUseSSL()>(),455,SinkNode, path: (<jenkins.plugins.coverity.analysis.FresnoToolHandler: boolean perform(hudson.model.AbstractBuild,hudson.Launcher,hudson.model.BuildListener,jenkins.plugins.coverity.CoverityPublisher)>, $stack250 = virtualinvoke javaWarFile#187.<jenkins.plugins.coverity.CIMInstance: boolean isUseSSL()>(), 455)))]
 Analysis results
----------------------------
 Number of conflicts: 24
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/coverity-plugin/09ae8cd6353743a1ebbd9bbfb903b60d7c7bbf55/original-without-dependencies/coverity.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,90000
Time to perform PDG 5,08100
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
