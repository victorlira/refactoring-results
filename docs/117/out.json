[
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack133 = new cz.habarta.typescript.generator.TypeProcessor$Result",
"location": {
  "file": "",
  "class": "cz.habarta.typescript.generator.DefaultTypeProcessor",
  "method": "<cz.habarta.typescript.generator.DefaultTypeProcessor: cz.habarta.typescript.generator.TypeProcessor$Result processType(java.lang.reflect.Type,cz.habarta.typescript.generator.TypeProcessor$Context)>",
  "line": "20"
},
"stackTrace": ["(<cz.habarta.typescript.generator.DefaultTypeProcessor: cz.habarta.typescript.generator.TypeProcessor$Result processType(java.lang.reflect.Type,cz.habarta.typescript.generator.TypeProcessor$Context)>, specialinvoke $stack133.<cz.habarta.typescript.generator.TypeProcessor$Result: void <init>(cz.habarta.typescript.generator.TsType,java.lang.Class[])>($stack137, $stack136), 20)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: cz.habarta.typescript.generator.TypeProcessor$Result",
"location": {
  "file": "",
  "class": "cz.habarta.typescript.generator.TypeProcessor$Result",
  "method": "<cz.habarta.typescript.generator.TypeProcessor$Result: void <init>(cz.habarta.typescript.generator.TsType,java.lang.Class[])>",
  "line": "-1"
},
"stackTrace": ["(<cz.habarta.typescript.generator.DefaultTypeProcessor: cz.habarta.typescript.generator.TypeProcessor$Result processType(java.lang.reflect.Type,cz.habarta.typescript.generator.TypeProcessor$Context)>, specialinvoke $stack133.<cz.habarta.typescript.generator.TypeProcessor$Result: void <init>(cz.habarta.typescript.generator.TsType,java.lang.Class[])>($stack137, $stack136), 20)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<java.lang.Object: void <init>()>()",
"location": {
  "file": "",
  "class": "cz.habarta.typescript.generator.TypeProcessor$Result",
  "method": "<cz.habarta.typescript.generator.TypeProcessor$Result: void <init>(cz.habarta.typescript.generator.TsType,java.lang.Class[])>",
  "line": "48"
},
"stackTrace": ["(<cz.habarta.typescript.generator.DefaultTypeProcessor: cz.habarta.typescript.generator.TypeProcessor$Result processType(java.lang.reflect.Type,cz.habarta.typescript.generator.TypeProcessor$Context)>, specialinvoke $stack133.<cz.habarta.typescript.generator.TypeProcessor$Result: void <init>(cz.habarta.typescript.generator.TsType,java.lang.Class[])>($stack137, $stack136), 20)","(<cz.habarta.typescript.generator.TypeProcessor$Result: void <init>(cz.habarta.typescript.generator.TsType,java.lang.Class[])>, specialinvoke this.<java.lang.Object: void <init>()>(), 48)"]
}]
}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "$stack82 = new cz.habarta.typescript.generator.TypeProcessor$Result",
"location": {
  "file": "",
  "class": "cz.habarta.typescript.generator.DefaultTypeProcessor",
  "method": "<cz.habarta.typescript.generator.DefaultTypeProcessor: cz.habarta.typescript.generator.TypeProcessor$Result processType(java.lang.reflect.Type,cz.habarta.typescript.generator.TypeProcessor$Context)>",
  "line": "41"
},
"stackTrace": ["(<cz.habarta.typescript.generator.DefaultTypeProcessor: cz.habarta.typescript.generator.TypeProcessor$Result processType(java.lang.reflect.Type,cz.habarta.typescript.generator.TypeProcessor$Context)>, specialinvoke $stack82.<cz.habarta.typescript.generator.TypeProcessor$Result: void <init>(cz.habarta.typescript.generator.TsType,java.lang.Class[])>($stack84, $stack83), 41)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "this := @this: cz.habarta.typescript.generator.TypeProcessor$Result",
"location": {
  "file": "",
  "class": "cz.habarta.typescript.generator.TypeProcessor$Result",
  "method": "<cz.habarta.typescript.generator.TypeProcessor$Result: void <init>(cz.habarta.typescript.generator.TsType,java.lang.Class[])>",
  "line": "-1"
},
"stackTrace": ["(<cz.habarta.typescript.generator.DefaultTypeProcessor: cz.habarta.typescript.generator.TypeProcessor$Result processType(java.lang.reflect.Type,cz.habarta.typescript.generator.TypeProcessor$Context)>, specialinvoke $stack133.<cz.habarta.typescript.generator.TypeProcessor$Result: void <init>(cz.habarta.typescript.generator.TsType,java.lang.Class[])>($stack137, $stack136), 20)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "specialinvoke this.<java.lang.Object: void <init>()>()",
"location": {
  "file": "",
  "class": "cz.habarta.typescript.generator.TypeProcessor$Result",
  "method": "<cz.habarta.typescript.generator.TypeProcessor$Result: void <init>(cz.habarta.typescript.generator.TsType,java.lang.Class[])>",
  "line": "48"
},
"stackTrace": ["(<cz.habarta.typescript.generator.DefaultTypeProcessor: cz.habarta.typescript.generator.TypeProcessor$Result processType(java.lang.reflect.Type,cz.habarta.typescript.generator.TypeProcessor$Context)>, specialinvoke $stack133.<cz.habarta.typescript.generator.TypeProcessor$Result: void <init>(cz.habarta.typescript.generator.TsType,java.lang.Class[])>($stack137, $stack136), 20)","(<cz.habarta.typescript.generator.TypeProcessor$Result: void <init>(cz.habarta.typescript.generator.TsType,java.lang.Class[])>, specialinvoke this.<java.lang.Object: void <init>()>(), 48)"]
}]
}
}

]
