SOURCE=>BASE: Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,$stack12 := @caughtexception,107,SourceNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, e#3 = $stack12, 113)) => Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,e#3 = $stack12,113,SimpleNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, e#3 = $stack12, 113)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, $stack16 = virtualinvoke e#3.<java.lang.Exception: java.lang.String getMessage()>(), 114)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>,377,SinkNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, $stack16 = virtualinvoke e#3.<java.lang.Exception: java.lang.String getMessage()>(), 114))
SINK=>BASE: Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,e#3 = $stack12,113,SourceNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, e#3 = $stack12, 113)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, $stack16 = virtualinvoke e#3.<java.lang.Exception: java.lang.String getMessage()>(), 114)) => Node(<java.lang.Throwable: java.lang.String getMessage()>,$stack1 = l0.<java.lang.Throwable: java.lang.String detailMessage>,377,SinkNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, $stack16 = virtualinvoke e#3.<java.lang.Exception: java.lang.String getMessage()>(), 114))

List(Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,$stack12 := @caughtexception,107,SourceNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, e#3 = $stack12, 113)) => Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,e#3 = $stack12,113,SinkNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, e#3 = $stack12, 113)) => Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,$stack16 = virtualinvoke e#3.<java.lang.Exception: java.lang.String getMessage()>(),114,SinkNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, $stack16 = virtualinvoke e#3.<java.lang.Exception: java.lang.String getMessage()>(), 114)) => Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,$stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16),114,SinkNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, $stack17 = virtualinvoke $stack15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack16), 114)) => Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,$stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(),114,SinkNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, $stack18 = virtualinvoke $stack17.<java.lang.StringBuilder: java.lang.String toString()>(), 114)) => Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,virtualinvoke $stack14.<java.io.PrintStream: void println(java.lang.String)>($stack18),114,SinkNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, virtualinvoke $stack14.<java.io.PrintStream: void println(java.lang.String)>($stack18), 114)))

List(Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,$stack12 := @caughtexception,107,SourceNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, e#3 = $stack12, 113)) => Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,e#3 = $stack12,113,SinkNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, e#3 = $stack12, 113)))

List(Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,if list != null goto e = list,106,SourceNode, path: ) => Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,l5 = 0,110,SimpleNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, l5 = l5 + 1, 110)) => Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,l5 = l5 + 1,110,SimpleNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, l5 = l5 + 1, 110)) => Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,if l5 >= l4 goto (branch),110,SimpleNode, path: ) => Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,$stack8 = interfaceinvoke clo.<net.masterthought.cucumber.json.Closure: net.masterthought.cucumber.util.Util$Status call(java.lang.Object)>(t),111,SinkNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, $stack8 = interfaceinvoke clo.<net.masterthought.cucumber.json.Closure: net.masterthought.cucumber.util.Util$Status call(java.lang.Object)>(t), 111)))

List(Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,$stack12 := @caughtexception,107,SourceNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, e#3 = $stack12, 113)) => Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,e#3 = $stack12,113,SinkNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, e#3 = $stack12, 113)))

List(Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,$stack12 := @caughtexception,107,SourceNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, e#3 = $stack12, 113)) => Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,e#3 = $stack12,113,SinkNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, e#3 = $stack12, 113)) => Node(<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>,$stack16 = virtualinvoke e#3.<java.lang.Exception: java.lang.String getMessage()>(),114,SinkNode, path: (<net.masterthought.cucumber.util.Util: java.util.List collectSteps(net.masterthought.cucumber.json.Step[],net.masterthought.cucumber.json.Closure)>, $stack16 = virtualinvoke e#3.<java.lang.Exception: java.lang.String getMessage()>(), 114)))

