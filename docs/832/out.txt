source(org.openpnp.model.Configuration, get, 81, $stack0 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:202), at org.openpnp.model.Configuration.get(Configuration.java:81)]) => sink(org.openpnp.model.Configuration, get, 81, $stack0 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:214), at org.openpnp.model.Configuration.get(Configuration.java:81)])

source(org.openpnp.model.Configuration, get, 82, $stack2 = new java.lang.Error, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:202), at org.openpnp.model.Configuration.get(Configuration.java:82)]) => sink(org.openpnp.model.Configuration, get, 82, $stack2 = new java.lang.Error, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:214), at org.openpnp.model.Configuration.get(Configuration.java:82)])

source(org.openpnp.model.Configuration, get, 84, $stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:202), at org.openpnp.model.Configuration.get(Configuration.java:84)]) => sink(org.openpnp.model.Configuration, get, 84, $stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:214), at org.openpnp.model.Configuration.get(Configuration.java:84)])

source(java.lang.Throwable, <init>, -1, Throwable.<java.lang.Throwable: java.lang.Object backtrace> = null, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:202), at org.openpnp.model.Configuration.get(Configuration.java:82), at java.lang.Error.<init>(Error.java:70)]) => sink(java.lang.Throwable, <init>, -1, Throwable.<java.lang.Throwable: java.lang.Object backtrace> = null, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:214), at org.openpnp.model.Configuration.get(Configuration.java:82), at java.lang.Error.<init>(Error.java:70)])

source(java.lang.Throwable, <init>, -1, Throwable.<java.lang.Throwable: java.lang.String detailMessage> = null, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:202), at org.openpnp.model.Configuration.get(Configuration.java:82), at java.lang.Error.<init>(Error.java:70)]) => sink(java.lang.Throwable, <init>, -1, Throwable.<java.lang.Throwable: java.lang.String detailMessage> = null, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:214), at org.openpnp.model.Configuration.get(Configuration.java:82), at java.lang.Error.<init>(Error.java:70)])

source(java.lang.Throwable, <init>, -1, Throwable.<java.lang.Throwable: java.lang.Throwable cause> = null, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:202), at org.openpnp.model.Configuration.get(Configuration.java:82), at java.lang.Error.<init>(Error.java:70)]) => sink(java.lang.Throwable, <init>, -1, Throwable.<java.lang.Throwable: java.lang.Throwable cause> = null, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:214), at org.openpnp.model.Configuration.get(Configuration.java:82), at java.lang.Error.<init>(Error.java:70)])

source(java.lang.Throwable, <init>, -1, Throwable.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = null, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:202), at org.openpnp.model.Configuration.get(Configuration.java:82), at java.lang.Error.<init>(Error.java:70)]) => sink(java.lang.Throwable, <init>, -1, Throwable.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = null, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:214), at org.openpnp.model.Configuration.get(Configuration.java:82), at java.lang.Error.<init>(Error.java:70)])

source(java.lang.Throwable, <init>, -1, Throwable.<java.lang.Throwable: java.util.List suppressedExceptions> = null, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:202), at org.openpnp.model.Configuration.get(Configuration.java:82), at java.lang.Error.<init>(Error.java:70)]) => sink(java.lang.Throwable, <init>, -1, Throwable.<java.lang.Throwable: java.util.List suppressedExceptions> = null, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:214), at org.openpnp.model.Configuration.get(Configuration.java:82), at java.lang.Error.<init>(Error.java:70)])

source(org.openpnp.gui.PartsPanel$3, valueChanged, 209, $stack53 = this.<org.openpnp.gui.PartsPanel$3: org.openpnp.gui.PartsPanel this$0>, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:209)]) => sink(org.openpnp.gui.PartsPanel$3, valueChanged, 209, $stack53 = this.<org.openpnp.gui.PartsPanel$3: org.openpnp.gui.PartsPanel this$0>, [at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:209)])

List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>("Configuration instance not yet initialized."),82,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)))

List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)))

List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,return $stack1,365,SinkNode, path: ))

List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack0 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,81,SourceNode, path: ) => Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,if $stack0 != null goto $stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,81,SinkNode, path: ))

List(Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,return $stack1,365,SinkNode, path: ))

List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,return $stack1,84,SinkNode, path: ))

List(Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,return $stack1,365,SinkNode, path: ))

List(Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)))

List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>("Configuration instance not yet initialized."),82,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)))

List(Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,return $stack1,365,SinkNode, path: ))

List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack26 = interfaceinvoke fiducialLocator.<java.util.Iterator: boolean hasNext()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack26 = interfaceinvoke fiducialLocator.<java.util.Iterator: boolean hasNext()>(), 202)))

List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,return $stack1,365,SinkNode, path: ))

List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack0 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,81,SourceNode, path: ) => Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,if $stack0 != null goto $stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,81,SinkNode, path: ))

List(Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack26 = interfaceinvoke fiducialLocator.<java.util.Iterator: boolean hasNext()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack26 = interfaceinvoke fiducialLocator.<java.util.Iterator: boolean hasNext()>(), 202)))

List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,return $stack1,84,SinkNode, path: ))

List(Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,return $stack1,365,SinkNode, path: ))

