Running soot scenario openpnp;org.openpnp.gui.PartsPanel;PartsPanel(Configuration, Frame);0713b6c46487e92a89d68780a39282cce8446abd
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openpnp/0713b6c46487e92a89d68780a39282cce8446abd/original-without-dependencies/openpnp-gui-0.0.1-alpha-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 1,19200
Time to perform Confluence 1 Inter 0,67700
Configure Soot Confluence 2 Inter 0,61900
Time to perform Confluence 2 Inter 0,20700
Visited methods: 30
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack47 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(),207,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack47 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(), 207))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack47 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(),207,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack47 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(), 207)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,virtualinvoke panel.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack47),207,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, virtualinvoke panel.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack47), 207)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack35 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(),219,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack35 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(), 219))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack35 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(),219,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack35 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(), 219)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)), SOURCE=>BASE: Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack50 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(),208,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack50 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(), 208))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack50 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(),208,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack50 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(), 208)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,virtualinvoke $stack49.<javax.swing.JTabbedPane: java.awt.Component add(java.lang.String,java.awt.Component)>($stack50, $stack51),208,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, virtualinvoke $stack49.<javax.swing.JTabbedPane: java.awt.Component add(java.lang.String,java.awt.Component)>($stack50, $stack51), 208)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),70,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1),70,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,if wizard == null goto (branch),204,SinkNode, path: )
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,if wizard == null goto (branch),204,SinkNode, path: ), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>,786,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>, 786))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>,786,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack4 = l0.<java.lang.Throwable: java.lang.Object backtrace>, 786)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack38 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(),220,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack38 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(), 220))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack38 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(),220,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack38 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(), 220)), SOURCE=>BASE: Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0),783,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0), 783))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0),783,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, specialinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>(0), 783)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: void setWizardContainer(org.openpnp.gui.support.WizardContainer)>($stack41),221,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: void setWizardContainer(org.openpnp.gui.support.WizardContainer)>($stack41), 221))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: void setWizardContainer(org.openpnp.gui.support.WizardContainer)>($stack41),221,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: void setWizardContainer(org.openpnp.gui.support.WizardContainer)>($stack41), 221)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3,784,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3, 784))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3,784,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack3, 784)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack38 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(),220,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack38 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(), 220))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack38 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(),220,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack38 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(), 220)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(),265,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(),265,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265)), SOURCE=>BASE: Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack50 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(),208,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack50 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(), 208))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack50 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(),208,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack50 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(), 208)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,virtualinvoke $stack49.<javax.swing.JTabbedPane: java.awt.Component add(java.lang.String,java.awt.Component)>($stack50, $stack51),208,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, virtualinvoke $stack49.<javax.swing.JTabbedPane: java.awt.Component add(java.lang.String,java.awt.Component)>($stack50, $stack51), 208)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack35 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(),219,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack35 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(), 219))
SINK=>BASE: Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack35 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(),219,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack35 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(), 219)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>,781,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>, 781))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265)) => Node(<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>,$stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>,781,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, virtualinvoke l0.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>(), 265) => (<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>, $stack1 = l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace>, 781)), SOURCE=>BASE: Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,if partAlignment#18 == null goto $stack20 = this.<org.openpnp.gui.PartsPanel$3: org.openpnp.gui.PartsPanel this$0>,216,SinkNode, path: )
SINK=>BASE: Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,if partAlignment#18 == null goto $stack20 = this.<org.openpnp.gui.PartsPanel$3: org.openpnp.gui.PartsPanel this$0>,216,SinkNode, path: ), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l0,197,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l0, 197))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.Throwable cause> = l0,197,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.Throwable cause> = l0, 197)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: void setWizardContainer(org.openpnp.gui.support.WizardContainer)>($stack41),221,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: void setWizardContainer(org.openpnp.gui.support.WizardContainer)>($stack41), 221))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: void setWizardContainer(org.openpnp.gui.support.WizardContainer)>($stack41),221,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: void setWizardContainer(org.openpnp.gui.support.WizardContainer)>($stack41), 221)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack38 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(),220,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack38 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(), 220))
SINK=>BASE: Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack38 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(),220,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack38 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: java.lang.String getWizardName()>(), 220)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack47 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(),207,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack47 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(), 207))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack47 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(),207,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack47 = interfaceinvoke wizard.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(), 207)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,virtualinvoke panel.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack47),207,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, virtualinvoke panel.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack47), 207)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: void setWizardContainer(org.openpnp.gui.support.WizardContainer)>($stack41),221,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: void setWizardContainer(org.openpnp.gui.support.WizardContainer)>($stack41), 221))
SINK=>BASE: Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: void setWizardContainer(org.openpnp.gui.support.WizardContainer)>($stack41),221,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: void setWizardContainer(org.openpnp.gui.support.WizardContainer)>($stack41), 221)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215))
SINK=>BASE: Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,if wizard == null goto (branch),204,SinkNode, path: )
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment = (org.openpnp.spi.PartAlignment) $stack42,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment = (org.openpnp.spi.PartAlignment) $stack42, 227)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),203,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, wizard = interfaceinvoke partAlignment.<org.openpnp.spi.PartAlignment: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 203)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,if wizard == null goto (branch),204,SinkNode, path: ), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack35 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(),219,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack35 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(), 219))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack35 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(),219,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack35 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(), 219)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,if partAlignment#18 == null goto $stack20 = this.<org.openpnp.gui.PartsPanel$3: org.openpnp.gui.PartsPanel this$0>,216,SinkNode, path: )
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,if partAlignment#18 == null goto $stack20 = this.<org.openpnp.gui.PartsPanel$3: org.openpnp.gui.PartsPanel this$0>,216,SinkNode, path: ), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,if partAlignment#18 == null goto $stack20 = this.<org.openpnp.gui.PartsPanel$3: org.openpnp.gui.PartsPanel this$0>,216,SinkNode, path: )
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator#17 = interfaceinvoke $stack28.<org.openpnp.spi.Machine: org.openpnp.spi.FiducialLocator getFiducialLocator()>(), 214)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part),215,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,if partAlignment#18 == null goto $stack20 = this.<org.openpnp.gui.PartsPanel$3: org.openpnp.gui.PartsPanel this$0>,216,SinkNode, path: ), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2,210,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2, 210))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2,210,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.StackTraceElement[] stackTrace> = $stack2, 210)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(),227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack42 = interfaceinvoke fiducialLocator.<java.util.Iterator: java.lang.Object next()>(), 227)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = l1,266,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = l1, 266))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.lang.String detailMessage> = l1,266,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.lang.String detailMessage> = l1, 266)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Object: void <init>()>(),264,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 264))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,specialinvoke l0.<java.lang.Object: void <init>()>(),264,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Object: void <init>()>(), 264)), SOURCE=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3, 227))
SINK=>BASE: Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Error: void <init>(java.lang.String)>,l0 := @this: java.lang.Error,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0 := @this: java.lang.Throwable,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)) => Node(<java.lang.Throwable: void <init>(java.lang.String)>,l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3,227,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70) => (<java.lang.Throwable: void <init>(java.lang.String)>, l0.<java.lang.Throwable: java.util.List suppressedExceptions> = $stack3, 227))]
Confluence interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Confluence flows from execution of lines 202 and 202 to line 207, defined in $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>() and $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>() and used in virtualinvoke panel.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack47)
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)
Caused by line 207 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, virtualinvoke panel.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($stack47), 207)
Confluence interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Confluence flows from execution of lines 202 and 202 to line 219, defined in $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>() and $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>() and used in $stack35 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>()
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)
Caused by line 219 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack35 = interfaceinvoke partAlignment#18.<org.openpnp.gui.support.Wizard: javax.swing.JPanel getWizardPanel()>(), 219)
Confluence interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Confluence flows from execution of lines 202 and 202 to line 215, defined in $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>() and $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>() and used in partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part)
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)
Caused by line 215 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, partAlignment#18 = interfaceinvoke fiducialLocator#17.<org.openpnp.spi.FiducialLocator: org.openpnp.gui.support.Wizard getPartConfigurationWizard(org.openpnp.model.Part)>(part), 215)
Confluence interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Confluence flows from execution of lines 202 and 202 to line 208, defined in fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>() and $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>() and used in virtualinvoke $stack49.<javax.swing.JTabbedPane: java.awt.Component add(java.lang.String,java.awt.Component)>($stack50, $stack51)
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)
Caused by line 208 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, virtualinvoke $stack49.<javax.swing.JTabbedPane: java.awt.Component add(java.lang.String,java.awt.Component)>($stack50, $stack51), 208)
Confluence interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Confluence flows from execution of lines 202 and 202 to line 202, defined in $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>() and $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>() and used in $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>()
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82) => (<java.lang.Error: void <init>(java.lang.String)>, specialinvoke l0.<java.lang.Throwable: void <init>(java.lang.String)>(l1), 70)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openpnp/0713b6c46487e92a89d68780a39282cce8446abd/original-without-dependencies/openpnp-gui-0.0.1-alpha-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 1,42900
Runtime: 0.028s
OA interference in class PartsPanel$3, method void valueChanged(javax.swing.event.ListSelectionEvent), execution of line 202 overrides 214, assigning to variable Throwable.<java.lang.Throwable: java.lang.Object backtrace>, 
Caused by line 202 flow:
at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:202)
at org.openpnp.model.Configuration.get(Configuration.java:82)
at java.lang.Error.<init>(Error.java:70)
And line 214 flow:
at org.openpnp.gui.PartsPanel$3.valueChanged(PartsPanel$3.java:214)
at org.openpnp.model.Configuration.get(Configuration.java:82)
at java.lang.Error.<init>(Error.java:70)
 
Time to perform OA Inter 1,56400
OA Inter Visited methods: 11
 Analysis results
----------------------------
 Number of conflicts: 9
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openpnp/0713b6c46487e92a89d68780a39282cce8446abd/original-without-dependencies/openpnp-gui-0.0.1-alpha-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,95800
Time to perform DFP Inter 0,73100
Depth limit: 5
CONFLICTS: DF interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Data flows from execution of line 202 to 214, defined in $stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine> and propagated in $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>()
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)
Caused by line 214 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)
DF interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Empty list for reporting data flow! Error: head of empty list
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Data flows from execution of line 202 to 214, defined in $stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance> and propagated in $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>()
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)
Caused by line 214 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)
DF interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Data flows from execution of line 202 to 202, defined in $stack2 = new java.lang.Error and propagated in specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>("Configuration instance not yet initialized.")
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)
DF interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>("Configuration instance not yet initialized."),82,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82))), List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214))), List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,return $stack1,365,SinkNode, path: )), List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack0 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,81,SourceNode, path: ) => Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,if $stack0 != null goto $stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,81,SinkNode, path: )), List(Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,return $stack1,365,SinkNode, path: )), List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,return $stack1,84,SinkNode, path: )), List(Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,return $stack1,365,SinkNode, path: )), List(Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),214,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack28 = virtualinvoke $stack27.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 214)))]
Visited methods: 15
 Analysis results
----------------------------
 Number of conflicts: 8
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openpnp/0713b6c46487e92a89d68780a39282cce8446abd/original-without-dependencies/openpnp-gui-0.0.1-alpha-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,94700
Time to perform DFP Inter 0,64100
Depth limit: 5
CONFLICTS: DF interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Data flows from execution of line 202 to 202, defined in $stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine> and propagated in $stack26 = interfaceinvoke fiducialLocator.<java.util.Iterator: boolean hasNext()>()
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack26 = interfaceinvoke fiducialLocator.<java.util.Iterator: boolean hasNext()>(), 202)
DF interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Empty list for reporting data flow! Error: head of empty list
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Data flows from execution of line 202 to 202, defined in $stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance> and propagated in $stack26 = interfaceinvoke fiducialLocator.<java.util.Iterator: boolean hasNext()>()
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack26 = interfaceinvoke fiducialLocator.<java.util.Iterator: boolean hasNext()>(), 202)
DF interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Empty list for reporting data flow! Error: head of empty list
DF interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Data flows from execution of line 202 to 202, defined in $stack2 = new java.lang.Error and propagated in specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>("Configuration instance not yet initialized.")
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)
Caused by line 202 flow: path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)
DF interference in <org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>
Empty list for reporting data flow! Error: head of empty list
[List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack2 = new java.lang.Error,82,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82)) => Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>("Configuration instance not yet initialized."),82,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202) => (<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>, specialinvoke $stack2.<java.lang.Error: void <init>(java.lang.String)>('Configuration instance not yet initialized.'), 82))), List(Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),214,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack27 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 214)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,return $stack1,365,SinkNode, path: )), List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack26 = interfaceinvoke fiducialLocator.<java.util.Iterator: boolean hasNext()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack26 = interfaceinvoke fiducialLocator.<java.util.Iterator: boolean hasNext()>(), 202))), List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,this := @this: org.openpnp.model.Configuration,-1,SimpleNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,return $stack1,365,SinkNode, path: )), List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack0 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,81,SourceNode, path: ) => Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,if $stack0 != null goto $stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,81,SinkNode, path: )), List(Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack24 = interfaceinvoke $stack23.<org.openpnp.spi.Machine: java.util.List getPartAlignments()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, fiducialLocator = interfaceinvoke $stack24.<java.util.List: java.util.Iterator iterator()>(), 202)) => Node(<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>,$stack26 = interfaceinvoke fiducialLocator.<java.util.Iterator: boolean hasNext()>(),202,SinkNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack26 = interfaceinvoke fiducialLocator.<java.util.Iterator: boolean hasNext()>(), 202))), List(Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,$stack1 = <org.openpnp.model.Configuration: org.openpnp.model.Configuration instance>,84,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack22 = staticinvoke <org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.model.Configuration get()>,return $stack1,84,SinkNode, path: )), List(Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,$stack1 = this.<org.openpnp.model.Configuration: org.openpnp.spi.Machine machine>,365,SourceNode, path: (<org.openpnp.gui.PartsPanel$3: void valueChanged(javax.swing.event.ListSelectionEvent)>, $stack23 = virtualinvoke $stack22.<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>(), 202)) => Node(<org.openpnp.model.Configuration: org.openpnp.spi.Machine getMachine()>,return $stack1,365,SinkNode, path: ))]
Visited methods: 15
 Analysis results
----------------------------
 Number of conflicts: 8
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openpnp/0713b6c46487e92a89d68780a39282cce8446abd/original-without-dependencies/openpnp-gui-0.0.1-alpha-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,79600
Time to perform PDG 0,57200
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/openpnp/0713b6c46487e92a89d68780a39282cce8446abd/original-without-dependencies/openpnp-gui-0.0.1-alpha-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 1,16400
Time to perform PDG 0,61500
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
