Running soot scenario jjwt;io.jsonwebtoken.impl.DefaultJwtParser;parse(String);ff932e9838a9961f4084a51323092559e1a1ad25
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jjwt/ff932e9838a9961f4084a51323092559e1a1ad25/original-without-dependencies/jjwt-0.7.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,48400
Time to perform Confluence 1 Inter 1,66000
Configure Soot Confluence 2 Inter 0,29300
Time to perform Confluence 2 Inter 1,12200
Visited methods: 126
Depth limit: 5
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jjwt/ff932e9838a9961f4084a51323092559e1a1ad25/original-without-dependencies/jjwt-0.7.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,63000
Runtime: 0.122s
Time to perform OA Inter 0,95200
OA Inter Visited methods: 241
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jjwt/ff932e9838a9961f4084a51323092559e1a1ad25/original-without-dependencies/jjwt-0.7.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,48000
Time to perform DFP Inter 1,40600
Depth limit: 5
CONFLICTS: []
Visited methods: 63
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jjwt/ff932e9838a9961f4084a51323092559e1a1ad25/original-without-dependencies/jjwt-0.7.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,60800
Time to perform DFP Inter 1,33900
Depth limit: 5
CONFLICTS: []
Visited methods: 63
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jjwt/ff932e9838a9961f4084a51323092559e1a1ad25/original-without-dependencies/jjwt-0.7.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,64100
Time to perform PDG 1,19700
CONFLICTS: []
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/jjwt/ff932e9838a9961f4084a51323092559e1a1ad25/original-without-dependencies/jjwt-0.7.0-SNAPSHOT.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,52600
Time to perform PDG 1,19000
CONFLICTS: [List(Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tokenSeq = staticinvoke <io.jsonwebtoken.lang.Strings: java.lang.CharSequence clean(java.lang.CharSequence)>(sb),225,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, tokenSeq = staticinvoke <io.jsonwebtoken.lang.Strings: java.lang.CharSequence clean(java.lang.CharSequence)>(sb), 225)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if tokenSeq == null goto $stack198 = null,226,SourceNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack198 = null,236,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token = $stack198,226,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,base64UrlEncodedHeader = token,229,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, base64UrlEncodedHeader = token, 229)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedHeader == null goto (branch),258,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedDigest == null goto tmp$834153999 = new io.jsonwebtoken.impl.DefaultHeader,262,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg#17 = tmp$834153999,265,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg#17 = tmp$834153999, 265)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if msg#17 == null goto (branch),294,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg),296,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg), 296)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack151 == 0 goto (branch),296,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg),297,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg), 297)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375),346,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375), 346)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest),359,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest), 359)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack107 != 0 goto (branch),359,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if c#25 == null goto (branch),367,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(),376,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(), 376)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if validator#82 == null goto e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),377,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),393,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(), 393)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if e#83 == null goto specialinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>(msg#17, c#25),394,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack40 = virtualinvoke keyBytes#81.<java.util.Date: long getTime()>(),396,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack40 = virtualinvoke keyBytes#81.<java.util.Date: long getTime()>(), 396))), List(Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token = $stack198,226,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,base64UrlEncodedHeader = token,229,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, base64UrlEncodedHeader = token, 229)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedHeader == null goto (branch),258,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedDigest == null goto tmp$834153999 = new io.jsonwebtoken.impl.DefaultHeader,262,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg#17 = tmp$834153999,265,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg#17 = tmp$834153999, 265)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if msg#17 == null goto (branch),294,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg),296,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg), 296)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack151 == 0 goto (branch),296,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg),297,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg), 297)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375),346,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375), 346)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest),359,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest), 359)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack107 != 0 goto (branch),359,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if c#25 == null goto (branch),367,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tokenSeq#80 = $stack33 * 1000L,369,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, tokenSeq#80 = $stack33 * 1000L, 369))), List(Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token = $stack198,226,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,base64UrlEncodedHeader = token,229,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, base64UrlEncodedHeader = token, 229)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedHeader == null goto (branch),258,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedDigest == null goto tmp$834153999 = new io.jsonwebtoken.impl.DefaultHeader,262,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg#17 = tmp$834153999,265,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg#17 = tmp$834153999, 265)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if msg#17 == null goto (branch),294,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg),296,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg), 296)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack151 == 0 goto (branch),296,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg),297,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg), 297)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375),346,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375), 346)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest),359,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest), 359)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack107 != 0 goto (branch),359,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if c#25 == null goto (branch),367,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(),376,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(), 376)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if validator#82 == null goto e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),377,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),393,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(), 393)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if e#83 == null goto specialinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>(msg#17, c#25),394,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tmp$1211827856 = new java.util.Date,396,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, specialinvoke tmp$1211827856.<java.util.Date: void <init>(long)>($stack41), 396)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,algName#89 = tmp$1211827856,396,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, algName#89 = tmp$1211827856, 396)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack42 = virtualinvoke algName#89.<java.util.Date: boolean before(java.util.Date)>(e#83),397,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack42 = virtualinvoke algName#89.<java.util.Date: boolean before(java.util.Date)>(e#83), 397))), List(Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token = $stack198,226,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,base64UrlEncodedHeader = token,229,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, base64UrlEncodedHeader = token, 229)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedHeader == null goto (branch),258,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedDigest == null goto tmp$834153999 = new io.jsonwebtoken.impl.DefaultHeader,262,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg#17 = tmp$834153999,265,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg#17 = tmp$834153999, 265)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if msg#17 == null goto (branch),294,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg),296,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg), 296)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack151 == 0 goto (branch),296,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg),297,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg), 297)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375),346,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375), 346)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest),359,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest), 359)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack107 != 0 goto (branch),359,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if c#25 == null goto (branch),367,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(),376,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(), 376)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if validator#82 == null goto e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),377,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack63 != 0 goto tmp$854255346 = new java.text.SimpleDateFormat,380,SinkNode, path: )), List(Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tokenSeq = staticinvoke <io.jsonwebtoken.lang.Strings: java.lang.CharSequence clean(java.lang.CharSequence)>(sb),225,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, tokenSeq = staticinvoke <io.jsonwebtoken.lang.Strings: java.lang.CharSequence clean(java.lang.CharSequence)>(sb), 225)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if tokenSeq == null goto $stack198 = null,226,SourceNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack198 = null,236,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token = $stack198,226,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,base64UrlEncodedHeader = token,229,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, base64UrlEncodedHeader = token, 229)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedHeader == null goto (branch),258,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedDigest == null goto tmp$834153999 = new io.jsonwebtoken.impl.DefaultHeader,262,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg#17 = tmp$834153999,265,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg#17 = tmp$834153999, 265)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if msg#17 == null goto (branch),294,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg),296,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg), 296)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack151 == 0 goto (branch),296,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg),297,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg), 297)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375),346,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375), 346)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest),359,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest), 359)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack107 != 0 goto (branch),359,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if c#25 == null goto (branch),367,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tokenSeq#80 = $stack33 * 1000L,369,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, tokenSeq#80 = $stack33 * 1000L, 369))), List(Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tokenSeq = staticinvoke <io.jsonwebtoken.lang.Strings: java.lang.CharSequence clean(java.lang.CharSequence)>(sb),225,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, tokenSeq = staticinvoke <io.jsonwebtoken.lang.Strings: java.lang.CharSequence clean(java.lang.CharSequence)>(sb), 225)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if tokenSeq == null goto $stack198 = null,226,SourceNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack198 = null,236,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token = $stack198,226,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,base64UrlEncodedHeader = token,229,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, base64UrlEncodedHeader = token, 229)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedHeader == null goto (branch),258,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedDigest == null goto tmp$834153999 = new io.jsonwebtoken.impl.DefaultHeader,262,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg#17 = tmp$834153999,265,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg#17 = tmp$834153999, 265)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if msg#17 == null goto (branch),294,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg),296,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg), 296)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack151 == 0 goto (branch),296,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg),297,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg), 297)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375),346,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375), 346)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest),359,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest), 359)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack107 != 0 goto (branch),359,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if c#25 == null goto (branch),367,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(),376,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(), 376)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if validator#82 == null goto e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),377,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),393,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(), 393)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if e#83 == null goto specialinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>(msg#17, c#25),394,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tmp$1211827856 = new java.util.Date,396,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, specialinvoke tmp$1211827856.<java.util.Date: void <init>(long)>($stack41), 396)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,algName#89 = tmp$1211827856,396,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, algName#89 = tmp$1211827856, 396)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack42 = virtualinvoke algName#89.<java.util.Date: boolean before(java.util.Date)>(e#83),397,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack42 = virtualinvoke algName#89.<java.util.Date: boolean before(java.util.Date)>(e#83), 397)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack42 == 0 goto specialinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>(msg#17, c#25),397,SinkNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg = virtualinvoke alg#84.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(e#83),399,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg = virtualinvoke alg#84.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(e#83), 399)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack50 = virtualinvoke tmp$531576940.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JWT must not be accepted before "),402,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack50 = virtualinvoke tmp$531576940.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('JWT must not be accepted before '), 402)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msg),402,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msg), 402))), List(Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token = $stack198,226,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,base64UrlEncodedHeader = token,229,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, base64UrlEncodedHeader = token, 229)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedHeader == null goto (branch),258,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedDigest == null goto tmp$834153999 = new io.jsonwebtoken.impl.DefaultHeader,262,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg#17 = tmp$834153999,265,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg#17 = tmp$834153999, 265)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if msg#17 == null goto (branch),294,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg),296,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg), 296)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack151 == 0 goto (branch),296,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg),297,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg), 297)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375),346,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375), 346)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest),359,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest), 359)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack107 != 0 goto (branch),359,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if c#25 == null goto (branch),367,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(),376,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(), 376)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if validator#82 == null goto e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),377,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),393,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(), 393)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if e#83 == null goto specialinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>(msg#17, c#25),394,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tmp$1211827856 = new java.util.Date,396,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, specialinvoke tmp$1211827856.<java.util.Date: void <init>(long)>($stack41), 396)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,algName#89 = tmp$1211827856,396,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, algName#89 = tmp$1211827856, 396)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack42 = virtualinvoke algName#89.<java.util.Date: boolean before(java.util.Date)>(e#83),397,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack42 = virtualinvoke algName#89.<java.util.Date: boolean before(java.util.Date)>(e#83), 397)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack42 == 0 goto specialinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>(msg#17, c#25),397,SinkNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg = virtualinvoke alg#84.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(e#83),399,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg = virtualinvoke alg#84.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(e#83), 399)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack50 = virtualinvoke tmp$531576940.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JWT must not be accepted before "),402,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack50 = virtualinvoke tmp$531576940.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('JWT must not be accepted before '), 402)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msg),402,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(msg), 402))), List(Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token = $stack198,226,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,base64UrlEncodedHeader = token,229,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, base64UrlEncodedHeader = token, 229)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedHeader == null goto (branch),258,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedDigest == null goto tmp$834153999 = new io.jsonwebtoken.impl.DefaultHeader,262,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg#17 = tmp$834153999,265,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg#17 = tmp$834153999, 265)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if msg#17 == null goto (branch),294,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg),296,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg), 296)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack151 == 0 goto (branch),296,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg),297,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg), 297)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375),346,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375), 346)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest),359,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest), 359)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack107 != 0 goto (branch),359,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if c#25 == null goto (branch),367,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(),376,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(), 376)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if validator#82 == null goto e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),377,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tmp$1427020774 = new java.util.Date,379,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, specialinvoke tmp$1427020774.<java.util.Date: void <init>(long)>($stack62), 379))), List(Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tokenSeq = staticinvoke <io.jsonwebtoken.lang.Strings: java.lang.CharSequence clean(java.lang.CharSequence)>(sb),225,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, tokenSeq = staticinvoke <io.jsonwebtoken.lang.Strings: java.lang.CharSequence clean(java.lang.CharSequence)>(sb), 225)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if tokenSeq == null goto $stack198 = null,226,SourceNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack198 = null,236,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token = $stack198,226,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,base64UrlEncodedHeader = token,229,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, base64UrlEncodedHeader = token, 229)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedHeader == null goto (branch),258,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedDigest == null goto tmp$834153999 = new io.jsonwebtoken.impl.DefaultHeader,262,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg#17 = tmp$834153999,265,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg#17 = tmp$834153999, 265)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if msg#17 == null goto (branch),294,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg),296,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg), 296)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack151 == 0 goto (branch),296,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg),297,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg), 297)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375),346,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375), 346)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest),359,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest), 359)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack107 != 0 goto (branch),359,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if c#25 == null goto (branch),367,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(),376,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(), 376)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if validator#82 == null goto e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),377,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack63 != 0 goto tmp$854255346 = new java.text.SimpleDateFormat,380,SinkNode, path: )), List(Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token = $stack198,226,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,base64UrlEncodedHeader = token,229,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, base64UrlEncodedHeader = token, 229)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedHeader == null goto (branch),258,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedDigest == null goto tmp$834153999 = new io.jsonwebtoken.impl.DefaultHeader,262,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg#17 = tmp$834153999,265,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg#17 = tmp$834153999, 265)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if msg#17 == null goto (branch),294,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg),296,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg), 296)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack151 == 0 goto (branch),296,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg),297,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg), 297)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375),346,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375), 346)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest),359,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest), 359)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack107 != 0 goto (branch),359,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if c#25 == null goto (branch),367,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(),376,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(), 376)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if validator#82 == null goto e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),377,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),393,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(), 393)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if e#83 == null goto specialinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>(msg#17, c#25),394,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack40 = virtualinvoke keyBytes#81.<java.util.Date: long getTime()>(),396,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack40 = virtualinvoke keyBytes#81.<java.util.Date: long getTime()>(), 396))), List(Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token = $stack198,226,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,base64UrlEncodedHeader = token,229,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, base64UrlEncodedHeader = token, 229)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedHeader == null goto (branch),258,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedDigest == null goto tmp$834153999 = new io.jsonwebtoken.impl.DefaultHeader,262,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg#17 = tmp$834153999,265,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg#17 = tmp$834153999, 265)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if msg#17 == null goto (branch),294,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg),296,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg), 296)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack151 == 0 goto (branch),296,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg),297,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg), 297)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375),346,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375), 346)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest),359,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest), 359)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack107 != 0 goto (branch),359,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if c#25 == null goto (branch),367,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(),376,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(), 376)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if validator#82 == null goto e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),377,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack63 != 0 goto tmp$854255346 = new java.text.SimpleDateFormat,380,SinkNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Current time: "),385,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('. Current time: '), 385))), List(Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tokenSeq = staticinvoke <io.jsonwebtoken.lang.Strings: java.lang.CharSequence clean(java.lang.CharSequence)>(sb),225,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, tokenSeq = staticinvoke <io.jsonwebtoken.lang.Strings: java.lang.CharSequence clean(java.lang.CharSequence)>(sb), 225)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if tokenSeq == null goto $stack198 = null,226,SourceNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack198 = null,236,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token = $stack198,226,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,base64UrlEncodedHeader = token,229,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, base64UrlEncodedHeader = token, 229)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedHeader == null goto (branch),258,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedDigest == null goto tmp$834153999 = new io.jsonwebtoken.impl.DefaultHeader,262,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg#17 = tmp$834153999,265,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg#17 = tmp$834153999, 265)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if msg#17 == null goto (branch),294,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg),296,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg), 296)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack151 == 0 goto (branch),296,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg),297,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg), 297)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375),346,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375), 346)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest),359,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest), 359)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack107 != 0 goto (branch),359,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if c#25 == null goto (branch),367,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(),376,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(), 376)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if validator#82 == null goto e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),377,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack63 != 0 goto tmp$854255346 = new java.text.SimpleDateFormat,380,SinkNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Current time: "),385,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack70 = virtualinvoke $stack69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('. Current time: '), 385))), List(Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tokenSeq = staticinvoke <io.jsonwebtoken.lang.Strings: java.lang.CharSequence clean(java.lang.CharSequence)>(sb),225,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, tokenSeq = staticinvoke <io.jsonwebtoken.lang.Strings: java.lang.CharSequence clean(java.lang.CharSequence)>(sb), 225)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if tokenSeq == null goto $stack198 = null,226,SourceNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack198 = null,236,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token = $stack198,226,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,base64UrlEncodedHeader = token,229,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, base64UrlEncodedHeader = token, 229)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedHeader == null goto (branch),258,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedDigest == null goto tmp$834153999 = new io.jsonwebtoken.impl.DefaultHeader,262,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg#17 = tmp$834153999,265,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg#17 = tmp$834153999, 265)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if msg#17 == null goto (branch),294,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg),296,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg), 296)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack151 == 0 goto (branch),296,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg),297,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg), 297)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375),346,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375), 346)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest),359,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest), 359)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack107 != 0 goto (branch),359,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if c#25 == null goto (branch),367,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(),376,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(), 376)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if validator#82 == null goto e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),377,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tmp$1427020774 = new java.util.Date,379,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, specialinvoke tmp$1427020774.<java.util.Date: void <init>(long)>($stack62), 379))), List(Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tokenSeq = staticinvoke <io.jsonwebtoken.lang.Strings: java.lang.CharSequence clean(java.lang.CharSequence)>(sb),225,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, tokenSeq = staticinvoke <io.jsonwebtoken.lang.Strings: java.lang.CharSequence clean(java.lang.CharSequence)>(sb), 225)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if tokenSeq == null goto $stack198 = null,226,SourceNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack198 = null,236,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token = $stack198,226,SourceNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token = $stack198, 226)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,base64UrlEncodedHeader = token,229,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, base64UrlEncodedHeader = token, 229)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedHeader == null goto (branch),258,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if base64UrlEncodedDigest == null goto tmp$834153999 = new io.jsonwebtoken.impl.DefaultHeader,262,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,msg#17 = tmp$834153999,265,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, msg#17 = tmp$834153999, 265)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if msg#17 == null goto (branch),294,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg),296,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack151 = staticinvoke <io.jsonwebtoken.lang.Strings: boolean hasText(java.lang.String)>(alg), 296)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack151 == 0 goto (branch),296,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg),297,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, token#30 = staticinvoke <io.jsonwebtoken.SignatureAlgorithm: io.jsonwebtoken.SignatureAlgorithm forName(java.lang.String)>(alg), 297)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375),346,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator = virtualinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.impl.crypto.JwtSignatureValidator createSignatureValidator(io.jsonwebtoken.SignatureAlgorithm,java.security.Key)>(token#30, tmp$2118482375), 346)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest),359,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack107 = interfaceinvoke validator.<io.jsonwebtoken.impl.crypto.JwtSignatureValidator: boolean isValid(java.lang.String,java.lang.String)>(keyBytes#66, base64UrlEncodedDigest), 359)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if $stack107 != 0 goto (branch),359,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if c#25 == null goto (branch),367,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(),376,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, validator#82 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getExpiration()>(), 376)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if validator#82 == null goto e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),377,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(),393,SimpleNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, e#83 = interfaceinvoke c#25.<io.jsonwebtoken.Claims: java.util.Date getNotBefore()>(), 393)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,if e#83 == null goto specialinvoke this.<io.jsonwebtoken.impl.DefaultJwtParser: void validateExpectedClaims(io.jsonwebtoken.Header,io.jsonwebtoken.Claims)>(msg#17, c#25),394,SimpleNode, path: ) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,tmp$1211827856 = new java.util.Date,396,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, specialinvoke tmp$1211827856.<java.util.Date: void <init>(long)>($stack41), 396)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,algName#89 = tmp$1211827856,396,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, algName#89 = tmp$1211827856, 396)) => Node(<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>,$stack42 = virtualinvoke algName#89.<java.util.Date: boolean before(java.util.Date)>(e#83),397,SinkNode, path: (<io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>, $stack42 = virtualinvoke algName#89.<java.util.Date: boolean before(java.util.Date)>(e#83), 397)))]
 Analysis results
----------------------------
 Number of conflicts: 14
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
