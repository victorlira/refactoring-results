Running soot scenario pebble;com.mitchellbosecke.pebble.lexer.LexerImpl;lexExpression();b092f5eee672fdf7f8100336b35e37a9876f6f72
Running ConflictDetectionAlgorithm{name='Confluence Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/pebble/b092f5eee672fdf7f8100336b35e37a9876f6f72/original-without-dependencies/pebble-3.0.0-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot Confluence 1 Inter 0,90700
Time to perform Confluence 1 Inter 1,23800
Configure Soot Confluence 2 Inter 0,31700
Time to perform Confluence 2 Inter 0,75600
Visited methods: 92
Depth limit: 5
CONFLICTS: [SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack100 = virtualinvoke $stack99.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),482,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack100 = virtualinvoke $stack99.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 482)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke $stack92.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack98, $stack100, $stack102),483,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke $stack92.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack98, $stack100, $stack102), 483))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack100 = virtualinvoke $stack99.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),482,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack100 = virtualinvoke $stack99.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 482)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke $stack92.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack98, $stack100, $stack102),483,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke $stack92.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack98, $stack100, $stack102), 483)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack128 = $stack127 - 1,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack128 = $stack127 - 1, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if $stack12 == 0 goto $stack6 = new com.mitchellbosecke.pebble.lexer.Token,621,SinkNode, path: )
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if $stack12 == 0 goto $stack6 = new com.mitchellbosecke.pebble.lexer.Token,621,SinkNode, path: ), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135),436,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135), 436)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135),436,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135), 436)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if value == null goto return null,626,SinkNode, path: )
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if value == null goto return null,626,SinkNode, path: ), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 445)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,this := @this: com.mitchellbosecke.pebble.lexer.TemplateSource,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack6 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack6 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7),197,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,return $stack2,197,SinkNode, path: ), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack130 = <com.mitchellbosecke.pebble.lexer.Token$Type: com.mitchellbosecke.pebble.lexer.Token$Type LONG>,446,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack130, token), 446)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,type := @parameter0: com.mitchellbosecke.pebble.lexer.Token$Type,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack8 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1969))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack8 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, $stack8 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack9 = lengthof $stack8,1969,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, $stack9 = lengthof $stack8, 1969)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>('\\\\(\')', '$1'), 530)) => Node(<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>,$stack4 = virtualinvoke $stack3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0),2223,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>('\\\\(\')', '$1'), 530) => (<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>, $stack4 = virtualinvoke $stack3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0), 2223))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>('\\\\(\')', '$1'), 530)) => Node(<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>,$stack4 = virtualinvoke $stack3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0),2223,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>('\\\\(\')', '$1'), 530) => (<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>, $stack4 = virtualinvoke $stack3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0), 2223)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack130 = <com.mitchellbosecke.pebble.lexer.Token$Type: com.mitchellbosecke.pebble.lexer.Token$Type LONG>,446,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack130, token), 446)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,type := @parameter0: com.mitchellbosecke.pebble.lexer.Token$Type,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack5 = $stack4[$stack3],207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack111 = virtualinvoke $stack110.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),472,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack111 = virtualinvoke $stack110.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 472)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke $stack103.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack109, $stack111, $stack113),473,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke $stack103.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack109, $stack111, $stack113), 473))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack5 = $stack4[$stack3],207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack106 = virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected \""),472,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack106 = virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Unexpected \''), 472)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(character),472,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(character), 472)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack108 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\""),472,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack108 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\''), 472)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack109 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.String toString()>(),472,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack109 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.String toString()>(), 472)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke $stack103.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack109, $stack111, $stack113),473,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke $stack103.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack109, $stack111, $stack113), 473)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack11 = "",621,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135),436,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135), 436)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if value == null goto return null,626,SinkNode, path: )
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if value == null goto return null,626,SinkNode, path: ), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack53 = virtualinvoke $stack50.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),506,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack53 = virtualinvoke $stack50.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 506)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack11 = "",621,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack5 = $stack4[$stack3],207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack100 = virtualinvoke $stack99.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),482,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack100 = virtualinvoke $stack99.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 482))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack100 = virtualinvoke $stack99.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),482,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack100 = virtualinvoke $stack99.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 482)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>('\\\\(\')', '$1'), 530)) => Node(<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>,$stack4 = virtualinvoke $stack3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0),2223,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>('\\\\(\')', '$1'), 530) => (<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>, $stack4 = virtualinvoke $stack3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0), 2223))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>('\\\\(\')', '$1'), 530)) => Node(<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>,$stack4 = virtualinvoke $stack3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0),2223,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>('\\\\(\')', '$1'), 530) => (<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>, $stack4 = virtualinvoke $stack3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(l0), 2223)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack53 = virtualinvoke $stack50.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),506,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack53 = virtualinvoke $stack50.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 506)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token),499,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token), 499))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token),499,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token), 499)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 445)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,this := @this: com.mitchellbosecke.pebble.lexer.TemplateSource,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack6 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack6 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<java.lang.String: void <init>(char[])>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,specialinvoke l0.<java.lang.Object: void <init>()>(),165,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, specialinvoke l0.<java.lang.Object: void <init>()>(), 165))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<java.lang.String: void <init>(char[])>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,specialinvoke l0.<java.lang.Object: void <init>()>(),165,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, specialinvoke l0.<java.lang.Object: void <init>()>(), 165)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0), 523)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0), 523) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0), 523)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0), 523) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack128 = $stack127 - 1,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack128 = $stack127 - 1, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if $stack12 == 0 goto $stack6 = new com.mitchellbosecke.pebble.lexer.Token,621,SinkNode, path: )
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack5 = $stack4[$stack3],207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if $stack12 == 0 goto $stack6 = new com.mitchellbosecke.pebble.lexer.Token,621,SinkNode, path: ), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token),499,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token), 499))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token),499,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token), 499)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0), 523)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0), 523) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0), 523)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0), 523) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0), 523)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token),499,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token), 499))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token),499,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token), 499)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack130 = <com.mitchellbosecke.pebble.lexer.Token$Type: com.mitchellbosecke.pebble.lexer.Token$Type LONG>,446,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack130, token), 446)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,type := @parameter0: com.mitchellbosecke.pebble.lexer.Token$Type,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack5 = lengthof $stack4,1962,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, $stack5 = lengthof $stack4, 1962)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack128 = $stack127 - 1,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack128 = $stack127 - 1, 445)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<java.lang.String: void <init>(char[])>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,l0.<java.lang.String: char[] value> = $stack3,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, l0.<java.lang.String: char[] value> = $stack3, 166))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack128 = $stack127 - 1,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack128 = $stack127 - 1, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if $stack12 == 0 goto $stack6 = new com.mitchellbosecke.pebble.lexer.Token,621,SinkNode, path: )
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if $stack12 == 0 goto $stack6 = new com.mitchellbosecke.pebble.lexer.Token,621,SinkNode, path: ), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack128 = $stack127 - 1,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack128 = $stack127 - 1, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if $stack12 == 0 goto $stack6 = new com.mitchellbosecke.pebble.lexer.Token,621,SinkNode, path: )
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if $stack12 == 0 goto $stack6 = new com.mitchellbosecke.pebble.lexer.Token,621,SinkNode, path: ), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack11 = "",621,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack111 = virtualinvoke $stack110.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),472,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack111 = virtualinvoke $stack110.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 472))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack5 = $stack4[$stack3],207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack106 = virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected \""),472,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack106 = virtualinvoke $stack104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Unexpected \''), 472)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(character),472,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack107 = virtualinvoke $stack106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(character), 472)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack108 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\""),472,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack108 = virtualinvoke $stack107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('\''), 472)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack109 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.String toString()>(),472,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack109 = virtualinvoke $stack108.<java.lang.StringBuilder: java.lang.String toString()>(), 472)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack128 = $stack127 - 1,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack128 = $stack127 - 1, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack5 = $stack4[$stack3],207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack10 = lengthof $stack9,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack10 = lengthof $stack9, 983)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack128 = $stack127 - 1,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack128 = $stack127 - 1, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack10 = lengthof $stack9,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack10 = lengthof $stack9, 983)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack130 = <com.mitchellbosecke.pebble.lexer.Token$Type: com.mitchellbosecke.pebble.lexer.Token$Type LONG>,446,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack130, token), 446)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,type := @parameter0: com.mitchellbosecke.pebble.lexer.Token$Type,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack130 = <com.mitchellbosecke.pebble.lexer.Token$Type: com.mitchellbosecke.pebble.lexer.Token$Type LONG>,446,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack130, token), 446)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,type := @parameter0: com.mitchellbosecke.pebble.lexer.Token$Type,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack11 = "",621,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack5 = $stack4[$stack3],207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack11 = "",621,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l4 = l0.<java.lang.String: char[] value>,984,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l4 = l0.<java.lang.String: char[] value>, 984)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack14 = l4[l6],988,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack14 = l4[l6], 988))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack13 = l5[l6],988,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack13 = l5[l6], 988)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack128 = $stack127 - 1,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack128 = $stack127 - 1, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if $stack12 == 0 goto $stack6 = new com.mitchellbosecke.pebble.lexer.Token,621,SinkNode, path: )
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if $stack12 == 0 goto $stack6 = new com.mitchellbosecke.pebble.lexer.Token,621,SinkNode, path: ), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack4 = lengthof l1,204,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack4 = lengthof l1, 204))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack4 = lengthof l1,204,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack4 = lengthof l1, 204)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack46 = virtualinvoke $stack45.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),514,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack46 = virtualinvoke $stack45.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 514)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke $stack36.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack44, $stack46, $stack48),514,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke $stack36.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack44, $stack46, $stack48), 514))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack46 = virtualinvoke $stack45.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),514,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack46 = virtualinvoke $stack45.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 514)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token),499,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token), 499))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token),499,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token), 499)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack128 = $stack127 - 1,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack128 = $stack127 - 1, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack10 = lengthof $stack9,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack10 = lengthof $stack9, 983)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,$stack4 = l0 + 128,831,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, $stack4 = l0 + 128, 831)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack53 = virtualinvoke $stack50.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),506,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack53 = virtualinvoke $stack50.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 506)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: void <init>(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)) => Node(<java.lang.Integer: void <init>(int)>,l0.<java.lang.Integer: int value> = l1,850,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832) => (<java.lang.Integer: void <init>(int)>, l0.<java.lang.Integer: int value> = l1, 850)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack5 = $stack4[$stack3],207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack130 = <com.mitchellbosecke.pebble.lexer.Token$Type: com.mitchellbosecke.pebble.lexer.Token$Type LONG>,446,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack130, token), 446)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,type := @parameter0: com.mitchellbosecke.pebble.lexer.Token$Type,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),623,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135),436,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135), 436)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if value == null goto return null,626,SinkNode, path: )
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if value == null goto return null,626,SinkNode, path: ), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token),499,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token), 499))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token),499,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack64, token), 499)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135),436,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135), 436)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if value == null goto return null,626,SinkNode, path: )
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if value == null goto return null,626,SinkNode, path: ), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack128 = $stack127 - 1,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack128 = $stack127 - 1, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack10 = lengthof $stack9,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack10 = lengthof $stack9, 983)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack111 = virtualinvoke $stack110.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),472,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack111 = virtualinvoke $stack110.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 472)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke $stack103.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack109, $stack111, $stack113),473,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke $stack103.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack109, $stack111, $stack113), 473))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack111 = virtualinvoke $stack110.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),472,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack111 = virtualinvoke $stack110.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 472)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke $stack103.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack109, $stack111, $stack113),473,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke $stack103.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack109, $stack111, $stack113), 473)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135),436,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135), 436)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135),436,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135), 436)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack128 = $stack127 - 1,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack128 = $stack127 - 1, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if $stack12 == 0 goto $stack6 = new com.mitchellbosecke.pebble.lexer.Token,621,SinkNode, path: )
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if $stack12 == 0 goto $stack6 = new com.mitchellbosecke.pebble.lexer.Token,621,SinkNode, path: ), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack128 = $stack127 - 1,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack128 = $stack127 - 1, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack9 = l2.<java.lang.String: char[] value>,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack9 = l2.<java.lang.String: char[] value>, 983)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack10 = lengthof $stack9,983,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack10 = lengthof $stack9, 983)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack111 = virtualinvoke $stack110.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),472,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack111 = virtualinvoke $stack110.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 472))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack111 = virtualinvoke $stack110.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),472,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack111 = virtualinvoke $stack110.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 472)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135),436,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135), 436)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if value == null goto return null,626,SinkNode, path: )
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if value == null goto return null,626,SinkNode, path: ), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack10 = lengthof l1,198,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack10 = lengthof l1, 198))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack10 = lengthof l1,198,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6), 526) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack10 = lengthof l1, 198)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,$stack7 = l1 instanceof java.lang.String,980,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, $stack7 = l1 instanceof java.lang.String, 980)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135),436,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135), 436)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135),436,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135), 436)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if value == null goto return null,626,SinkNode, path: )
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack5 = $stack4[$stack3],207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,if value == null goto return null,626,SinkNode, path: ), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<java.lang.Integer: java.lang.Integer valueOf(int)>,specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0),832,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466) => (<java.lang.Integer: java.lang.Integer valueOf(int)>, specialinvoke $stack1.<java.lang.Integer: void <init>(int)>(l0), 832)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack3 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack2 = lengthof l1,166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack2 = lengthof l1, 166)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135),436,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack134.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack135), 436)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack5 = $stack4[$stack3],207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l5 = l2.<java.lang.String: char[] value>,985,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l5 = l2.<java.lang.String: char[] value>, 985)), SOURCE=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack126 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981))
SINK=>BASE: Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l1 := @parameter0: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)) => Node(<java.lang.String: boolean equals(java.lang.Object)>,l2 = (java.lang.String) l1,981,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621) => (<java.lang.String: boolean equals(java.lang.Object)>, l2 = (java.lang.String) l1, 981))]
Confluence interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Confluence flows from execution of lines 428 and 428 to line 483, defined in specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token) and specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token) and used in specialinvoke $stack92.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack98, $stack100, $stack102)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)
Caused by line 483 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke $stack92.<com.mitchellbosecke.pebble.error.ParserException: void <init>(java.lang.Throwable,java.lang.String,int,java.lang.String)>(null, $stack98, $stack100, $stack102), 483)
java.util.NoSuchElementException: head of empty list
	at scala.collection.immutable.Nil$.head(List.scala:430)
	at scala.collection.immutable.Nil$.head(List.scala:427)
	at scala.collection.generic.TraversableForwarder.head(TraversableForwarder.scala:59)
	at scala.collection.generic.TraversableForwarder.head$(TraversableForwarder.scala:59)
	at scala.collection.mutable.ListBuffer.head(ListBuffer.scala:47)
	at br.unb.cic.analysis.svfa.confluence.DFPConfluenceAnalysis.reportConflictsConfluence(DFPConfluenceAnalysis.java:181)
	at br.unb.cic.analysis.Main.runDFPConfluenceAnalysis(Main.java:566)
	at br.unb.cic.analysis.Main.runAnalysis(Main.java:243)
	at br.unb.cic.analysis.Main.main(Main.java:80)
Running ConflictDetectionAlgorithm{name='OA Inter'}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/pebble/b092f5eee672fdf7f8100336b35e37a9876f6f72/original-without-dependencies/pebble-3.0.0-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Depth limit: 5
Configure Soot OA Inter 0,79800
Runtime: 0.156s
Time to perform OA Inter 1,14800
OA Inter Visited methods: 93
 Analysis results
----------------------------
 No conflicts detected
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/pebble/b092f5eee672fdf7f8100336b35e37a9876f6f72/original-without-dependencies/pebble-3.0.0-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,92900
Time to perform DFP Inter 1,04100
Depth limit: 5
CONFLICTS: DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 427 to 498, defined in $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset> and propagated in $stack5 = virtualinvoke str.<java.lang.String: int length()>()
Caused by line 427 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 443 to 429, defined in matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16) and propagated in $stack5 = $stack4 - amount
Caused by line 443 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)
Caused by line 429 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack146.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>($stack147), 429) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>, $stack5 = $stack4 - amount, 143)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 427 to 498, defined in $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset> and propagated in token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token)
Caused by line 427 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 427 to 498, defined in $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset> and propagated in quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0)
Caused by line 427 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0), 523)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 428 to 466, defined in $stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber> and propagated in this.<com.mitchellbosecke.pebble.utils.Pair: java.lang.Object right> = right
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)
Caused by line 466 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke $stack114.<com.mitchellbosecke.pebble.utils.Pair: void <init>(java.lang.Object,java.lang.Object)>(character, $stack118), 466) => (<com.mitchellbosecke.pebble.utils.Pair: void <init>(java.lang.Object,java.lang.Object)>, this.<com.mitchellbosecke.pebble.utils.Pair: java.lang.Object right> = right, 24)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 428 to 466, defined in $stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber> and propagated in $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>()
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)
Caused by line 466 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 427 to 498, defined in $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset> and propagated in str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1")
Caused by line 427 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 443 to 429, defined in matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16) and propagated in $stack7 = $stack6 + amount
Caused by line 443 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)
Caused by line 429 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack146.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>($stack147), 429) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>, $stack7 = $stack6 + amount, 144)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 443 to 447, defined in matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16) and propagated in virtualinvoke $stack132.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>($stack133)
Caused by line 443 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)
Caused by line 447 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack132.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>($stack133), 447)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 427 to 498, defined in $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset> and propagated in str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1")
Caused by line 427 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 428 to 506, defined in $stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber> and propagated in $stack54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack53)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)
Caused by line 506 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack53), 506)
[List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack5 = virtualinvoke str.<java.lang.String: int length()>(),526,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack133 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),447,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack133 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 447)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,virtualinvoke $stack132.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>($stack133),447,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack132.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>($stack133), 447))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack133 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),447,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack133 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 447)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>,amount := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack146.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>($stack147), 429)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>,$stack7 = $stack6 + amount,144,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack146.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>($stack147), 429) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>, $stack7 = $stack6 + amount, 144))), List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498))), List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack53 = virtualinvoke $stack50.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),506,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack53 = virtualinvoke $stack50.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 506)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack53),506,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack53), 506))), List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0), 523)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0), 523) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0), 523)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0),523,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, quotationType = virtualinvoke str.<java.lang.String: char charAt(int)>(0), 523))), List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466))), List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack5 = virtualinvoke str.<java.lang.String: int length()>(),526,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498))), List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,return $stack1,220,SinkNode, path: )), List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),466,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack117 = virtualinvoke $stack115.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 466)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117),466,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack118 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($stack117), 466)) => Node(<com.mitchellbosecke.pebble.utils.Pair: void <init>(java.lang.Object,java.lang.Object)>,right := @parameter1: java.lang.Object,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke $stack114.<com.mitchellbosecke.pebble.utils.Pair: void <init>(java.lang.Object,java.lang.Object)>(character, $stack118), 466)) => Node(<com.mitchellbosecke.pebble.utils.Pair: void <init>(java.lang.Object,java.lang.Object)>,this.<com.mitchellbosecke.pebble.utils.Pair: java.lang.Object right> = right,24,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke $stack114.<com.mitchellbosecke.pebble.utils.Pair: void <init>(java.lang.Object,java.lang.Object)>(character, $stack118), 466) => (<com.mitchellbosecke.pebble.utils.Pair: void <init>(java.lang.Object,java.lang.Object)>, this.<com.mitchellbosecke.pebble.utils.Pair: java.lang.Object right> = right, 24))), List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack5 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int offset>, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<java.lang.String: void <init>(char[])>,l1 := @parameter0: char[],-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)) => Node(<java.lang.String: void <init>(char[])>,$stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2),166,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197) => (<java.lang.String: void <init>(char[])>, $stack3 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(l1, $stack2), 166)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack2 = new java.lang.String,197,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack5 = virtualinvoke str.<java.lang.String: int length()>(),526,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack7 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,623,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack7 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 623)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,this := @this: com.mitchellbosecke.pebble.lexer.TemplateSource,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,return $stack1,220,SinkNode, path: )), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack133 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),447,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack133 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 447)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>,amount := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack146.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>($stack147), 429)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>,$stack5 = $stack4 - amount,143,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack146.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>($stack147), 429) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advance(int)>, $stack5 = $stack4 - amount, 143)))]
Visited methods: 46
 Analysis results
----------------------------
 Number of conflicts: 13
 Results exported to out.txt
Error getting the previous content of the JSON file out.json
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = DFP-Inter}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/pebble/b092f5eee672fdf7f8100336b35e37a9876f6f72/original-without-dependencies/pebble-3.0.0-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot DFP Inter 0,98200
Time to perform DFP Inter 1,12600
Depth limit: 5
CONFLICTS: DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 494 to 428, defined in $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source> and propagated in this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value
Caused by line 494 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623) => (<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>, this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value, 27)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 498 to 428, defined in token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token) and propagated in $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value)
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 418 to 428, defined in $stack4 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source> and propagated in this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value
Caused by line 418 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>, $stack4 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source>, 207)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623) => (<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>, this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value, 27)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 498 to 428, defined in str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1") and propagated in specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8)
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 418 to 428, defined in $stack4 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source> and propagated in specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8)
Caused by line 418 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>, $stack4 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source>, 207)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 498 to 428, defined in $stack5 = virtualinvoke str.<java.lang.String: int length()>() and propagated in $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value)
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 498 to 428, defined in $stack5 = virtualinvoke str.<java.lang.String: int length()>() and propagated in specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8)
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 418 to 428, defined in $stack4 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source> and propagated in $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value)
Caused by line 418 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>, $stack4 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source>, 207)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 494 to 428, defined in $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source> and propagated in specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8)
Caused by line 494 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 494 to 428, defined in $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source> and propagated in $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value)
Caused by line 494 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 498 to 428, defined in str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1") and propagated in specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8)
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 498 to 428, defined in str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1") and propagated in $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value)
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 494 to 427, defined in $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source> and propagated in specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7)
Caused by line 494 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)
Caused by line 427 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 498 to 428, defined in token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token) and propagated in specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8)
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 498 to 428, defined in $stack5 = virtualinvoke str.<java.lang.String: int length()>() and propagated in this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623) => (<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>, this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value, 27)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 498 to 428, defined in token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token) and propagated in this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623) => (<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>, this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value, 27)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 428 to 428, defined in $stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber> and propagated in $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>()
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 428 to 428, defined in $stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber> and propagated in this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber> = lineNumber
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623) => (<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>, this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber> = lineNumber, 28)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Empty list for reporting data flow! Error: head of empty list
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 498 to 428, defined in str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1") and propagated in $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value)
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 498 to 428, defined in str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1") and propagated in this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623) => (<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>, this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value, 27)
DF interference in <com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>
Data flows from execution of line 498 to 428, defined in str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1") and propagated in this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value
Caused by line 498 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)
Caused by line 428 flow: path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623) => (<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>, this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value, 27)
[List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>,lineNumber := @parameter2: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)) => Node(<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>,this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber> = lineNumber,28,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623) => (<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>, this.<com.mitchellbosecke.pebble.lexer.Token: int lineNumber> = lineNumber, 28))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack5 = virtualinvoke str.<java.lang.String: int length()>(),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack5 = virtualinvoke str.<java.lang.String: int length()>(),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)) => Node(<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>,this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value,27,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623) => (<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>, this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value, 27))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack5 = virtualinvoke str.<java.lang.String: int length()>(),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack5 = virtualinvoke str.<java.lang.String: int length()>(),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623))), List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack4 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source>,207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>, $stack4 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source>, 207)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack5 = $stack4[$stack3],207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),462,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack115 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,466,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack115 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 466)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,this := @this: com.mitchellbosecke.pebble.lexer.TemplateSource,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,return $stack1,220,SinkNode, path: )), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621))), List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack4 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source>,207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>, $stack4 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source>, 207)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack5 = $stack4[$stack3],207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),462,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)) => Node(<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>,this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value,27,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623) => (<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>, this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value, 27))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value),621,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack12 = virtualinvoke $stack11.<java.lang.String: boolean equals(java.lang.Object)>(value), 621))), List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,$stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str := @parameter0: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack5 = virtualinvoke str.<java.lang.String: int length()>(),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)) => Node(<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>,this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value,27,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623) => (<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>, this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value, 27))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack59 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 496)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,end := @parameter0: int,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack4 = $stack3 + end,197,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack4 = $stack3 + end, 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4),197,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>($stack6, $stack5, $stack4), 197)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>,specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7),197,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack141.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack142), 427) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>, specialinvoke $stack2.<java.lang.String: void <init>(char[])>($stack7), 197))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)) => Node(<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>,this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value,27,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623) => (<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>, this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value, 27))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack50 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,506,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack50 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 506)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,this := @this: com.mitchellbosecke.pebble.lexer.TemplateSource,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,return $stack1,220,SinkNode, path: )), List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,$stack1 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: int lineNumber>,220,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, $stack8 = virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 623)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>,return $stack1,220,SinkNode, path: )), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\")", "$1"),532,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)) => Node(<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>,this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value,27,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623) => (<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>, this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value, 27))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)) => Node(<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>,this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value,27,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623) => (<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>, this.<com.mitchellbosecke.pebble.lexer.Token: java.lang.String value> = value, 27))), List(Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack4 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source>,207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>, $stack4 = this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char[] source>, 207)) => Node(<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>,$stack5 = $stack4[$stack3],207,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, virtualinvoke $stack7.<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>(), 418) => (<com.mitchellbosecke.pebble.lexer.TemplateSource: void advanceThroughWhitespace()>, $stack3 = virtualinvoke this.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(index), 150)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),462,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack67 = virtualinvoke $stack66.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack5 = virtualinvoke str.<java.lang.String: int length()>(),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack5 = virtualinvoke str.<java.lang.String: int length()>(), 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,$stack6 = $stack5 - 1,526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>, $stack6 = $stack5 - 1, 526)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str.<java.lang.String: java.lang.String substring(int,int)>(1, $stack6),526,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>,str#2 = virtualinvoke str#2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\\\(\')", "$1"),530,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,value := @parameter1: java.lang.String,-1,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>,specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8),623,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack144, token), 428) => (<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>, specialinvoke $stack6.<com.mitchellbosecke.pebble.lexer.Token: void <init>(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String,int)>(type, value, $stack8), 623)))]
Visited methods: 46
 Analysis results
----------------------------
 Number of conflicts: 24
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running left right NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/pebble/b092f5eee672fdf7f8100336b35e37a9876f6f72/original-without-dependencies/pebble-3.0.0-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,82500
Time to perform PDG 1,03200
CONFLICTS: [List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20),452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),453,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 453)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack23 == 0 goto $stack25 = "()[]{}?:.,|=",453,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack27 < 0 goto $stack29 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_STRING_PLAIN>,461,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),495,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 495)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack31 == 0 goto $stack33 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_DOUBLEQUOTE>,495,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack33 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_DOUBLEQUOTE>,504,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack32), 504)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack32),504,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack32), 504)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack35 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),505,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack35 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 505)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack35 == 0 goto $stack36 = new com.mitchellbosecke.pebble.error.ParserException,505,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack55 = <com.mitchellbosecke.pebble.lexer.LexerImpl$State: com.mitchellbosecke.pebble.lexer.LexerImpl$State STRING>,507,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: void pushState(com.mitchellbosecke.pebble.lexer.LexerImpl$State)>($stack55), 507))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack132 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,447,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack132 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 447))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20),452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),453,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 453)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack23 == 0 goto $stack25 = "()[]{}?:.,|=",453,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack27 < 0 goto $stack29 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_STRING_PLAIN>,461,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),495,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 495)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack31 == 0 goto $stack33 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_DOUBLEQUOTE>,495,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack33 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_DOUBLEQUOTE>,504,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack32), 504)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack32),504,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack32), 504)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack35 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),505,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack35 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 505)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack35 == 0 goto $stack36 = new com.mitchellbosecke.pebble.error.ParserException,505,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack55 = <com.mitchellbosecke.pebble.lexer.LexerImpl$State: com.mitchellbosecke.pebble.lexer.LexerImpl$State STRING>,507,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: void pushState(com.mitchellbosecke.pebble.lexer.LexerImpl$State)>($stack55), 507))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20),452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),453,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 453)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack23 == 0 goto $stack25 = "()[]{}?:.,|=",453,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack27 < 0 goto $stack29 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_STRING_PLAIN>,461,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack70 = virtualinvoke $stack69.<java.lang.String: int indexOf(java.lang.String)>(character),465,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack70 = virtualinvoke $stack69.<java.lang.String: int indexOf(java.lang.String)>(character), 465)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack70 < 0 goto $stack71 = ")]}",465,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack114 = new com.mitchellbosecke.pebble.utils.Pair,466,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke $stack114.<com.mitchellbosecke.pebble.utils.Pair: void <init>(java.lang.Object,java.lang.Object)>(character, $stack118), 466))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20),452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),453,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 453)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack23 == 0 goto $stack25 = "()[]{}?:.,|=",453,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack27 < 0 goto $stack29 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_STRING_PLAIN>,461,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20),452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),453,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 453)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack23 == 0 goto $stack25 = "()[]{}?:.,|=",453,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack27 < 0 goto $stack29 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_STRING_PLAIN>,461,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),495,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 495)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack31 == 0 goto $stack33 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_DOUBLEQUOTE>,495,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack58 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack58 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20),452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),453,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 453)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack23 == 0 goto $stack25 = "()[]{}?:.,|=",453,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack27 < 0 goto $stack29 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_STRING_PLAIN>,461,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),495,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 495)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack31 == 0 goto $stack33 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_DOUBLEQUOTE>,495,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack33 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_DOUBLEQUOTE>,504,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack32), 504)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack32),504,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack32), 504)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack35 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),505,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack35 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 505)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack35 == 0 goto $stack36 = new com.mitchellbosecke.pebble.error.ParserException,505,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack53 = virtualinvoke $stack50.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),506,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack53 = virtualinvoke $stack50.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 506))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20),452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),453,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 453)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack23 == 0 goto $stack25 = "()[]{}?:.,|=",453,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack27 < 0 goto $stack29 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_STRING_PLAIN>,461,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),495,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 495)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack31 == 0 goto $stack33 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_DOUBLEQUOTE>,495,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack33 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_DOUBLEQUOTE>,504,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack32), 504))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20),452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),453,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 453)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack23 == 0 goto $stack25 = "()[]{}?:.,|=",453,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack27 < 0 goto $stack29 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_STRING_PLAIN>,461,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67),462,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, character = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($stack67), 462)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack70 = virtualinvoke $stack69.<java.lang.String: int indexOf(java.lang.String)>(character),465,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack70 = virtualinvoke $stack69.<java.lang.String: int indexOf(java.lang.String)>(character), 465)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack70 < 0 goto $stack71 = ")]}",465,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack114 = new com.mitchellbosecke.pebble.utils.Pair,466,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke $stack114.<com.mitchellbosecke.pebble.utils.Pair: void <init>(java.lang.Object,java.lang.Object)>(character, $stack118), 466))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20),452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),453,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 453)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack23 == 0 goto $stack25 = "()[]{}?:.,|=",453,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack27 < 0 goto $stack29 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_STRING_PLAIN>,461,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),495,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 495)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack31 == 0 goto $stack33 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_DOUBLEQUOTE>,495,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack33 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_DOUBLEQUOTE>,504,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack32), 504))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20),452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),453,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 453)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack23 == 0 goto $stack25 = "()[]{}?:.,|=",453,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack27 < 0 goto $stack29 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_STRING_PLAIN>,461,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),495,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 495)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack31 == 0 goto $stack33 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_DOUBLEQUOTE>,495,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack33 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_DOUBLEQUOTE>,504,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack32), 504)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack32),504,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack33.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack32), 504)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack35 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),505,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack35 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 505)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack35 == 0 goto $stack36 = new com.mitchellbosecke.pebble.error.ParserException,505,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack53 = virtualinvoke $stack50.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(),506,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack53 = virtualinvoke $stack50.<com.mitchellbosecke.pebble.lexer.TemplateSource: int getLineNumber()>(), 506))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack132 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,447,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack132 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 447))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20),452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),453,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 453)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack23 == 0 goto $stack25 = "()[]{}?:.,|=",453,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack27 < 0 goto $stack29 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_STRING_PLAIN>,461,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28),494,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack29.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack28), 494)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),495,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack31 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 495)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack31 == 0 goto $stack33 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_DOUBLEQUOTE>,495,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack58 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack58 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59),496,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack58.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack59), 496)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token),498,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: java.lang.String unquoteAndUnescape(java.lang.String)>(token), 498))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack17 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_LONG>,443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16),443,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack17.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack16), 443)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20),452,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, matcher = virtualinvoke $stack21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($stack20), 452)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),453,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack23 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 453)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack23 == 0 goto $stack25 = "()[]{}?:.,|=",453,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack26 = virtualinvoke $stack24.<com.mitchellbosecke.pebble.lexer.TemplateSource: char charAt(int)>(0), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26),461,SimpleNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack27 = virtualinvoke $stack25.<java.lang.String: int indexOf(int)>($stack26), 461)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack27 < 0 goto $stack29 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_STRING_PLAIN>,461,SimpleNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>,494,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack28 = this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.TemplateSource source>, 494)))]
 Analysis results
----------------------------
 Number of conflicts: 14
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
Running right left NonCommutativeConflictDetectionAlgorithm{name = PDG}
Using jar at /home/victorlira/Documents/experiment/miningframework/output/files/pebble/b092f5eee672fdf7f8100336b35e37a9876f6f72/original-without-dependencies/pebble-3.0.0-SNAPSHOT-jar-with-dependencies.jar
SLF4J: No SLF4J providers were found.
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See https://www.slf4j.org/codes.html#noProviders for further details.
SLF4J: Class path contains SLF4J bindings targeting slf4j-api versions 1.7.x or earlier.
SLF4J: Ignoring binding found at [jar:file:/home/victorlira/Documents/experiment/miningframework/dependencies/soot-analysis-0.2.1-SNAPSHOT-jar-with-dependencies.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See https://www.slf4j.org/codes.html#ignoredBindings for an explanation.
Configure Soot PDG 0,60300
Time to perform PDG 0,83600
CONFLICTS: [List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),445,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack128 = $stack127 - 1,445,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack128 = $stack127 - 1, 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128),445,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, token = virtualinvoke $stack126.<com.mitchellbosecke.pebble.lexer.TemplateSource: java.lang.String substring(int)>($stack128), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack130, token),446,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, specialinvoke this.<com.mitchellbosecke.pebble.lexer.LexerImpl: com.mitchellbosecke.pebble.lexer.Token pushToken(com.mitchellbosecke.pebble.lexer.Token$Type,java.lang.String)>($stack130, token), 446))), List(Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(),444,SourceNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack19 = virtualinvoke matcher.<java.util.regex.Matcher: boolean lookingAt()>(), 444)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,if $stack19 == 0 goto $stack21 = <com.mitchellbosecke.pebble.lexer.LexerImpl: java.util.regex.Pattern REGEX_NUMBER>,444,SourceNode, path: ) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(),445,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack127 = virtualinvoke matcher.<java.util.regex.Matcher: int end()>(), 445)) => Node(<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>,$stack128 = $stack127 - 1,445,SinkNode, path: (<com.mitchellbosecke.pebble.lexer.LexerImpl: void lexExpression()>, $stack128 = $stack127 - 1, 445)))]
 Analysis results
----------------------------
 Number of conflicts: 2
 Results exported to out.txt
 JSON Results exported to out.json
----------------------------
