SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack28 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),217,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack28 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = (char) $stack28,217,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack28, 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx),161,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = 0,156,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx),161,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1963,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1963))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack39 = backSlashIdx + 6,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack39 = backSlashIdx + 6, 195)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1963,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1963))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack7 = l0.<java.lang.String: char[] value>,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, $stack7 = l0.<java.lang.String: char[] value>, 1969))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557)) => Node(<java.lang.String: int indexOf(int,int)>,$stack8 = l4[l5],1559,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack8 = l4[l5], 1559))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557)) => Node(<java.lang.String: int indexOf(int,int)>,$stack8 = l4[l5],1559,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack8 = l4[l5], 1559))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack5 = l0,1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2),1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2), 1933))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack17 = l3[$stack16],1578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack17 = l3[$stack16], 1578))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack17 = l3[$stack16],1578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack17 = l3[$stack16], 1578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack13 = l3[l7],1579,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack13 = l3[l7], 1579))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack13 = l3[l7],1579,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack13 = l3[l7], 1579))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,$stack6 = l0.<java.lang.String: char[] value>,1546,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack6 = l0.<java.lang.String: char[] value>, 1546)) => Node(<java.lang.String: int indexOf(int,int)>,l3 = lengthof $stack6,1546,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l3 = lengthof $stack6, 1546))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,$stack6 = l0.<java.lang.String: char[] value>,1546,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack6 = l0.<java.lang.String: char[] value>, 1546)) => Node(<java.lang.String: int indexOf(int,int)>,l3 = lengthof $stack6,1546,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l3 = lengthof $stack6, 1546))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack11 = lengthof l3,1577,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack11 = lengthof l3, 1577))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack11 = lengthof l3,1577,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack11 = lengthof l3, 1577)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l6 = $stack11 - 1,1577,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l6 = $stack11 - 1, 1577))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = 0,156,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx),161,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx),161,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)) => Node(<java.lang.String: char charAt(int)>,$stack4 = lengthof $stack3,658,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack4 = lengthof $stack3, 658))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack5 = lengthof $stack4,1962,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, $stack5 = lengthof $stack4, 1962))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack5 = lengthof $stack4,1962,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, $stack5 = lengthof $stack4, 1962))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3),1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3),1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx),161,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = 0,156,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx),161,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = 0,156,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx),161,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx),161,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack13 = l3[l7],1579,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack13 = l3[l7], 1579))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack13 = l3[l7],1579,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack13 = l3[l7], 1579))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3),1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack5 = l0,1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2),1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2), 1933))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack5 = l0,1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2),1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2), 1933))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)) => Node(<java.lang.String: char charAt(int)>,$stack4 = lengthof $stack3,658,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack4 = lengthof $stack3, 658))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: void <init>(char[],int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = 0,156,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: void <init>(char[],int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3),1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack5 = l0,1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2),1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2), 1933))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3),1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3),1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1963,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1963))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1963,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1963))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3),1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,$stack6 = l0.<java.lang.String: char[] value>,1546,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack6 = l0.<java.lang.String: char[] value>, 1546)) => Node(<java.lang.String: int indexOf(int,int)>,l3 = lengthof $stack6,1546,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l3 = lengthof $stack6, 1546))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,$stack6 = l0.<java.lang.String: char[] value>,1546,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack6 = l0.<java.lang.String: char[] value>, 1546)) => Node(<java.lang.String: int indexOf(int,int)>,l3 = lengthof $stack6,1546,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l3 = lengthof $stack6, 1546))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack5 = l0,1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2),1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2), 1933))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx),161,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack6 = l0.<java.lang.String: char[] value>,1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack6 = l0.<java.lang.String: char[] value>, 1933)) => Node(<java.lang.String: void <init>(char[],int,int)>,l1 := @parameter0: char[],-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack4 = lengthof l1,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack4 = lengthof l1, 204))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx),161,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack11 = lengthof l3,1577,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack11 = lengthof l3, 1577))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack11 = lengthof l3,1577,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack11 = lengthof l3, 1577)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l6 = $stack11 - 1,1577,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l6 = $stack11 - 1, 1577))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack5 = lengthof $stack4,1962,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, $stack5 = lengthof $stack4, 1962))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack5 = lengthof $stack4,1962,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, $stack5 = lengthof $stack4, 1962))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack17 = l3[$stack16],1578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack17 = l3[$stack16], 1578))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack17 = l3[$stack16],1578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack17 = l3[$stack16], 1578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),198,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = (char) $stack42,198,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = 0,156,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557)) => Node(<java.lang.String: int indexOf(int,int)>,$stack8 = l4[l5],1559,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack8 = l4[l5], 1559))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557)) => Node(<java.lang.String: int indexOf(int,int)>,$stack8 = l4[l5],1559,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack8 = l4[l5], 1559))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack39 = backSlashIdx + 6,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack39 = backSlashIdx + 6, 195)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3),1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)) => Node(<java.lang.String: char charAt(int)>,$stack4 = lengthof $stack3,658,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack4 = lengthof $stack3, 658))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack17 = backSlashIdx + 1,167,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack17 = backSlashIdx + 1, 167)) => Node(<java.lang.String: char charAt(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<java.lang.String: char charAt(int)>,specialinvoke $stack2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1),658,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, specialinvoke $stack2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1), 658))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = 0,156,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3),1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3),1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),198,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = (char) $stack42,198,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack5 = l0,1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = 0,156,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2),1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2), 1933))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack28 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),217,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack28 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = (char) $stack28,217,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack28, 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack5 = l0,1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2),1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2), 1933))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx),234,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx),161,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3),1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))
SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = 0,156,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3),1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack5 = l0,1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2),1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2), 1933))

SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack5 = l0,1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234))
SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2),1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2), 1933))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = (char) $stack42,198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 199)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal Unicode escape sequence \'\\U"),223,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Illegal Unicode escape sequence \'\\U'), 223)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xx),223,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xx), 223)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unescaped backslash in: "),228,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Unescaped backslash in: '), 228)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s),228,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s), 228)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>(),228,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>(), 228)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incomplete Unicode escape sequence in: "),211,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Incomplete Unicode escape sequence in: '), 211)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = (char) $stack42,198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c),218,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 218)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unescaped backslash in: "),164,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Unescaped backslash in: '), 164)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = (char) $stack42,198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14),161,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14), 161)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = (char) $stack42,198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13),174,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13), 174)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx),234,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = (char) $stack42,198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10),178,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 178)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = (char) $stack42,198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = virtualinvoke s.<java.lang.String: char charAt(int)>($stack17),167,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = virtualinvoke s.<java.lang.String: char charAt(int)>($stack17), 167)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = (char) $stack42,198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = (char) $stack42,198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9),170,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9), 170)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sLength = virtualinvoke s.<java.lang.String: int length()>(),157,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Incomplete Unicode escape sequence in: "),192,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Incomplete Unicode escape sequence in: '), 192)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s),192,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s), 192)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>(),192,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>(), 192)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = (char) $stack42,198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34),182,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34), 182)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16),198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,c = (char) $stack42,198,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92),186,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92), 186)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal Unicode escape sequence \'\\u"),204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Illegal Unicode escape sequence \'\\u'), 204)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack15 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack14),201,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack15 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack14), 201)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,virtualinvoke this.<org.rdfhdt.hdt.triples.TripleString: void setPredicate(java.lang.CharSequence)>($stack15),201,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, virtualinvoke this.<org.rdfhdt.hdt.triples.TripleString: void setPredicate(java.lang.CharSequence)>($stack15), 201)))

List(Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa),188,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,if $stack7 != 60 goto $stack8 = posb - 1,188,SimpleNode, path: ) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posa = posa + 1,197,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posa = posa + 1, 197)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10),191,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)))

