[
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack13 = neg l2,594,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 187
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 187
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": 6511
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 589
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 594
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 589
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 594
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack13 = neg l2",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 594
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 201
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 201
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1574
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1574
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l3 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
					"line": 1574
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1963,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1963)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack25 = backSlashIdx + 10,214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack25 = backSlashIdx + 10, 214)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2),1963,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2), 1963))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack25 = backSlashIdx + 10",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 214
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1963
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1963
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke $stack14.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l2)",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String substring(int,int)>",
					"line": 1963
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557)) => Node(<java.lang.String: int indexOf(int,int)>,$stack8 = l4[l5],1559,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack8 = l4[l5], 1559)) SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557)) => Node(<java.lang.String: int indexOf(int,int)>,$stack8 = l4[l5],1559,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack8 = l4[l5], 1559))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": 1557
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": 1559
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": 1557
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": 1559
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack8 = l4[l5]",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int indexOf(int,int)>",
					"line": 1559
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 179
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 179
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(int,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(int,int)>",
	"line": 6563
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(int,int)>",
	"line": 6563
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(int,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(int,int)>",
	"line": 6563
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Character",
					"method": "<java.lang.Character: int digit(int,int)>",
					"line": 6563
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),196,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 196))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 183
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 183
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 196
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 196
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke $stack16.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3)",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: void <init>(char[],int,int)>",
					"line": 196
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<java.lang.String: char charAt(int)>,$stack5 = l0.<java.lang.String: char[] value>,660,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack5 = l0.<java.lang.String: char[] value>, 660)) => Node(<java.lang.String: char charAt(int)>,$stack6 = $stack5[l1],660,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 201
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 201
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 660
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack6 = $stack5[l1]",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: char charAt(int)>",
					"line": 660
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),592,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 592))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 149
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 149
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 220
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 592
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 592
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack11 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 592
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,$stack6 = l0.<java.lang.String: char[] value>,1546,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack6 = l0.<java.lang.String: char[] value>, 1546)) => Node(<java.lang.String: int indexOf(int,int)>,l3 = lengthof $stack6,1546,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l3 = lengthof $stack6, 1546)) SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,$stack6 = l0.<java.lang.String: char[] value>,1546,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack6 = l0.<java.lang.String: char[] value>, 1546)) => Node(<java.lang.String: int indexOf(int,int)>,l3 = lengthof $stack6,1546,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l3 = lengthof $stack6, 1546))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 201
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 201
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": 1546
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": 1546
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": 1546
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": 1546
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l3 = lengthof $stack6",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int indexOf(int,int)>",
					"line": 1546
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l5 = virtualinvoke l0.<java.lang.String: int length()>(),557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l5 = virtualinvoke l0.<java.lang.String: int length()>(), 557))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 231
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": 623
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": 623
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 557
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": 623
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": 623
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 557
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l5 = virtualinvoke l0.<java.lang.String: int length()>()",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 557
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack11 = lengthof l3,1577,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack11 = lengthof l3, 1577)) SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack11 = lengthof l3,1577,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack11 = lengthof l3, 1577)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l6 = $stack11 - 1,1577,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l6 = $stack11 - 1, 1577))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 201
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 201
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1574
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1577
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1577
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1574
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1577
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack11 = lengthof l3",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
					"line": 1577
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623)) => Node(<java.lang.String: int length()>,$stack2 = lengthof $stack1,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: int length()>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)) => Node(<java.lang.String: int length()>,$stack1 = l0.<java.lang.String: char[] value>,623,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157) => (<java.lang.String: int length()>, $stack1 = l0.<java.lang.String: char[] value>, 623))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 149
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 149
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 220
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": 623
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": 623
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int length()>",
	"line": 623
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack2 = lengthof $stack1",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int length()>",
					"line": 623
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.String: char charAt(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<java.lang.String: char charAt(int)>,$stack3 = l0.<java.lang.String: char[] value>,658,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack3 = l0.<java.lang.String: char[] value>, 658)) => Node(<java.lang.String: char charAt(int)>,$stack4 = lengthof $stack3,658,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, $stack4 = lengthof $stack3, 658)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack17 = backSlashIdx + 1,167,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack17 = backSlashIdx + 1, 167)) => Node(<java.lang.String: char charAt(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188)) => Node(<java.lang.String: char charAt(int)>,specialinvoke $stack2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1),658,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack7 = virtualinvoke line#2.<java.lang.String: char charAt(int)>(posa), 188) => (<java.lang.String: char charAt(int)>, specialinvoke $stack2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l1), 658))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack17 = backSlashIdx + 1",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 167
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 167
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 658
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 658
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: char charAt(int)>",
	"line": 658
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack4 = lengthof $stack3",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: char charAt(int)>",
					"line": 658
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx),161,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,sb = $stack10,158,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>(),236,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22),217,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack23 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack22), 217))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 175
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 175
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 161
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 158
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 236
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 217
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 217
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 217
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(int,int)>,l0 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(int,int)>,$stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511) => (<java.lang.Character: int digit(int,int)>, $stack2 = staticinvoke <java.lang.CharacterData: java.lang.CharacterData of(int)>(l0), 6563)) => Node(<java.lang.Character: int digit(int,int)>,$stack3 = virtualinvoke $stack2.<java.lang.CharacterData: int digit(int,int)>(l0, l1),6563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578) => (<java.lang.Character: int digit(char,int)>, $stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1), 6511)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,175,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 175
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 175
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": 6511
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(int,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(int,int)>",
	"line": 6563
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(int,int)>",
	"line": 6563
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": 6511
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1)",
				"location": {
					"file": "",
					"class": "java.lang.Character",
					"method": "<java.lang.Character: int digit(char,int)>",
					"line": 6511
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack5 = lengthof $stack4,1962,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, $stack5 = lengthof $stack4, 1962)) SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack4 = l0.<java.lang.String: char[] value>,1962,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, $stack4 = l0.<java.lang.String: char[] value>, 1962)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack5 = lengthof $stack4,1962,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, $stack5 = lengthof $stack4, 1962))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1962
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1962
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1962
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1962
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack5 = lengthof $stack4",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String substring(int,int)>",
					"line": 1962
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3),1967,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3), 1967))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 171
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 171
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1967
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1967
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "specialinvoke $stack13.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(l3)",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String substring(int,int)>",
					"line": 1967
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),583,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 583))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 187
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 187
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 583
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 583
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack21 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 583
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": 6511
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 578
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack6 = l2 + l3,207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack6 = l2 + l3, 207)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6),207,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6), 207))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 179
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 179
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 207
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 207
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 207
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 207
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack7 = staticinvoke <java.util.Arrays: char[] copyOfRange(char[],int,int)>(l1, l2, $stack6)",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: void <init>(char[],int,int)>",
					"line": 207
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557)) SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,l4 = l0.<java.lang.String: char[] value>,1557,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, l4 = l0.<java.lang.String: char[] value>, 1557))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 201
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 201
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": 1557
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": 1557
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l4 = l0.<java.lang.String: char[] value>",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int indexOf(int,int)>",
					"line": 1557
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 * l1,585,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 149
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 149
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 220
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": 6511
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 589
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 585
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 589
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 585
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l2 = l2 * l1",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 585
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92),149,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) => Node(<java.lang.String: void <init>(char[],int,int)>,l3 := @parameter2: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969)) => Node(<java.lang.String: void <init>(char[],int,int)>,$stack5 = $stack4 - l3,204,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969) => (<java.lang.String: void <init>(char[],int,int)>, $stack5 = $stack4 - l3, 204))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 149
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 149
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 220
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 204
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: void <init>(char[],int,int)>",
	"line": 204
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack5 = $stack4 - l3",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: void <init>(char[],int,int)>",
					"line": 204
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,187,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),569,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 569))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 187
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 187
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 569
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 569
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack27 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 569
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOf(int,int)>,$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2),1565,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": 1565
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": 1565
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2)",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int indexOf(int,int)>",
					"line": 1565
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack13 = l3[l7],1579,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack13 = l3[l7], 1579)) SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack13 = l3[l7],1579,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack13 = l3[l7], 1579))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 201
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 201
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1574
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1579
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1574
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1579
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack13 = l3[l7]",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
					"line": 1579
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 6,201,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),580,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 580))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 6",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 201
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 201
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 580
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 580
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack22 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 580
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572)) SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),572,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 572))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 572
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 572
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack26 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 572
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,171,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0),587,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0), 587))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 171
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 171
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 587
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 587
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack20 = staticinvoke <java.lang.NumberFormatException: java.lang.NumberFormatException forInputString(java.lang.String)>(l0)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 587
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586)) SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack17 = l6 + l8,586,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack17 = l6 + l8, 586))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": 6511
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 586
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 586
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack17 = l6 + l8",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 586
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0),563,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0), 563))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 179
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 179
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 563
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 563
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l9 = virtualinvoke l0.<java.lang.String: char charAt(int)>(0)",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 563
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack3 = l0.<java.lang.String: char[] value>,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack3 = l0.<java.lang.String: char[] value>, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack4 = lengthof $stack3,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, $stack4 = lengthof $stack3, 1929)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 179
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 179
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 220
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int)>",
	"line": 1929
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int)>",
	"line": 1929
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int)>",
	"line": 1929
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack4 = lengthof $stack3",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String substring(int)>",
					"line": 1929
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l2 := @parameter1: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l3 = l2 - l1,1965,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, l3 = l2 - l1, 1965))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 179
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 179
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1965
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l3 = l2 - l1",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String substring(int,int)>",
					"line": 1965
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,$stack6 = l0,1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = 0,156,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int,int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<java.lang.String: java.lang.String substring(int,int)>,specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3),1969,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191) => (<java.lang.String: java.lang.String substring(int,int)>, specialinvoke $stack6.<java.lang.String: void <init>(char[],int,int)>($stack7, l1, l3), 1969))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = 0",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 156
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 156
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1969
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int,int)>",
	"line": 1969
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack6 = l0",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String substring(int,int)>",
					"line": 1969
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack17 = l3[$stack16],1578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack17 = l3[$stack16], 1578)) SINK=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: int indexOf(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,l3 = l0.<java.lang.String: char[] value>,1574,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, l3 = l0.<java.lang.String: char[] value>, 1574)) => Node(<java.lang.String: int indexOfSupplementary(int,int)>,$stack17 = l3[$stack16],1578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185) => (<java.lang.String: int indexOf(int,int)>, $stack7 = specialinvoke l0.<java.lang.String: int indexOfSupplementary(int,int)>(l1, l2), 1565) => (<java.lang.String: int indexOfSupplementary(int,int)>, $stack17 = l3[$stack16], 1578))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 191
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1574
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1578
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOf(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1574
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
	"line": 1578
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack17 = l3[$stack16]",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: int indexOfSupplementary(int,int)>",
					"line": 1578
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25),214,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,183,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,$stack40 = backSlashIdx + 2,195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack40 = backSlashIdx + 2, 195)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39),195,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l0 := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,$stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, $stack15 = virtualinvoke l0.<java.lang.String: char charAt(int)>($stack14), 578)) => Node(<java.lang.Character: int digit(char,int)>,l0 := @parameter0: char,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Character: int digit(char,int)>,$stack2 = staticinvoke <java.lang.Character: int digit(int,int)>(l0, l1),6511,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1),578,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l8 = staticinvoke <java.lang.Character: int digit(char,int)>($stack15, l1), 578)) => Node(<java.lang.Integer: int parseInt(java.lang.String,int)>,l2 = l2 - l8,589,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198) => (<java.lang.Integer: int parseInt(java.lang.String,int)>, l2 = l2 * l1, 585))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 183
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 183
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 195
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": -1
},{
	"class": "java.lang.Character",
	"method": "<java.lang.Character: int digit(char,int)>",
	"line": 6511
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 589
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 214
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": -1
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 578
},{
	"class": "java.lang.Integer",
	"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
	"line": 589
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "l2 = l2 - l8",
				"location": {
					"file": "",
					"class": "java.lang.Integer",
					"method": "<java.lang.Integer: int parseInt(java.lang.String,int)>",
					"line": 589
				}
			}
		]
	}
},
{
	"type": "CONFLUENCE",
	"label": "CF conflict",
	"body": {
		"description": "SOURCE=>BASE: Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", " "),181,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa),185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack6 = virtualinvoke line#2.<java.lang.String: int indexOf(int,int)>(32, posa), 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = $stack6,185,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = $stack6, 185)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,posb = posb + -1,199,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, posb = posb + -1, 199)) => Node(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>,$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb),191,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,s := @parameter0: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)) => Node(<java.lang.String: java.lang.String substring(int)>,l0 := @this: java.lang.String,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,$stack5 = l0,1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) SINK=>BASE: Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 2,179,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx),231,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>,startIdx = backSlashIdx + 10,220,SourceNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)) => Node(<java.lang.String: java.lang.String substring(int)>,l1 := @parameter0: int,-1,SimpleNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)) => Node(<java.lang.String: java.lang.String substring(int)>,l2 = $stack4 - l1,1929,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, l2 = $stack4 - l1, 1929)) => Node(<java.lang.String: java.lang.String substring(int)>,specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2),1933,SinkNode, path: (<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191) => (<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234) => (<java.lang.String: java.lang.String substring(int)>, specialinvoke $stack5.<java.lang.String: void <init>(char[],int,int)>($stack6, l1, l2), 1933))",
		"interference": [
			{
				"type": "source1",
				"branch": "L",
				"text": "startIdx = backSlashIdx + 2",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.util.UnicodeEscape",
					"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
					"line": 179
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 179
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 231
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": 220
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int)>",
	"line": 1929
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int)>",
	"line": 1933
}]
			},
			{
				"type": "source2",
				"branch": "R",
				"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
				"location": {
					"file": "",
					"class": "org.rdfhdt.hdt.triples.TripleString",
					"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
					"line": 181
				},
				"stackTrace": [{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 181
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 185
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 199
},{
	"class": "org.rdfhdt.hdt.triples.TripleString",
	"method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
	"line": 191
},{
	"class": "org.rdfhdt.hdt.util.UnicodeEscape",
	"method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int)>",
	"line": -1
},{
	"class": "java.lang.String",
	"method": "<java.lang.String: java.lang.String substring(int)>",
	"line": 1933
}]
			},
			{
				"type": "confluence",
				"branch": "B",
				"text": "$stack5 = l0",
				"location": {
					"file": "",
					"class": "java.lang.String",
					"method": "<java.lang.String: java.lang.String substring(int)>",
					"line": 1933
				}
			}
		]
	}
}

,

{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l0 := @this: java.lang.String",
"location": {
  "file": "",
  "class": "java.lang.String",
  "method": "<java.lang.String: java.lang.String substring(int,int)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = l0",
"location": {
  "file": "",
  "class": "java.lang.String",
  "method": "<java.lang.String: java.lang.String substring(int,int)>",
  "line": "1969"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "214"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "195"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Unescaped backslash in: ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "164"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack59 = virtualinvoke $stack58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Unescaped backslash in: '), 164)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "195"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "c = (char) $stack42",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "sb = $stack10",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "158"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "161"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($stack14), 161)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "201"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack14 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 201)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "234"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack11 = virtualinvoke s.<java.lang.String: java.lang.String substring(int)>(startIdx), 234)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "195"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "c = (char) $stack42",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "sb = $stack10",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "158"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "186"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92), 186)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "l0 := @this: java.lang.String",
"location": {
  "file": "",
  "class": "java.lang.String",
  "method": "<java.lang.String: java.lang.String substring(int,int)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack6 = l0",
"location": {
  "file": "",
  "class": "java.lang.String",
  "method": "<java.lang.String: java.lang.String substring(int,int)>",
  "line": "1969"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "214"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack26, $stack25), 214)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Illegal Unicode escape sequence \'\\U')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "223"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack65 = virtualinvoke $stack64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Illegal Unicode escape sequence \'\\U'), 223)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xx)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "223"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack66 = virtualinvoke $stack65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(xx), 223)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "149"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int)>(92), 149)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "c = virtualinvoke s.<java.lang.String: char charAt(int)>($stack17)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "167"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = virtualinvoke s.<java.lang.String: char charAt(int)>($stack17), 167)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "backSlashIdx = virtualinvoke s.<java.lang.String: int indexOf(int,int)>(92, startIdx)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "231"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack14 = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>(startIdx, backSlashIdx), 161)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "195"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "c = (char) $stack42",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "sb = $stack10",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "158"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack13 = virtualinvoke sb.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "236"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "191"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack10 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 191)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "195"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "c = (char) $stack42",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "sb = $stack10",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "158"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "178"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10), 178)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "195"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Illegal Unicode escape sequence \'\\u')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "204"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack73 = virtualinvoke $stack72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Illegal Unicode escape sequence \'\\u'), 204)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "195"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "c = (char) $stack42",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "sb = $stack10",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "158"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "182"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34), 182)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "sLength = virtualinvoke s.<java.lang.String: int length()>()",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "157"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sLength = virtualinvoke s.<java.lang.String: int length()>(), 157)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Incomplete Unicode escape sequence in: ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "192"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack49 = virtualinvoke $stack48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Incomplete Unicode escape sequence in: '), 192)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "192"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack50 = virtualinvoke $stack49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s), 192)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "192"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack51 = virtualinvoke $stack50.<java.lang.StringBuilder: java.lang.String toString()>(), 192)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Unescaped backslash in: ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "228"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack21 = virtualinvoke $stack20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Unescaped backslash in: '), 228)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "228"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack22 = virtualinvoke $stack21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(s), 228)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>()",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "228"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack23 = virtualinvoke $stack22.<java.lang.StringBuilder: java.lang.String toString()>(), 228)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Incomplete Unicode escape sequence in: ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "211"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack35 = virtualinvoke $stack34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>('Incomplete Unicode escape sequence in: '), 211)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "195"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "c = (char) $stack42",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "sb = $stack10",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "158"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "218"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 218)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "195"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "c = (char) $stack42",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "199"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c), 199)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "195"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "c = (char) $stack42",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "sb = $stack10",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "158"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "195"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "195"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "c = (char) $stack42",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "sb = $stack10",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "158"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "174"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(13), 174)"]
}]
}
},
{
"type": "CONFLICT",
"label": "SVFA conflict",
"body": {
  "description": "SVFA conflict",
  "interference": [{
"type": "SourceNode",
"branch":"",
"text": "line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' ')",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "181"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, line#2 = virtualinvoke line.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>('\\t', ' '), 181)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "$stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.triples.TripleString",
  "method": "<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>",
  "line": "217"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack22 = virtualinvoke line#2.<java.lang.String: java.lang.String substring(int,int)>(posa, posb), 217)"]
}, {
"type": "SimpleNode",
"branch":"",
"text": "s := @parameter0: java.lang.String",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "-1"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "195"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, xx = virtualinvoke s.<java.lang.String: java.lang.String substring(int,int)>($stack40, $stack39), 195)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "$stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, $stack42 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>(xx, 16), 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "c = (char) $stack42",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "198"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, c = (char) $stack42, 198)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "sb = $stack10",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "158"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, sb = $stack10, 158)"]
}, {
"type": "SinkNode",
"branch":"",
"text": "virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9)",
"location": {
  "file": "",
  "class": "org.rdfhdt.hdt.util.UnicodeEscape",
  "method": "<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>",
  "line": "170"
},
"stackTrace": ["(<org.rdfhdt.hdt.triples.TripleString: void read(java.lang.String)>, $stack11 = staticinvoke <org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>($stack10), 191)","(<org.rdfhdt.hdt.util.UnicodeEscape: java.lang.String unescapeString(java.lang.String)>, virtualinvoke sb.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9), 170)"]
}]
}
}

]
